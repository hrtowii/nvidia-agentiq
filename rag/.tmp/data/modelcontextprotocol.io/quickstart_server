<!DOCTYPE html><html lang="en" class="dark"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width"/><link rel="apple-touch-icon" type="image/png" sizes="180x180" href="https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/apple-touch-icon.png?v=3"/><link rel="icon" type="image/png" sizes="32x32" href="https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon-32x32.png?v=3"/><link rel="icon" type="image/png" sizes="16x16" href="https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon-16x16.png?v=3"/><link rel="shortcut icon" type="image/x-icon" href="https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon.ico?v=3"/><meta name="msapplication-config" content="https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/browserconfig.xml?v=3"/><meta name="apple-mobile-web-app-title" content="Model Context Protocol"/><meta name="application-name" content="Model Context Protocol"/><meta name="msapplication-TileColor" content="#09090b"/><meta name="theme-color" content="#ffffff"/><meta name="generator" content="Mintlify"/><link rel="sitemap" type="application/xml" href="/sitemap.xml"/><meta name="charset" content="utf-8"/><meta name="og:type" content="website"/><meta name="og:site_name" content="Model Context Protocol"/><meta name="twitter:card" content="summary_large_image"/><meta name="og:title" content="For Server Developers - Model Context Protocol"/><meta name="twitter:title" content="For Server Developers - Model Context Protocol"/><meta name="og:description" content="Get started building your own server to use in Claude for Desktop and other clients."/><meta name="description" content="Get started building your own server to use in Claude for Desktop and other clients."/><meta name="og:image" content="https://raw.githubusercontent.com/modelcontextprotocol/docs/2eb6171ddbfeefde349dc3b8d5e2b87414c26250/images/og-image.png"/><meta property="og:image:width" content="1200"/><meta property="og:image:height" content="630"/><meta property="twitter:image" content="https://mcp.mintlify.app/mintlify-assets/_next/image?url=%2Fapi%2Fog%3Fdivision%3DDocumentation%26title%3DFor%2BServer%2BDevelopers%26description%3DGet%2Bstarted%2Bbuilding%2Byour%2Bown%2Bserver%2Bto%2Buse%2Bin%2BClaude%2Bfor%2BDesktop%2Band%2Bother%2Bclients.%26logoLight%3Dhttps%253A%252F%252Fmintlify.s3.us-west-1.amazonaws.com%252Fmcp%252Flogo%252Flight.svg%26logoDark%3Dhttps%253A%252F%252Fmintlify.s3.us-west-1.amazonaws.com%252Fmcp%252Flogo%252Fdark.svg%26primaryColor%3D%252309090b%26lightColor%3D%2523FAFAFA%26darkColor%3D%252309090b&amp;w=1200&amp;q=100"/><meta property="twitter:image:width" content="1200"/><meta property="twitter:image:height" content="630"/><title>For Server Developers - Model Context Protocol</title><meta name="og:url" content="/quickstart/server"/><link rel="canonical" href="/quickstart/server"/><meta name="next-head-count" content="30"/><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css" integrity="sha384-Xi8rHCmBmhbuyyhbI88391ZKP2dmfnOl4rT9ZfRI7mLTdk1wblIUnrIq35nqwEvC" crossorigin="anonymous"/><link rel="preload" href="/mintlify-assets/_next/static/media/a34f9d1faa5f3315-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/mintlify-assets/_next/static/media/bb3ef058b751a6ad-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><script id="mode-toggle" data-nscript="beforeInteractive">
      try {
        if (localStorage.isDarkMode === 'true') {
          document.documentElement.classList.add('dark');
        } else if (localStorage.isDarkMode === 'false') {
          document.documentElement.classList.remove('dark');
        } else if ((true && !('isDarkMode' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches) || false) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      } catch (_) {}</script><link rel="preload" href="/mintlify-assets/_next/static/css/45c3eaaab0014fc5.css" as="style"/><link rel="stylesheet" href="/mintlify-assets/_next/static/css/45c3eaaab0014fc5.css" data-n-g=""/><link rel="preload" href="/mintlify-assets/_next/static/css/8c76fb7d3768dfe7.css" as="style"/><link rel="stylesheet" href="/mintlify-assets/_next/static/css/8c76fb7d3768dfe7.css" data-n-p=""/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/mintlify-assets/_next/static/chunks/polyfills-42372ed130431b0a.js"></script><script src="/mintlify-assets/_next/static/chunks/webpack-ccc766cf26487e8b.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/framework-822fcadcf2c4b2cf.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/main-62e52a310a4175a3.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/pages/_app-88fdc25309cbb42a.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/2edb282b-a83f7ffd007bccf0.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/e893f787-f6a1094a35763a0d.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/086d643d-6f7196a364073d16.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/9498-3d5f4dcd260f14f4.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/5094-367d16afbf96e822.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/9099-a4db4f2b3443e9b0.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/474-f29cd88767d95c5d.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/pages/_sites/%5Bsubdomain%5D/%5B%5B...slug%5D%5D-180209af373e276d.js" defer=""></script><script src="/mintlify-assets/_next/static/rTNlc3N1jjUuGX8TQWQnB/_buildManifest.js" defer=""></script><script src="/mintlify-assets/_next/static/rTNlc3N1jjUuGX8TQWQnB/_ssgManifest.js" defer=""></script><style id="__jsx-168234603">:root{--font-inter:'__Inter_a4e4e2', '__Inter_Fallback_a4e4e2';--font-jetbrains-mono:'__JetBrains_Mono_3bbdad', '__JetBrains_Mono_Fallback_3bbdad'}</style></head><div id="__next"><main class="jsx-168234603"><style>:root {
    --primary: 9 9 11;
    --primary-light: 250 250 250;
    --primary-dark: 9 9 11;
    --background-light: 255 255 255;
    --background-dark: 14 14 16;
    --gray-50: 243 243 243;
    --gray-100: 238 238 238;
    --gray-200: 222 222 222;
    --gray-300: 206 206 206;
    --gray-400: 158 158 158;
    --gray-500: 112 112 112;
    --gray-600: 80 80 80;
    --gray-700: 62 62 62;
    --gray-800: 37 37 37;
    --gray-900: 23 23 23;
    --gray-950: 10 10 10;
  }</style><style>
#feature-support-matrix-wrapper {
    overflow-x: auto;
}

#feature-support-matrix-wrapper table {
    min-width: 800px;
}
</style><span class="fixed inset-0 bg-background-light dark:bg-background-dark -z-10"></span><div class="relative antialiased text-gray-500 dark:text-gray-400"><div class="z-[45] hidden"></div><div class="flex"><div class="hidden lg:flex fixed flex-col left-0 top-0 bottom-0 w-[19rem]" id="sidebar"><div class="flex-1 overflow-y-auto px-7 py-6 bg-gray-950/5 dark:bg-white/5" id="sidebar-content"><div class="flex justify-between items-center"><div class="flex items-center gap-x-4"><a href="/"><span class="sr-only">Model Context Protocol<!-- --> home page</span><img class="nav-logo w-auto relative object-contain block dark:hidden px-1 h-6" src="https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg" alt="light logo"/><img class="nav-logo w-auto relative object-contain hidden dark:block px-1 h-6" src="https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg" alt="dark logo"/></a></div></div><button type="button" class="hidden lg:flex relative flex-1 pointer-events-auto rounded-xl w-full items-center text-sm leading-6 py-1.5 pl-3.5 pr-3 shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.1] dark:ring-1 dark:hover:brightness-[1.25] ring-1 ring-gray-400/20 hover:ring-gray-600/25 dark:ring-gray-600/30 dark:hover:ring-gray-500/30 focus:outline-primary justify-between truncate gap-2 min-w-[43px] mt-6 bg-white" id="search-bar-entry"><div class="flex items-center gap-3 min-w-[42px]"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-search min-w-4 flex-none text-gray-700 hover:text-gray-800 dark:text-gray-300 hover:dark:text-gray-200"><circle cx="11" cy="11" r="8"></circle><path d="m21 21-4.3-4.3"></path></svg><div class="truncate min-w-0">Search...</div></div></button><div class="-mx-3 text-sm" id="navigation-items"><div class="mt-8"><li class="list-none"><a href="https://github.com/modelcontextprotocol/python-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/python.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/python.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>Python SDK</span></a></li><li class="list-none"><a href="https://github.com/modelcontextprotocol/typescript-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/square-js.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/square-js.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>TypeScript SDK</span></a></li><li class="list-none"><a href="https://github.com/modelcontextprotocol/java-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/java.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/java.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>Java SDK</span></a></li><li class="list-none"><a href="https://github.com/modelcontextprotocol/kotlin-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/square-k.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/square-k.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>Kotlin SDK</span></a></li><li class="list-none"><a href="https://github.com/modelcontextprotocol/csharp-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/square-c.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/square-c.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>C# SDK</span></a></li><li class="list-none"><a href="https://github.com/modelcontextprotocol/swift-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/swift.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/swift.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>Swift SDK</span></a></li></div><div class="mt-12 lg:mt-8"><div class="sidebar-group-header flex items-center gap-2.5 pl-4 mb-3.5 lg:mb-2.5 text-gray-900 dark:text-gray-200 font-medium"><h5 id="sidebar-title">Get Started</h5></div><ul id="sidebar-group"><li id="/introduction" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/introduction"><div class="flex-1 flex items-center space-x-2.5"><div class="">Introduction</div></div></a></li><li><div class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem"><div class="flex-1">Quickstart</div><svg width="8" height="24" viewBox="0 -9 3 24" class="transition-transform text-gray-400 overflow-visible group-hover:text-gray-600 dark:text-gray-600 dark:group-hover:text-gray-400 -mr-0.5 duration-75 rotate-90"><path d="M0 0L3 3L0 6" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div><ul><li id="/quickstart/server" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-primary dark:border-primary-light text-primary font-semibold dark:text-primary-light" style="padding-left:1.75rem" href="/quickstart/server"><div class="flex-1 flex items-center space-x-2.5"><div class="">For Server Developers</div></div></a></li><li id="/quickstart/client" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1.75rem" href="/quickstart/client"><div class="flex-1 flex items-center space-x-2.5"><div class="">For Client Developers</div></div></a></li><li id="/quickstart/user" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1.75rem" href="/quickstart/user"><div class="flex-1 flex items-center space-x-2.5"><div class="">For Claude Desktop Users</div></div></a></li></ul></li><li id="/examples" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/examples"><div class="flex-1 flex items-center space-x-2.5"><div class="">Example Servers</div></div></a></li><li id="/clients" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/clients"><div class="flex-1 flex items-center space-x-2.5"><div class="">Example Clients</div></div></a></li><li id="/faqs" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/faqs"><div class="flex-1 flex items-center space-x-2.5"><div class="">FAQs</div></div></a></li></ul></div><div class="mt-12 lg:mt-8"><div class="sidebar-group-header flex items-center gap-2.5 pl-4 mb-3.5 lg:mb-2.5 text-gray-900 dark:text-gray-200 font-medium"><h5 id="sidebar-title">Tutorials</h5></div><ul id="sidebar-group"><li id="/tutorials/building-mcp-with-llms" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/tutorials/building-mcp-with-llms"><div class="flex-1 flex items-center space-x-2.5"><div class="">Building MCP with LLMs</div></div></a></li><li id="/docs/tools/debugging" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/tools/debugging"><div class="flex-1 flex items-center space-x-2.5"><div class="">Debugging</div></div></a></li><li id="/docs/tools/inspector" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/tools/inspector"><div class="flex-1 flex items-center space-x-2.5"><div class="">Inspector</div></div></a></li></ul></div><div class="mt-12 lg:mt-8"><div class="sidebar-group-header flex items-center gap-2.5 pl-4 mb-3.5 lg:mb-2.5 text-gray-900 dark:text-gray-200 font-medium"><h5 id="sidebar-title">Concepts</h5></div><ul id="sidebar-group"><li id="/docs/concepts/architecture" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/architecture"><div class="flex-1 flex items-center space-x-2.5"><div class="">Core architecture</div></div></a></li><li id="/docs/concepts/resources" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/resources"><div class="flex-1 flex items-center space-x-2.5"><div class="">Resources</div></div></a></li><li id="/docs/concepts/prompts" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/prompts"><div class="flex-1 flex items-center space-x-2.5"><div class="">Prompts</div></div></a></li><li id="/docs/concepts/tools" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/tools"><div class="flex-1 flex items-center space-x-2.5"><div class="">Tools</div></div></a></li><li id="/docs/concepts/sampling" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/sampling"><div class="flex-1 flex items-center space-x-2.5"><div class="">Sampling</div></div></a></li><li id="/docs/concepts/roots" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/roots"><div class="flex-1 flex items-center space-x-2.5"><div class="">Roots</div></div></a></li><li id="/docs/concepts/transports" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/transports"><div class="flex-1 flex items-center space-x-2.5"><div class="">Transports</div></div></a></li></ul></div><div class="mt-12 lg:mt-8"><div class="sidebar-group-header flex items-center gap-2.5 pl-4 mb-3.5 lg:mb-2.5 text-gray-900 dark:text-gray-200 font-medium"><h5 id="sidebar-title">Development</h5></div><ul id="sidebar-group"><li id="/development/updates" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/development/updates"><div class="flex-1 flex items-center space-x-2.5"><div class="">What&#x27;s New</div></div></a></li><li id="/development/roadmap" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/development/roadmap"><div class="flex-1 flex items-center space-x-2.5"><div class="">Roadmap</div></div></a></li><li id="/development/contributing" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/development/contributing"><div class="flex-1 flex items-center space-x-2.5"><div class="">Contributing</div></div></a></li></ul></div></div></div></div><div class="block lg:hidden"><div id="navbar" class="z-30 fixed lg:sticky top-0 w-full"><div id="navbar-transition" class="absolute w-full h-full backdrop-blur flex-none transition-colors duration-500 border-b border-gray-500/5 dark:border-gray-300/[0.06] supports-backdrop-blur:bg-background-light/60 dark:bg-transparent"></div><div class="max-w-8xl mx-auto relative"><div class=""><div class="relative"><div class="flex items-center lg:px-12 h-16 min-w-0 mx-4 lg:mx-0"><div class="h-full relative flex-1 flex items-center gap-x-4 min-w-0 border-b border-gray-500/5 dark:border-gray-300/[0.06]"><div class="flex-1 flex items-center gap-x-4"><a href="/"><span class="sr-only">Model Context Protocol<!-- --> home page</span><img class="nav-logo w-auto h-7 relative object-contain block dark:hidden" src="https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg" alt="light logo"/><img class="nav-logo w-auto h-7 relative object-contain hidden dark:block" src="https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg" alt="dark logo"/></a><div class="flex items-center gap-x-2"></div></div><button type="button" class="hidden lg:flex relative flex-1 pointer-events-auto rounded-xl w-full items-center text-sm leading-6 py-1.5 pl-3.5 pr-3 shadow-sm text-gray-400 dark:text-white/50 bg-background-light dark:bg-background-dark dark:brightness-[1.1] dark:ring-1 dark:hover:brightness-[1.25] ring-1 ring-gray-400/20 hover:ring-gray-600/25 dark:ring-gray-600/30 dark:hover:ring-gray-500/30 focus:outline-primary justify-between truncate gap-2 min-w-[43px]" id="search-bar-entry"><div class="flex items-center gap-3 min-w-[42px]"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-search min-w-4 flex-none text-gray-700 hover:text-gray-800 dark:text-gray-300 hover:dark:text-gray-200"><circle cx="11" cy="11" r="8"></circle><path d="m21 21-4.3-4.3"></path></svg><div class="truncate min-w-0">Search...</div></div></button><div class="flex-1 relative hidden lg:flex items-center ml-auto justify-end space-x-4"><nav class="text-sm"><ul class="flex space-x-6 items-center"><li class="block lg:hidden"><a class="whitespace-nowrap font-medium text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" href="https://github.com/modelcontextprotocol">GitHub</a></li><li class="whitespace-nowrap hidden lg:flex" id="topbar-cta-button"><a target="_blank" class="group py-1.5 relative inline-flex items-center text-sm font-medium" href="https://github.com/modelcontextprotocol"><div class="space-x-2.5 flex items-center text-gray-950/90 dark:text-white/90 hover:text-gray-950 dark:hover:text-white"><span class="z-10">GitHub</span><svg width="3" height="24" viewBox="0 -9 3 24" class="h-5 rotate-0 overflow-visible text-current"><path d="M0 0L3 3L0 6" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a></li></ul></nav><div class="flex items-center"><button class="group p-2 flex items-center justify-center" aria-label="Toggle dark mode"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" stroke="currentColor" xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 block text-gray-400 dark:hidden group-hover:text-gray-600"><g clip-path="url(#clip0_2880_7340)"><path d="M8 1.11133V2.00022" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12.8711 3.12891L12.2427 3.75735" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M14.8889 8H14" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12.8711 12.8711L12.2427 12.2427" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M8 14.8889V14" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M3.12891 12.8711L3.75735 12.2427" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M1.11133 8H2.00022" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M3.12891 3.12891L3.75735 3.75735" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M8.00043 11.7782C10.0868 11.7782 11.7782 10.0868 11.7782 8.00043C11.7782 5.91402 10.0868 4.22266 8.00043 4.22266C5.91402 4.22266 4.22266 5.91402 4.22266 8.00043C4.22266 10.0868 5.91402 11.7782 8.00043 11.7782Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></g><defs><clipPath id="clip0_2880_7340"><rect width="16" height="16" fill="white"></rect></clipPath></defs></svg><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-moon h-4 w-4 hidden dark:block text-gray-500 dark:group-hover:text-gray-300"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path></svg></button></div></div><div class="flex lg:hidden items-center gap-2"><button type="button" class="text-gray-500 w-8 h-8 flex items-center justify-center hover:text-gray-600 dark:text-gray-400 dark:hover:text-gray-300" id="search-bar-entry-mobile"><span class="sr-only">Search...</span><svg class="h-4 w-4 bg-gray-500 dark:bg-gray-400 hover:bg-gray-600 dark:hover:bg-gray-300" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/magnifying-glass.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/magnifying-glass.svg);mask-repeat:no-repeat;mask-position:center"></svg></button><button aria-label="More actions" class="h-7 w-5 flex items-center justify-end"><svg class="h-4 w-4 bg-gray-500 dark:bg-gray-400 hover:bg-gray-600 dark:hover:bg-gray-300" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/ellipsis-vertical.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/ellipsis-vertical.svg);mask-repeat:no-repeat;mask-position:center"></svg></button></div></div></div><button type="button" class="flex items-center h-14 py-4 px-5 lg:hidden"><div class="text-gray-500 hover:text-gray-600 dark:text-gray-400 dark:hover:text-gray-300"><span class="sr-only">Navigation</span><svg class="h-4" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z"></path></svg></div><div class="ml-4 flex text-sm leading-6 whitespace-nowrap min-w-0 space-x-3"><div class="flex items-center space-x-3"><span>Quickstart</span><svg width="3" height="24" viewBox="0 -9 3 24" class="h-5 rotate-0 overflow-visible fill-gray-400"><path d="M0 0L3 3L0 6" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div><div class="font-semibold text-gray-900 truncate dark:text-gray-200">For Server Developers</div></div></button></div><div class="hidden lg:flex px-12 h-12"><div class="nav-tabs h-full flex text-sm space-x-6"><a class="link nav-tabs-item group relative h-full flex items-center hover:text-gray-800 dark:hover:text-gray-300 text-gray-800 dark:text-gray-200 font-semibold" href="/introduction">User Guide<div class="absolute bottom-0 h-[1.5px] w-full bg-primary dark:bg-primary-light"></div></a><a class="link nav-tabs-item group relative h-full flex items-center font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300" href="/sdk/java/mcp-overview">SDKs<div class="absolute bottom-0 h-[1.5px] w-full group-hover:bg-gray-200 dark:group-hover:bg-gray-700"></div></a><a class="link nav-tabs-item group relative h-full flex items-center font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300" href="/specification/2025-03-26">Specification<div class="absolute bottom-0 h-[1.5px] w-full group-hover:bg-gray-200 dark:group-hover:bg-gray-700"></div></a></div></div></div></div></div></div><div class="relative w-full lg:ml-[19rem] flex gap-x-8 pt-40 px-4 lg:pt-10 lg:pl-16 lg:pr-10 lg:mt-12"><div id="navbar-transition-willow" class="z-20 hidden lg:flex fixed top-0 left-[19rem] h-12 px-14 right-0 bottom-0 backdrop-blur flex-none transition-colors duration-500 border-b border-gray-200/40 dark:border-white/[0.07] space-x-6 supports-backdrop-blur:bg-background-light/60 dark:bg-transparent"><div class="flex-1"><div class="nav-tabs h-full flex text-sm space-x-6"><a class="link nav-tabs-item group relative h-full flex items-center hover:text-gray-800 dark:hover:text-gray-300 text-gray-800 dark:text-gray-200 font-semibold" href="/introduction">User Guide<div class="absolute bottom-0 h-[1.5px] w-full bg-primary dark:bg-primary-light"></div></a><a class="link nav-tabs-item group relative h-full flex items-center font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300" href="/sdk/java/mcp-overview">SDKs<div class="absolute bottom-0 h-[1.5px] w-full group-hover:bg-gray-200 dark:group-hover:bg-gray-700"></div></a><a class="link nav-tabs-item group relative h-full flex items-center font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300" href="/specification/2025-03-26">Specification<div class="absolute bottom-0 h-[1.5px] w-full group-hover:bg-gray-200 dark:group-hover:bg-gray-700"></div></a></div></div><div class="flex items-center text-sm space-x-6 list-none"><li class="whitespace-nowrap hidden lg:flex" id="topbar-cta-button"><a target="_blank" class="group py-1.5 relative inline-flex items-center text-sm font-medium" href="https://github.com/modelcontextprotocol"><div class="space-x-2.5 flex items-center text-gray-950/90 dark:text-white/90 hover:text-gray-950 dark:hover:text-white"><span class="z-10">GitHub</span><svg width="3" height="24" viewBox="0 -9 3 24" class="h-5 rotate-0 overflow-visible text-current"><path d="M0 0L3 3L0 6" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a></li></div><div class="flex items-center"><button class="group p-2 flex items-center justify-center" aria-label="Toggle dark mode"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" stroke="currentColor" xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 block text-gray-400 dark:hidden group-hover:text-gray-600"><g clip-path="url(#clip0_2880_7340)"><path d="M8 1.11133V2.00022" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12.8711 3.12891L12.2427 3.75735" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M14.8889 8H14" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12.8711 12.8711L12.2427 12.2427" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M8 14.8889V14" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M3.12891 12.8711L3.75735 12.2427" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M1.11133 8H2.00022" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M3.12891 3.12891L3.75735 3.75735" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M8.00043 11.7782C10.0868 11.7782 11.7782 10.0868 11.7782 8.00043C11.7782 5.91402 10.0868 4.22266 8.00043 4.22266C5.91402 4.22266 4.22266 5.91402 4.22266 8.00043C4.22266 10.0868 5.91402 11.7782 8.00043 11.7782Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></g><defs><clipPath id="clip0_2880_7340"><rect width="16" height="16" fill="white"></rect></clipPath></defs></svg><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-moon h-4 w-4 hidden dark:block text-gray-500 dark:group-hover:text-gray-300"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path></svg></button></div></div><div class="flex flex-col box-border w-full relative grow mx-auto max-w-xl 2xl:max-w-2xl xl:w-[calc(100%-28rem)]" id="content-area"><header id="header" class="relative"><div class="mt-0.5 space-y-2.5"><div class="eyebrow h-5 text-primary dark:text-primary-light text-sm font-semibold">Quickstart</div><div class="flex items-center relative gap-2"><h1 id="page-title" class="inline-block text-2xl sm:text-3xl font-bold text-gray-900 tracking-tight dark:text-gray-200">For Server Developers</h1><div id="page-context-menu" class="absolute right-0 flex items-center justify-center -top-2"><button id="page-context-menu-button" class="rounded-l-xl px-3 text-gray-700 dark:text-gray-300 py-1.5 border border-gray-200 dark:border-white/[0.07] bg-background-light dark:bg-background-dark hover:bg-gray-600/5 dark:hover:bg-gray-200/5 border-r-0"><div class="flex items-center gap-2 text-sm text-center font-medium"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4"><path d="M14.25 5.25H7.25C6.14543 5.25 5.25 6.14543 5.25 7.25V14.25C5.25 15.3546 6.14543 16.25 7.25 16.25H14.25C15.3546 16.25 16.25 15.3546 16.25 14.25V7.25C16.25 6.14543 15.3546 5.25 14.25 5.25Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M2.80103 11.998L1.77203 5.07397C1.61003 3.98097 2.36403 2.96397 3.45603 2.80197L10.38 1.77297C11.313 1.63397 12.19 2.16297 12.528 3.00097" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg><span>Copy page</span></div></button><button class="group bg-background-light dark:bg-background-dark disabled:pointer-events-none [&amp;&gt;span]:line-clamp-1 overflow-hidden group outline-none flex items-center py-0.5 gap-1 text-sm text-gray-950/50 dark:text-white/50 group-hover:text-gray-950/70 dark:group-hover:text-white/70 rounded-none rounded-r-xl border px-3 border-gray-200 aspect-square dark:border-white/[0.07] bg-background-light dark:bg-background-dark hover:bg-gray-600/5 dark:hover:bg-gray-200/5" type="button" id="radix-:R2sjakql6:" aria-haspopup="menu" aria-expanded="false" data-state="closed"><svg width="8" height="24" viewBox="0 -9 3 24" class="transition-transform text-gray-400 overflow-visible group-hover:text-gray-600 dark:text-gray-600 dark:group-hover:text-gray-400 rotate-90"><path d="M0 0L3 3L0 6" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></button></div></div></div><div class="mt-2 text-lg prose prose-gray dark:prose-invert"><p>Get started building your own server to use in Claude for Desktop and other clients.</p></div></header><div class="flex flex-col gap-8"></div><div class="mdx-content relative mt-8 prose prose-gray dark:prose-invert"><p>In this tutorial, we’ll build a simple MCP weather server and connect it to a host, Claude for Desktop. We’ll start with a basic setup, and then progress to more complex use cases.</p>
<h3 class="flex whitespace-pre-wrap group font-semibold" id="what-we%E2%80%99ll-be-building"><div class="absolute"><a href="#what-we%E2%80%99ll-be-building" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">What we’ll be building</span></h3>
<p>Many LLMs do not currently have the ability to fetch the forecast and severe weather alerts. Let’s use MCP to solve that!</p>
<p>We’ll build a server that exposes two tools: <code>get-alerts</code> and <code>get-forecast</code>. Then we’ll connect the server to an MCP host (in this case, Claude for Desktop):</p>
<div><div data-name="frame" class="frame p-2 not-prose relative bg-gray-50/50 rounded-2xl overflow-hidden dark:bg-gray-800/25"><div style="background-position:10px 10px" class="absolute inset-0 bg-grid-neutral-200/20 [mask-image:linear-gradient(0deg,#fff,rgba(255,255,255,0.6))] dark:bg-grid-white/5 dark:[mask-image:linear-gradient(0deg,rgba(255,255,255,0.1),rgba(255,255,255,0.5))]"></div><div class="relative rounded-xl overflow-hidden flex justify-center"></div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-2xl dark:border-white/5"></div></div></div>
<div><div data-name="frame" class="frame p-2 not-prose relative bg-gray-50/50 rounded-2xl overflow-hidden dark:bg-gray-800/25"><div style="background-position:10px 10px" class="absolute inset-0 bg-grid-neutral-200/20 [mask-image:linear-gradient(0deg,#fff,rgba(255,255,255,0.6))] dark:bg-grid-white/5 dark:[mask-image:linear-gradient(0deg,rgba(255,255,255,0.1),rgba(255,255,255,0.5))]"></div><div class="relative rounded-xl overflow-hidden flex justify-center"></div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-2xl dark:border-white/5"></div></div></div>
<div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>Servers can connect to any client. We’ve chosen Claude for Desktop here for simplicity, but we also have guides on <a class="link" href="/quickstart/client">building your own client</a> as well as a <a class="link" href="/clients">list of other clients here</a>.</p></div></div>
<div role="button" class="accordion border-standard rounded-2xl mb-3 overflow-hidden bg-background-light dark:bg-codeblock cursor-default"><button class="relative not-prose flex flex-row items-center content-center w-full py-4 px-5 space-x-2 hover:bg-gray-100 hover:dark:bg-gray-800 rounded-t-xl" aria-controls="why-claude-for-desktop-and-not-claude-ai accordion children" aria-expanded="false" data-component-part="accordion-button"><div id="why-claude-for-desktop-and-not-claude-ai" class="absolute -top-[8rem]"></div><div class="mr-0.5" data-component-part="accordion-caret-right"><svg class="h-3 w-3 transition bg-gray-700 dark:bg-gray-400 duration-75" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/caret-right.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/caret-right.svg);mask-repeat:no-repeat;mask-position:center"></svg></div><div class="leading-tight text-left" contenteditable="false" data-component-part="accordion-title-container"><p class="m-0 font-medium text-gray-900 dark:text-gray-200" data-component-part="accordion-title">Why Claude for Desktop and not Claude.ai?</p></div></button><div id="why-claude-for-desktop-and-not-claude-ai accordion children" role="contentinfo" class="mt-2 mb-4 mx-6 hidden overflow-x-auto cursor-default" data-component-part="accordion-content"><p>Because servers are locally run, MCP currently only supports desktop hosts. Remote hosts are in active development.</p></div></div>
<h3 class="flex whitespace-pre-wrap group font-semibold" id="core-mcp-concepts"><div class="absolute"><a href="#core-mcp-concepts" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Core MCP Concepts</span></h3>
<p>MCP servers can provide three main types of capabilities:</p>
<ol>
<li><strong>Resources</strong>: File-like data that can be read by clients (like API responses or file contents)</li>
<li><strong>Tools</strong>: Functions that can be called by the LLM (with user approval)</li>
<li><strong>Prompts</strong>: Pre-written templates that help users accomplish specific tasks</li>
</ol>
<p>This tutorial will primarily focus on tools.</p>
<div class="tabs tabs tab-container" id="python"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">Python</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Node</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Java</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Kotlin</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">C#</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><p>Let’s get started with building our weather server! <a href="https://github.com/modelcontextprotocol/quickstart-resources/tree/main/weather-server-python" target="_blank" rel="noreferrer" class="link">You can find the complete code for what we’ll be building here.</a></p><h3 class="flex whitespace-pre-wrap group font-semibold" id="prerequisite-knowledge"><div class="absolute"><a href="#prerequisite-knowledge" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Prerequisite knowledge</span></h3><p>This quickstart assumes you have familiarity with:</p><ul>
<li>Python</li>
<li>LLMs like Claude</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements"><div class="absolute"><a href="#system-requirements" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System requirements</span></h3><ul>
<li>Python 3.10 or higher installed.</li>
<li>You must use the Python MCP SDK 1.2.0 or higher.</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="set-up-your-environment"><div class="absolute"><a href="#set-up-your-environment" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Set up your environment</span></h3><p>First, let’s install <code>uv</code> and set up our Python project and environment:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:R2m4pipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">MacOS/Linux</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R4m4pipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">Windows</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:Rq4pipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token function">curl</span> <span class="token parameter variable">-LsSf</span> https://astral.sh/uv/install.sh <span class="token operator">|</span> <span class="token function">sh</span></span>
</code></pre></div></div><span id="headlessui-tabs-panel-:R1a4pipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>Make sure to restart your terminal afterwards to ensure that the <code>uv</code> command gets picked up.</p><p>Now, let’s create and set up our project:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:R2m69ipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">MacOS/Linux</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R4m69ipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">Windows</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:Rq69ipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Create a new directory for our project</span></span>
<span class="">uv init weather</span>
<span class=""><span class="token builtin class-name">cd</span> weather</span>
<!-- -->
<span class=""><span class="token comment"># Create virtual environment and activate it</span></span>
<span class="">uv venv</span>
<span class=""><span class="token builtin class-name">source</span> .venv/bin/activate</span>
<!-- -->
<span class=""><span class="token comment"># Install dependencies</span></span>
<span class="">uv <span class="token function">add</span> <span class="token string">&quot;mcp[cli]&quot;</span> httpx</span>
<!-- -->
<span class=""><span class="token comment"># Create our server file</span></span>
<span class=""><span class="token function">touch</span> weather.py</span>
</code></pre></div></div><span id="headlessui-tabs-panel-:R1a69ipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>Now let’s dive into building your server.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="building-your-server"><div class="absolute"><a href="#building-your-server" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Building your server</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="importing-packages-and-setting-up-the-instance"><div class="absolute"><a href="#importing-packages-and-setting-up-the-instance" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Importing packages and setting up the instance</span></h3><p>Add these to the top of your <code>weather.py</code>:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">from</span> typing <span class="token keyword">import</span> Any</span>
<span class=""><span class="token keyword">import</span> httpx</span>
<span class=""><span class="token keyword">from</span> mcp<span class="token punctuation">.</span>server<span class="token punctuation">.</span>fastmcp <span class="token keyword">import</span> FastMCP</span>
<!-- -->
<span class=""><span class="token comment"># Initialize FastMCP server</span></span>
<span class="">mcp <span class="token operator">=</span> FastMCP<span class="token punctuation">(</span><span class="token string">&quot;weather&quot;</span><span class="token punctuation">)</span></span>
<!-- -->
<span class=""><span class="token comment"># Constants</span></span>
<span class="">NWS_API_BASE <span class="token operator">=</span> <span class="token string">&quot;https://api.weather.gov&quot;</span></span>
<span class="">USER_AGENT <span class="token operator">=</span> <span class="token string">&quot;weather-app/1.0&quot;</span></span>
</code></pre></div></div></div><p>The FastMCP class uses Python type hints and docstrings to automatically generate tool definitions, making it easy to create and maintain MCP tools.</p><h3 class="flex whitespace-pre-wrap group font-semibold" id="helper-functions"><div class="absolute"><a href="#helper-functions" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Helper functions</span></h3><p>Next, let’s add our helper functions for querying and formatting the data from the National Weather Service API:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">make_nws_request</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Any<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token triple-quoted-string string">&quot;&quot;&quot;Make a request to the NWS API with proper error handling.&quot;&quot;&quot;</span></span>
<span class="">    headers <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> USER_AGENT<span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;Accept&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/geo+json&quot;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">    <span class="token keyword">async</span> <span class="token keyword">with</span> httpx<span class="token punctuation">.</span>AsyncClient<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="">            response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">30.0</span><span class="token punctuation">)</span></span>
<span class="">            response<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">            <span class="token keyword">return</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span></span>
<span class="">            <span class="token keyword">return</span> <span class="token boolean">None</span></span>
<!-- -->
<span class=""><span class="token keyword">def</span> <span class="token function">format_alert</span><span class="token punctuation">(</span>feature<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token triple-quoted-string string">&quot;&quot;&quot;Format an alert feature into a readable string.&quot;&quot;&quot;</span></span>
<span class="">    props <span class="token operator">=</span> feature<span class="token punctuation">[</span><span class="token string">&quot;properties&quot;</span><span class="token punctuation">]</span></span>
<span class="">    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;&quot;</span></span>&quot;</span>
<span class="">Event<span class="token punctuation">:</span> <span class="token punctuation">{</span>props<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#x27;event&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;Unknown&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">Area<span class="token punctuation">:</span> <span class="token punctuation">{</span>props<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#x27;areaDesc&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;Unknown&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">Severity<span class="token punctuation">:</span> <span class="token punctuation">{</span>props<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#x27;severity&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;Unknown&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">Description<span class="token punctuation">:</span> <span class="token punctuation">{</span>props<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#x27;description&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;No description available&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">Instructions<span class="token punctuation">:</span> <span class="token punctuation">{</span>props<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#x27;instruction&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;No specific instructions provided&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class=""><span class="token string">&quot;&quot;</span>&quot;</span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="implementing-tool-execution"><div class="absolute"><a href="#implementing-tool-execution" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Implementing tool execution</span></h3><p>The tool execution handler is responsible for actually executing the logic of each tool. Let’s add it:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token decorator annotation punctuation">@mcp<span class="token punctuation">.</span>tool</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_alerts</span><span class="token punctuation">(</span>state<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;Get weather alerts <span class="token keyword">for</span> a US state<span class="token punctuation">.</span></span>
<!-- -->
<span class="">    Args<span class="token punctuation">:</span></span>
<span class="">        state<span class="token punctuation">:</span> Two<span class="token operator">-</span>letter US state code <span class="token punctuation">(</span>e<span class="token punctuation">.</span>g<span class="token punctuation">.</span> CA<span class="token punctuation">,</span> NY<span class="token punctuation">)</span></span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;</span>
<span class="">    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>NWS_API_BASE<span class="token punctuation">}</span></span><span class="token string">/alerts/active/area/</span><span class="token interpolation"><span class="token punctuation">{</span>state<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span></span>
<span class="">    data <span class="token operator">=</span> <span class="token keyword">await</span> make_nws_request<span class="token punctuation">(</span>url<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">if</span> <span class="token keyword">not</span> data <span class="token keyword">or</span> <span class="token string">&quot;features&quot;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">return</span> <span class="token string">&quot;Unable to fetch alerts or no alerts found.&quot;</span></span>
<!-- -->
<span class="">    <span class="token keyword">if</span> <span class="token keyword">not</span> data<span class="token punctuation">[</span><span class="token string">&quot;features&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">return</span> <span class="token string">&quot;No active alerts for this state.&quot;</span></span>
<!-- -->
<span class="">    alerts <span class="token operator">=</span> <span class="token punctuation">[</span>format_alert<span class="token punctuation">(</span>feature<span class="token punctuation">)</span> <span class="token keyword">for</span> feature <span class="token keyword">in</span> data<span class="token punctuation">[</span><span class="token string">&quot;features&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="">    <span class="token keyword">return</span> <span class="token string">&quot;\n---\n&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>alerts<span class="token punctuation">)</span></span>
<!-- -->
<span class=""><span class="token decorator annotation punctuation">@mcp<span class="token punctuation">.</span>tool</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_forecast</span><span class="token punctuation">(</span>latitude<span class="token punctuation">:</span> <span class="token builtin">float</span><span class="token punctuation">,</span> longitude<span class="token punctuation">:</span> <span class="token builtin">float</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;Get weather forecast <span class="token keyword">for</span> a location<span class="token punctuation">.</span></span>
<!-- -->
<span class="">    Args<span class="token punctuation">:</span></span>
<span class="">        latitude<span class="token punctuation">:</span> Latitude of the location</span>
<span class="">        longitude<span class="token punctuation">:</span> Longitude of the location</span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;</span>
<span class="">    <span class="token comment"># First get the forecast grid endpoint</span></span>
<span class="">    points_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>NWS_API_BASE<span class="token punctuation">}</span></span><span class="token string">/points/</span><span class="token interpolation"><span class="token punctuation">{</span>latitude<span class="token punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token punctuation">{</span>longitude<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span></span>
<span class="">    points_data <span class="token operator">=</span> <span class="token keyword">await</span> make_nws_request<span class="token punctuation">(</span>points_url<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">if</span> <span class="token keyword">not</span> points_data<span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">return</span> <span class="token string">&quot;Unable to fetch forecast data for this location.&quot;</span></span>
<!-- -->
<span class="">    <span class="token comment"># Get the forecast URL from the points response</span></span>
<span class="">    forecast_url <span class="token operator">=</span> points_data<span class="token punctuation">[</span><span class="token string">&quot;properties&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;forecast&quot;</span><span class="token punctuation">]</span></span>
<span class="">    forecast_data <span class="token operator">=</span> <span class="token keyword">await</span> make_nws_request<span class="token punctuation">(</span>forecast_url<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">if</span> <span class="token keyword">not</span> forecast_data<span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">return</span> <span class="token string">&quot;Unable to fetch detailed forecast.&quot;</span></span>
<!-- -->
<span class="">    <span class="token comment"># Format the periods into a readable forecast</span></span>
<span class="">    periods <span class="token operator">=</span> forecast_data<span class="token punctuation">[</span><span class="token string">&quot;properties&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;periods&quot;</span><span class="token punctuation">]</span></span>
<span class="">    forecasts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="">    <span class="token keyword">for</span> period <span class="token keyword">in</span> periods<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment"># Only show next 5 periods</span></span>
<span class="">        forecast <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;&quot;</span></span>&quot;</span>
<span class=""><span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;name&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">:</span></span>
<span class="">Temperature<span class="token punctuation">:</span> <span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;temperature&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>°<span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;temperatureUnit&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="">Wind<span class="token punctuation">:</span> <span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;windSpeed&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;windDirection&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="">Forecast<span class="token punctuation">:</span> <span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;detailedForecast&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class=""><span class="token string">&quot;&quot;</span>&quot;</span>
<span class="">        forecasts<span class="token punctuation">.</span>append<span class="token punctuation">(</span>forecast<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">return</span> <span class="token string">&quot;\n---\n&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>forecasts<span class="token punctuation">)</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="running-the-server"><div class="absolute"><a href="#running-the-server" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Running the server</span></h3><p>Finally, let’s initialize and run the server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token comment"># Initialize and run the server</span></span>
<span class="">    mcp<span class="token punctuation">.</span>run<span class="token punctuation">(</span>transport<span class="token operator">=</span><span class="token string">&#x27;stdio&#x27;</span><span class="token punctuation">)</span></span>
</code></pre></div></div></div><p>Your server is complete! Run <code>uv run weather.py</code> to confirm that everything’s working.</p><p>Let’s now test your server from an existing MCP host, Claude for Desktop.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="testing-your-server-with-claude-for-desktop"><div class="absolute"><a href="#testing-your-server-with-claude-for-desktop" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Testing your server with Claude for Desktop</span></h2><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>Claude for Desktop is not yet available on Linux. Linux users can proceed to the <a class="link" href="/quickstart/client">Building a client</a> tutorial to build an MCP client that connects to the server we just built.</p></div></div><p>First, make sure you have Claude for Desktop installed. <a href="https://claude.ai/download" target="_blank" rel="noreferrer" class="link">You can install the latest version
here.</a> If you already have Claude for Desktop, <strong>make sure it’s updated to the latest version.</strong></p><p>We’ll need to configure Claude for Desktop for whichever MCP servers you want to use. To do this, open your Claude for Desktop App configuration at <code>~/Library/Application Support/Claude/claude_desktop_config.json</code> in a text editor. Make sure to create the file if it doesn’t exist.</p><p>For example, if you have <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer" class="link">VS Code</a> installed:</p><div class="tabs tabs tab-container" id="mac-os-linux"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">MacOS/Linux</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Windows</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">code ~/Library/Application<span class="token punctuation">\</span> Support/Claude/claude_desktop_config.json</span>
</code></pre></div></div></div></div><div class="hidden"><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">code ~/Library/Application<span class="token punctuation">\</span> Support/Claude/claude_desktop_config.json</span>
</code></pre></div></div></div></div><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-powershell"><code class="language-powershell"><span class="">code <span class="token variable">$env</span>:AppData\Claude\claude_desktop_config<span class="token punctuation">.</span>json</span>
</code></pre></div></div></div></div></div></div><p>You’ll then add your servers in the <code>mcpServers</code> key. The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.</p><p>In this case, we’ll add our single weather server like so:</p><div class="tabs tabs tab-container" id="mac-os-linux"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">MacOS/Linux</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Windows</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">Python</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uv&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;--directory&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;weather.py&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div><div class="hidden"><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">Python</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uv&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;--directory&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;weather.py&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">Python</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uv&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;--directory&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;C:\\ABSOLUTE\\PATH\\TO\\PARENT\\FOLDER\\weather&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;weather.py&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-amber-500/20 bg-amber-50/50 dark:border-amber-500/30 dark:bg-amber-500/10" data-callout-type="warning"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg class="flex-none w-5 h-5 text-amber-400 dark:text-amber-300/80" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" aria-label="Warning"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-amber-900 dark:text-amber-200" data-component-part="callout-content"><p>You may need to put the full path to the <code>uv</code> executable in the <code>command</code> field. You can get this by running <code>which uv</code> on MacOS/Linux or <code>where uv</code> on Windows.</p></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>Make sure you pass in the absolute path to your server.</p></div></div><p>This tells Claude for Desktop:</p><ol>
<li>There’s an MCP server named “weather”</li>
<li>To launch it by running <code>uv --directory /ABSOLUTE/PATH/TO/PARENT/FOLDER/weather run weather.py</code></li>
</ol><p>Save the file, and restart <strong>Claude for Desktop</strong>.</p></div><div class="hidden"><div><p>Let’s get started with building our weather server! <a href="https://github.com/modelcontextprotocol/quickstart-resources/tree/main/weather-server-python" target="_blank" rel="noreferrer" class="link">You can find the complete code for what we’ll be building here.</a></p><h3 class="flex whitespace-pre-wrap group font-semibold" id="prerequisite-knowledge"><div class="absolute"><a href="#prerequisite-knowledge" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Prerequisite knowledge</span></h3><p>This quickstart assumes you have familiarity with:</p><ul>
<li>Python</li>
<li>LLMs like Claude</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements"><div class="absolute"><a href="#system-requirements" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System requirements</span></h3><ul>
<li>Python 3.10 or higher installed.</li>
<li>You must use the Python MCP SDK 1.2.0 or higher.</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="set-up-your-environment"><div class="absolute"><a href="#set-up-your-environment" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Set up your environment</span></h3><p>First, let’s install <code>uv</code> and set up our Python project and environment:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Rlh4tipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">MacOS/Linux</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R15h4tipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">Windows</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R6h4tipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token function">curl</span> <span class="token parameter variable">-LsSf</span> https://astral.sh/uv/install.sh <span class="token operator">|</span> <span class="token function">sh</span></span>
</code></pre></div></div><span id="headlessui-tabs-panel-:Rah4tipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>Make sure to restart your terminal afterwards to ensure that the <code>uv</code> command gets picked up.</p><p>Now, let’s create and set up our project:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Rlhgtipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">MacOS/Linux</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R15hgtipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">Windows</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R6hgtipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Create a new directory for our project</span></span>
<span class="">uv init weather</span>
<span class=""><span class="token builtin class-name">cd</span> weather</span>
<!-- -->
<span class=""><span class="token comment"># Create virtual environment and activate it</span></span>
<span class="">uv venv</span>
<span class=""><span class="token builtin class-name">source</span> .venv/bin/activate</span>
<!-- -->
<span class=""><span class="token comment"># Install dependencies</span></span>
<span class="">uv <span class="token function">add</span> <span class="token string">&quot;mcp[cli]&quot;</span> httpx</span>
<!-- -->
<span class=""><span class="token comment"># Create our server file</span></span>
<span class=""><span class="token function">touch</span> weather.py</span>
</code></pre></div></div><span id="headlessui-tabs-panel-:Rahgtipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>Now let’s dive into building your server.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="building-your-server"><div class="absolute"><a href="#building-your-server" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Building your server</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="importing-packages-and-setting-up-the-instance"><div class="absolute"><a href="#importing-packages-and-setting-up-the-instance" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Importing packages and setting up the instance</span></h3><p>Add these to the top of your <code>weather.py</code>:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">from</span> typing <span class="token keyword">import</span> Any</span>
<span class=""><span class="token keyword">import</span> httpx</span>
<span class=""><span class="token keyword">from</span> mcp<span class="token punctuation">.</span>server<span class="token punctuation">.</span>fastmcp <span class="token keyword">import</span> FastMCP</span>
<!-- -->
<span class=""><span class="token comment"># Initialize FastMCP server</span></span>
<span class="">mcp <span class="token operator">=</span> FastMCP<span class="token punctuation">(</span><span class="token string">&quot;weather&quot;</span><span class="token punctuation">)</span></span>
<!-- -->
<span class=""><span class="token comment"># Constants</span></span>
<span class="">NWS_API_BASE <span class="token operator">=</span> <span class="token string">&quot;https://api.weather.gov&quot;</span></span>
<span class="">USER_AGENT <span class="token operator">=</span> <span class="token string">&quot;weather-app/1.0&quot;</span></span>
</code></pre></div></div></div><p>The FastMCP class uses Python type hints and docstrings to automatically generate tool definitions, making it easy to create and maintain MCP tools.</p><h3 class="flex whitespace-pre-wrap group font-semibold" id="helper-functions"><div class="absolute"><a href="#helper-functions" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Helper functions</span></h3><p>Next, let’s add our helper functions for querying and formatting the data from the National Weather Service API:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">make_nws_request</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> Any<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token boolean">None</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token triple-quoted-string string">&quot;&quot;&quot;Make a request to the NWS API with proper error handling.&quot;&quot;&quot;</span></span>
<span class="">    headers <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> USER_AGENT<span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;Accept&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/geo+json&quot;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">    <span class="token keyword">async</span> <span class="token keyword">with</span> httpx<span class="token punctuation">.</span>AsyncClient<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="">            response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">30.0</span><span class="token punctuation">)</span></span>
<span class="">            response<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">            <span class="token keyword">return</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token keyword">except</span> Exception<span class="token punctuation">:</span></span>
<span class="">            <span class="token keyword">return</span> <span class="token boolean">None</span></span>
<!-- -->
<span class=""><span class="token keyword">def</span> <span class="token function">format_alert</span><span class="token punctuation">(</span>feature<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token triple-quoted-string string">&quot;&quot;&quot;Format an alert feature into a readable string.&quot;&quot;&quot;</span></span>
<span class="">    props <span class="token operator">=</span> feature<span class="token punctuation">[</span><span class="token string">&quot;properties&quot;</span><span class="token punctuation">]</span></span>
<span class="">    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;&quot;</span></span>&quot;</span>
<span class="">Event<span class="token punctuation">:</span> <span class="token punctuation">{</span>props<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#x27;event&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;Unknown&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">Area<span class="token punctuation">:</span> <span class="token punctuation">{</span>props<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#x27;areaDesc&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;Unknown&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">Severity<span class="token punctuation">:</span> <span class="token punctuation">{</span>props<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#x27;severity&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;Unknown&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">Description<span class="token punctuation">:</span> <span class="token punctuation">{</span>props<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#x27;description&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;No description available&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">Instructions<span class="token punctuation">:</span> <span class="token punctuation">{</span>props<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#x27;instruction&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;No specific instructions provided&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class=""><span class="token string">&quot;&quot;</span>&quot;</span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="implementing-tool-execution"><div class="absolute"><a href="#implementing-tool-execution" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Implementing tool execution</span></h3><p>The tool execution handler is responsible for actually executing the logic of each tool. Let’s add it:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token decorator annotation punctuation">@mcp<span class="token punctuation">.</span>tool</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_alerts</span><span class="token punctuation">(</span>state<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;Get weather alerts <span class="token keyword">for</span> a US state<span class="token punctuation">.</span></span>
<!-- -->
<span class="">    Args<span class="token punctuation">:</span></span>
<span class="">        state<span class="token punctuation">:</span> Two<span class="token operator">-</span>letter US state code <span class="token punctuation">(</span>e<span class="token punctuation">.</span>g<span class="token punctuation">.</span> CA<span class="token punctuation">,</span> NY<span class="token punctuation">)</span></span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;</span>
<span class="">    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>NWS_API_BASE<span class="token punctuation">}</span></span><span class="token string">/alerts/active/area/</span><span class="token interpolation"><span class="token punctuation">{</span>state<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span></span>
<span class="">    data <span class="token operator">=</span> <span class="token keyword">await</span> make_nws_request<span class="token punctuation">(</span>url<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">if</span> <span class="token keyword">not</span> data <span class="token keyword">or</span> <span class="token string">&quot;features&quot;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">return</span> <span class="token string">&quot;Unable to fetch alerts or no alerts found.&quot;</span></span>
<!-- -->
<span class="">    <span class="token keyword">if</span> <span class="token keyword">not</span> data<span class="token punctuation">[</span><span class="token string">&quot;features&quot;</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">return</span> <span class="token string">&quot;No active alerts for this state.&quot;</span></span>
<!-- -->
<span class="">    alerts <span class="token operator">=</span> <span class="token punctuation">[</span>format_alert<span class="token punctuation">(</span>feature<span class="token punctuation">)</span> <span class="token keyword">for</span> feature <span class="token keyword">in</span> data<span class="token punctuation">[</span><span class="token string">&quot;features&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="">    <span class="token keyword">return</span> <span class="token string">&quot;\n---\n&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>alerts<span class="token punctuation">)</span></span>
<!-- -->
<span class=""><span class="token decorator annotation punctuation">@mcp<span class="token punctuation">.</span>tool</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_forecast</span><span class="token punctuation">(</span>latitude<span class="token punctuation">:</span> <span class="token builtin">float</span><span class="token punctuation">,</span> longitude<span class="token punctuation">:</span> <span class="token builtin">float</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;Get weather forecast <span class="token keyword">for</span> a location<span class="token punctuation">.</span></span>
<!-- -->
<span class="">    Args<span class="token punctuation">:</span></span>
<span class="">        latitude<span class="token punctuation">:</span> Latitude of the location</span>
<span class="">        longitude<span class="token punctuation">:</span> Longitude of the location</span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;</span>
<span class="">    <span class="token comment"># First get the forecast grid endpoint</span></span>
<span class="">    points_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>NWS_API_BASE<span class="token punctuation">}</span></span><span class="token string">/points/</span><span class="token interpolation"><span class="token punctuation">{</span>latitude<span class="token punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token punctuation">{</span>longitude<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span></span>
<span class="">    points_data <span class="token operator">=</span> <span class="token keyword">await</span> make_nws_request<span class="token punctuation">(</span>points_url<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">if</span> <span class="token keyword">not</span> points_data<span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">return</span> <span class="token string">&quot;Unable to fetch forecast data for this location.&quot;</span></span>
<!-- -->
<span class="">    <span class="token comment"># Get the forecast URL from the points response</span></span>
<span class="">    forecast_url <span class="token operator">=</span> points_data<span class="token punctuation">[</span><span class="token string">&quot;properties&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;forecast&quot;</span><span class="token punctuation">]</span></span>
<span class="">    forecast_data <span class="token operator">=</span> <span class="token keyword">await</span> make_nws_request<span class="token punctuation">(</span>forecast_url<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">if</span> <span class="token keyword">not</span> forecast_data<span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">return</span> <span class="token string">&quot;Unable to fetch detailed forecast.&quot;</span></span>
<!-- -->
<span class="">    <span class="token comment"># Format the periods into a readable forecast</span></span>
<span class="">    periods <span class="token operator">=</span> forecast_data<span class="token punctuation">[</span><span class="token string">&quot;properties&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;periods&quot;</span><span class="token punctuation">]</span></span>
<span class="">    forecasts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="">    <span class="token keyword">for</span> period <span class="token keyword">in</span> periods<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment"># Only show next 5 periods</span></span>
<span class="">        forecast <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;&quot;</span></span>&quot;</span>
<span class=""><span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;name&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">:</span></span>
<span class="">Temperature<span class="token punctuation">:</span> <span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;temperature&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>°<span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;temperatureUnit&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="">Wind<span class="token punctuation">:</span> <span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;windSpeed&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;windDirection&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="">Forecast<span class="token punctuation">:</span> <span class="token punctuation">{</span>period<span class="token punctuation">[</span><span class="token string">&#x27;detailedForecast&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class=""><span class="token string">&quot;&quot;</span>&quot;</span>
<span class="">        forecasts<span class="token punctuation">.</span>append<span class="token punctuation">(</span>forecast<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">return</span> <span class="token string">&quot;\n---\n&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>forecasts<span class="token punctuation">)</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="running-the-server"><div class="absolute"><a href="#running-the-server" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Running the server</span></h3><p>Finally, let’s initialize and run the server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token comment"># Initialize and run the server</span></span>
<span class="">    mcp<span class="token punctuation">.</span>run<span class="token punctuation">(</span>transport<span class="token operator">=</span><span class="token string">&#x27;stdio&#x27;</span><span class="token punctuation">)</span></span>
</code></pre></div></div></div><p>Your server is complete! Run <code>uv run weather.py</code> to confirm that everything’s working.</p><p>Let’s now test your server from an existing MCP host, Claude for Desktop.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="testing-your-server-with-claude-for-desktop"><div class="absolute"><a href="#testing-your-server-with-claude-for-desktop" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Testing your server with Claude for Desktop</span></h2><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>Claude for Desktop is not yet available on Linux. Linux users can proceed to the <a class="link" href="/quickstart/client">Building a client</a> tutorial to build an MCP client that connects to the server we just built.</p></div></div><p>First, make sure you have Claude for Desktop installed. <a href="https://claude.ai/download" target="_blank" rel="noreferrer" class="link">You can install the latest version
here.</a> If you already have Claude for Desktop, <strong>make sure it’s updated to the latest version.</strong></p><p>We’ll need to configure Claude for Desktop for whichever MCP servers you want to use. To do this, open your Claude for Desktop App configuration at <code>~/Library/Application Support/Claude/claude_desktop_config.json</code> in a text editor. Make sure to create the file if it doesn’t exist.</p><p>For example, if you have <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer" class="link">VS Code</a> installed:</p><div class="tabs tabs tab-container" id="mac-os-linux"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">MacOS/Linux</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Windows</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">code ~/Library/Application<span class="token punctuation">\</span> Support/Claude/claude_desktop_config.json</span>
</code></pre></div></div></div></div><div class="hidden"><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">code ~/Library/Application<span class="token punctuation">\</span> Support/Claude/claude_desktop_config.json</span>
</code></pre></div></div></div></div><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-powershell"><code class="language-powershell"><span class="">code <span class="token variable">$env</span>:AppData\Claude\claude_desktop_config<span class="token punctuation">.</span>json</span>
</code></pre></div></div></div></div></div></div><p>You’ll then add your servers in the <code>mcpServers</code> key. The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.</p><p>In this case, we’ll add our single weather server like so:</p><div class="tabs tabs tab-container" id="mac-os-linux"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">MacOS/Linux</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Windows</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">Python</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uv&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;--directory&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;weather.py&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div><div class="hidden"><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">Python</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uv&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;--directory&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;weather.py&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">Python</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uv&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;--directory&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;C:\\ABSOLUTE\\PATH\\TO\\PARENT\\FOLDER\\weather&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;weather.py&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-amber-500/20 bg-amber-50/50 dark:border-amber-500/30 dark:bg-amber-500/10" data-callout-type="warning"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg class="flex-none w-5 h-5 text-amber-400 dark:text-amber-300/80" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" aria-label="Warning"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-amber-900 dark:text-amber-200" data-component-part="callout-content"><p>You may need to put the full path to the <code>uv</code> executable in the <code>command</code> field. You can get this by running <code>which uv</code> on MacOS/Linux or <code>where uv</code> on Windows.</p></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>Make sure you pass in the absolute path to your server.</p></div></div><p>This tells Claude for Desktop:</p><ol>
<li>There’s an MCP server named “weather”</li>
<li>To launch it by running <code>uv --directory /ABSOLUTE/PATH/TO/PARENT/FOLDER/weather run weather.py</code></li>
</ol><p>Save the file, and restart <strong>Claude for Desktop</strong>.</p></div><div><p>Let’s get started with building our weather server! <a href="https://github.com/modelcontextprotocol/quickstart-resources/tree/main/weather-server-typescript" target="_blank" rel="noreferrer" class="link">You can find the complete code for what we’ll be building here.</a></p><h3 class="flex whitespace-pre-wrap group font-semibold" id="prerequisite-knowledge-2"><div class="absolute"><a href="#prerequisite-knowledge-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Prerequisite knowledge</span></h3><p>This quickstart assumes you have familiarity with:</p><ul>
<li>TypeScript</li>
<li>LLMs like Claude</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements-2"><div class="absolute"><a href="#system-requirements-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System requirements</span></h3><p>For TypeScript, make sure you have the latest version of Node installed.</p><h3 class="flex whitespace-pre-wrap group font-semibold" id="set-up-your-environment-2"><div class="absolute"><a href="#set-up-your-environment-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Set up your environment</span></h3><p>First, let’s install Node.js and npm if you haven’t already. You can download them from <a href="https://nodejs.org/" target="_blank" rel="noreferrer" class="link">nodejs.org</a>.
Verify your Node.js installation:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token function">node</span> <span class="token parameter variable">--version</span></span>
<span class=""><span class="token function">npm</span> <span class="token parameter variable">--version</span></span>
</code></pre></div></div></div><p>For this tutorial, you’ll need Node.js version 16 or higher.</p><p>Now, let’s create and set up our project:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Rlhhdipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">MacOS/Linux</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R15hhdipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">Windows</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R6hhdipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Create a new directory for our project</span></span>
<span class=""><span class="token function">mkdir</span> weather</span>
<span class=""><span class="token builtin class-name">cd</span> weather</span>
<!-- -->
<span class=""><span class="token comment"># Initialize a new npm project</span></span>
<span class=""><span class="token function">npm</span> init <span class="token parameter variable">-y</span></span>
<!-- -->
<span class=""><span class="token comment"># Install dependencies</span></span>
<span class=""><span class="token function">npm</span> <span class="token function">install</span> @modelcontextprotocol/sdk zod</span>
<span class=""><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> @types/node typescript</span>
<!-- -->
<span class=""><span class="token comment"># Create our files</span></span>
<span class=""><span class="token function">mkdir</span> src</span>
<span class=""><span class="token function">touch</span> src/index.ts</span>
</code></pre></div></div><span id="headlessui-tabs-panel-:Rahhdipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>Update your package.json to add type: “module” and a build script:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">package.json</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;module&quot;</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token property">&quot;bin&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./build/index.js&quot;</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tsc &amp;&amp; chmod 755 build/index.js&quot;</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">    <span class="token string">&quot;build&quot;</span></span>
<span class="">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><p>Create a <code>tsconfig.json</code> in the root of your project:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">tsconfig.json</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ES2022&quot;</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node16&quot;</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node16&quot;</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./build&quot;</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;rootDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./src&quot;</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;skipLibCheck&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;forceConsistentCasingInFileNames&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/**/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token property">&quot;exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">]</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><p>Now let’s dive into building your server.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="building-your-server-2"><div class="absolute"><a href="#building-your-server-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Building your server</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="importing-packages-and-setting-up-the-instance-2"><div class="absolute"><a href="#importing-packages-and-setting-up-the-instance-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Importing packages and setting up the instance</span></h3><p>Add these to the top of your <code>src/index.ts</code>:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-typescript"><code class="language-typescript"><span class=""><span class="token keyword">import</span> <span class="token punctuation">{</span> McpServer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@modelcontextprotocol/sdk/server/mcp.js&quot;</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">import</span> <span class="token punctuation">{</span> StdioServerTransport <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@modelcontextprotocol/sdk/server/stdio.js&quot;</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">import</span> <span class="token punctuation">{</span> z <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zod&quot;</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token keyword">const</span> <span class="token constant">NWS_API_BASE</span> <span class="token operator">=</span> <span class="token string">&quot;https://api.weather.gov&quot;</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">const</span> <span class="token constant">USER_AGENT</span> <span class="token operator">=</span> <span class="token string">&quot;weather-app/1.0&quot;</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token comment">// Create server instance</span></span>
<span class=""><span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">McpServer</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">  name<span class="token operator">:</span> <span class="token string">&quot;weather&quot;</span><span class="token punctuation">,</span></span>
<span class="">  version<span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span></span>
<span class="">  capabilities<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    resources<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">    tools<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class=""><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="helper-functions-2"><div class="absolute"><a href="#helper-functions-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Helper functions</span></h3><p>Next, let’s add our helper functions for querying and formatting the data from the National Weather Service API:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-typescript"><code class="language-typescript"><span class=""><span class="token comment">// Helper function for making NWS API requests</span></span>
<span class=""><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">makeNWSRequest</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="">  <span class="token keyword">const</span> headers <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token string-property property">&quot;User-Agent&quot;</span><span class="token operator">:</span> <span class="token constant">USER_AGENT</span><span class="token punctuation">,</span></span>
<span class="">    Accept<span class="token operator">:</span> <span class="token string">&quot;application/geo+json&quot;</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span> headers <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">HTTP error! status: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>response<span class="token punctuation">.</span>status<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token constant">T</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Error making NWS request:&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token keyword">interface</span> <span class="token class-name">AlertFeature</span> <span class="token punctuation">{</span></span>
<span class="">  properties<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    event<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="">    areaDesc<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="">    severity<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="">    status<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="">    headline<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token comment">// Format alert data</span></span>
<span class=""><span class="token keyword">function</span> <span class="token function">formatAlert</span><span class="token punctuation">(</span>feature<span class="token operator">:</span> AlertFeature<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span></span>
<span class="">  <span class="token keyword">const</span> props <span class="token operator">=</span> feature<span class="token punctuation">.</span>properties<span class="token punctuation">;</span></span>
<span class="">  <span class="token keyword">return</span> <span class="token punctuation">[</span></span>
<span class="">    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Event: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>event <span class="token operator">||</span> <span class="token string">&quot;Unknown&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>
<span class="">    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Area: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>areaDesc <span class="token operator">||</span> <span class="token string">&quot;Unknown&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>
<span class="">    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Severity: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>severity <span class="token operator">||</span> <span class="token string">&quot;Unknown&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>
<span class="">    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Status: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>status <span class="token operator">||</span> <span class="token string">&quot;Unknown&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>
<span class="">    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Headline: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>headline <span class="token operator">||</span> <span class="token string">&quot;No headline&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>
<span class="">    <span class="token string">&quot;---&quot;</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token keyword">interface</span> <span class="token class-name">ForecastPeriod</span> <span class="token punctuation">{</span></span>
<span class="">  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="">  temperature<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="">  temperatureUnit<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="">  windSpeed<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="">  windDirection<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="">  shortForecast<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token keyword">interface</span> <span class="token class-name">AlertsResponse</span> <span class="token punctuation">{</span></span>
<span class="">  features<span class="token operator">:</span> AlertFeature<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token keyword">interface</span> <span class="token class-name">PointsResponse</span> <span class="token punctuation">{</span></span>
<span class="">  properties<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    forecast<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token keyword">interface</span> <span class="token class-name">ForecastResponse</span> <span class="token punctuation">{</span></span>
<span class="">  properties<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    periods<span class="token operator">:</span> ForecastPeriod<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="implementing-tool-execution-2"><div class="absolute"><a href="#implementing-tool-execution-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Implementing tool execution</span></h3><p>The tool execution handler is responsible for actually executing the logic of each tool. Let’s add it:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-typescript"><code class="language-typescript"><span class=""><span class="token comment">// Register weather tools</span></span>
<span class="">server<span class="token punctuation">.</span><span class="token function">tool</span><span class="token punctuation">(</span></span>
<span class="">  <span class="token string">&quot;get-alerts&quot;</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token string">&quot;Get weather alerts for a state&quot;</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token punctuation">{</span></span>
<span class="">    state<span class="token operator">:</span> z<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;Two-letter state code (e.g. CA, NY)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> state <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">const</span> stateCode <span class="token operator">=</span> state<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">const</span> alertsUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">NWS_API_BASE</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/alerts?area=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>stateCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">const</span> alertsData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">makeNWSRequest</span><span class="token generic class-name"><span class="token operator">&lt;</span>AlertsResponse<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>alertsUrl<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>alertsData<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="">        content<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">          <span class="token punctuation">{</span></span>
<span class="">            type<span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span></span>
<span class="">            text<span class="token operator">:</span> <span class="token string">&quot;Failed to retrieve alerts data&quot;</span><span class="token punctuation">,</span></span>
<span class="">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<!-- -->
<span class="">    <span class="token keyword">const</span> features <span class="token operator">=</span> alertsData<span class="token punctuation">.</span>features <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span>features<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="">        content<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">          <span class="token punctuation">{</span></span>
<span class="">            type<span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span></span>
<span class="">            text<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">No active alerts for </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>stateCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>
<span class="">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<!-- -->
<span class="">    <span class="token keyword">const</span> formattedAlerts <span class="token operator">=</span> features<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>formatAlert<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">const</span> alertsText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Active alerts for </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>stateCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:\n\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>formattedAlerts<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\n&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="">      content<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">        <span class="token punctuation">{</span></span>
<span class="">          type<span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span></span>
<span class="">          text<span class="token operator">:</span> alertsText<span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class=""><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">server<span class="token punctuation">.</span><span class="token function">tool</span><span class="token punctuation">(</span></span>
<span class="">  <span class="token string">&quot;get-forecast&quot;</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token string">&quot;Get weather forecast for a location&quot;</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token punctuation">{</span></span>
<span class="">    latitude<span class="token operator">:</span> z<span class="token punctuation">.</span><span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;Latitude of the location&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">    longitude<span class="token operator">:</span> z<span class="token punctuation">.</span><span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;Longitude of the location&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> latitude<span class="token punctuation">,</span> longitude <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token comment">// Get grid point data</span></span>
<span class="">    <span class="token keyword">const</span> pointsUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">NWS_API_BASE</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/points/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>latitude<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>longitude<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">const</span> pointsData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">makeNWSRequest</span><span class="token generic class-name"><span class="token operator">&lt;</span>PointsResponse<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>pointsUrl<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pointsData<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="">        content<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">          <span class="token punctuation">{</span></span>
<span class="">            type<span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span></span>
<span class="">            text<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Failed to retrieve grid point data for coordinates: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>latitude<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>longitude<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. This location may not be supported by the NWS API (only US locations are supported).</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>
<span class="">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<!-- -->
<span class="">    <span class="token keyword">const</span> forecastUrl <span class="token operator">=</span> pointsData<span class="token punctuation">.</span>properties<span class="token operator">?.</span>forecast<span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>forecastUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="">        content<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">          <span class="token punctuation">{</span></span>
<span class="">            type<span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span></span>
<span class="">            text<span class="token operator">:</span> <span class="token string">&quot;Failed to get forecast URL from grid point data&quot;</span><span class="token punctuation">,</span></span>
<span class="">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<!-- -->
<span class="">    <span class="token comment">// Get forecast data</span></span>
<span class="">    <span class="token keyword">const</span> forecastData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">makeNWSRequest</span><span class="token generic class-name"><span class="token operator">&lt;</span>ForecastResponse<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>forecastUrl<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>forecastData<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="">        content<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">          <span class="token punctuation">{</span></span>
<span class="">            type<span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span></span>
<span class="">            text<span class="token operator">:</span> <span class="token string">&quot;Failed to retrieve forecast data&quot;</span><span class="token punctuation">,</span></span>
<span class="">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<!-- -->
<span class="">    <span class="token keyword">const</span> periods <span class="token operator">=</span> forecastData<span class="token punctuation">.</span>properties<span class="token operator">?.</span>periods <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span>periods<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="">        content<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">          <span class="token punctuation">{</span></span>
<span class="">            type<span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span></span>
<span class="">            text<span class="token operator">:</span> <span class="token string">&quot;No forecast periods available&quot;</span><span class="token punctuation">,</span></span>
<span class="">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<!-- -->
<span class="">    <span class="token comment">// Format forecast periods</span></span>
<span class="">    <span class="token keyword">const</span> formattedForecast <span class="token operator">=</span> periods<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>period<span class="token operator">:</span> ForecastPeriod<span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span>
<span class="">      <span class="token punctuation">[</span></span>
<span class="">        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>period<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">&quot;Unknown&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>
<span class="">        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Temperature: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>period<span class="token punctuation">.</span>temperature <span class="token operator">||</span> <span class="token string">&quot;Unknown&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">°</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>period<span class="token punctuation">.</span>temperatureUnit <span class="token operator">||</span> <span class="token string">&quot;F&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>
<span class="">        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Wind: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>period<span class="token punctuation">.</span>windSpeed <span class="token operator">||</span> <span class="token string">&quot;Unknown&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>period<span class="token punctuation">.</span>windDirection <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>
<span class="">        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>period<span class="token punctuation">.</span>shortForecast <span class="token operator">||</span> <span class="token string">&quot;No forecast available&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;---&quot;</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">    <span class="token keyword">const</span> forecastText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Forecast for </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>latitude<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>longitude<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:\n\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>formattedForecast<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\n&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="">      content<span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">        <span class="token punctuation">{</span></span>
<span class="">          type<span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span></span>
<span class="">          text<span class="token operator">:</span> forecastText<span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class=""><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="running-the-server-2"><div class="absolute"><a href="#running-the-server-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Running the server</span></h3><p>Finally, implement the main function to run the server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-typescript"><code class="language-typescript"><span class=""><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">  <span class="token keyword">const</span> transport <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StdioServerTransport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token keyword">await</span> server<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>transport<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Weather MCP Server running on stdio&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Fatal error in main():&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
</code></pre></div></div></div><p>Make sure to run <code>npm run build</code> to build your server! This is a very important step in getting your server to connect.</p><p>Let’s now test your server from an existing MCP host, Claude for Desktop.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="testing-your-server-with-claude-for-desktop-2"><div class="absolute"><a href="#testing-your-server-with-claude-for-desktop-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Testing your server with Claude for Desktop</span></h2><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>Claude for Desktop is not yet available on Linux. Linux users can proceed to the <a class="link" href="/quickstart/client">Building a client</a> tutorial to build an MCP client that connects to the server we just built.</p></div></div><p>First, make sure you have Claude for Desktop installed. <a href="https://claude.ai/download" target="_blank" rel="noreferrer" class="link">You can install the latest version
here.</a> If you already have Claude for Desktop, <strong>make sure it’s updated to the latest version.</strong></p><p>We’ll need to configure Claude for Desktop for whichever MCP servers you want to use. To do this, open your Claude for Desktop App configuration at <code>~/Library/Application Support/Claude/claude_desktop_config.json</code> in a text editor. Make sure to create the file if it doesn’t exist.</p><p>For example, if you have <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer" class="link">VS Code</a> installed:</p><div class="tabs tabs tab-container" id="mac-os-linux"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">MacOS/Linux</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Windows</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">code ~/Library/Application<span class="token punctuation">\</span> Support/Claude/claude_desktop_config.json</span>
</code></pre></div></div></div></div><div class="hidden"><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">code ~/Library/Application<span class="token punctuation">\</span> Support/Claude/claude_desktop_config.json</span>
</code></pre></div></div></div></div><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-powershell"><code class="language-powershell"><span class="">code <span class="token variable">$env</span>:AppData\Claude\claude_desktop_config<span class="token punctuation">.</span>json</span>
</code></pre></div></div></div></div></div></div><p>You’ll then add your servers in the <code>mcpServers</code> key. The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.</p><p>In this case, we’ll add our single weather server like so:</p><div class="tabs tabs tab-container" id="mac-os-linux"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">MacOS/Linux</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Windows</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:R2ml5dipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10">Node</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:Rql5dipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/index.js&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div></div><div class="hidden"><div><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Rapt5dipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10">Node</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R39t5dipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/index.js&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div></div><div><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Raqt5dipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10">Node</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R3at5dipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;C:\\PATH\\TO\\PARENT\\FOLDER\\weather\\build\\index.js&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div></div></div></div><p>This tells Claude for Desktop:</p><ol>
<li>There’s an MCP server named “weather”</li>
<li>Launch it by running <code>node /ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/index.js</code></li>
</ol><p>Save the file, and restart <strong>Claude for Desktop</strong>.</p></div><div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>This is a quickstart demo based on Spring AI MCP auto-configuration and boot starters.
To learn how to create sync and async MCP Servers, manually, consult the <a class="link" href="/sdk/java/mcp-server">Java SDK Server</a> documentation.</p></div></div><p>Let’s get started with building our weather server!
<a href="https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/weather/starter-stdio-server" target="_blank" rel="noreferrer" class="link">You can find the complete code for what we’ll be building here.</a></p><p>For more information, see the <a href="https://docs.spring.io/spring-ai/reference/api/mcp/mcp-server-boot-starter-docs.html" target="_blank" rel="noreferrer" class="link">MCP Server Boot Starter</a> reference documentation.
For manual MCP Server implementation, refer to the <a class="link" href="/sdk/java/mcp-server">MCP Server Java SDK documentation</a>.</p><h3 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements-3"><div class="absolute"><a href="#system-requirements-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System requirements</span></h3><ul>
<li>Java 17 or higher installed.</li>
<li><a href="https://docs.spring.io/spring-boot/installing.html" target="_blank" rel="noreferrer" class="link">Spring Boot 3.3.x</a> or higher</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="set-up-your-environment-3"><div class="absolute"><a href="#set-up-your-environment-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Set up your environment</span></h3><p>Use the <a href="https://start.spring.io/" target="_blank" rel="noreferrer" class="link">Spring Initializer</a> to bootstrap the project.</p><p>You will need to add the following dependencies:</p><div class="tabs tabs tab-container" id="maven"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">Maven</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Gradle</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-xml"><code class="language-xml"><span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.ai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-ai-starter-mcp-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<!-- -->
<span class="">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
</code></pre></div></div></div></div><div class="hidden"><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-xml"><code class="language-xml"><span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.ai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-ai-starter-mcp-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<!-- -->
<span class="">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
</code></pre></div></div></div></div><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-groovy"><code class="language-groovy"><span class="">dependencies <span class="token punctuation">{</span></span>
<span class="">  implementation <span class="token function">platform</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;org.springframework.ai:spring-ai-starter-mcp-server&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">  implementation <span class="token function">platform</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;org.springframework:spring-web&quot;</span></span><span class="token punctuation">)</span>   </span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div></div></div><p>Then configure your application by setting the application properties:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Rlhdtipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">application.properties</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R15hdtipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">application.yml</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R6hdtipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token assign-left variable">spring.main.bannerMode</span><span class="token operator">=</span>off</span>
<span class=""><span class="token assign-left variable">logging.pattern.console</span><span class="token operator">=</span></span>
</code></pre></div></div><span id="headlessui-tabs-panel-:Rahdtipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>The <a href="https://docs.spring.io/spring-ai/reference/api/mcp/mcp-server-boot-starter-docs.html#_configuration_properties" target="_blank" rel="noreferrer" class="link">Server Configuration Properties</a> documents all available properties.</p><p>Now let’s dive into building your server.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="building-your-server-3"><div class="absolute"><a href="#building-your-server-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Building your server</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="weather-service"><div class="absolute"><a href="#weather-service" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Weather Service</span></h3><p>Let’s implement a <a href="https://github.com/spring-projects/spring-ai-examples/blob/main/model-context-protocol/weather/starter-stdio-server/src/main/java/org/springframework/ai/mcp/sample/server/WeatherService.java" target="_blank" rel="noreferrer" class="link">WeatherService.java</a> that uses a REST client to query the data from the National Weather Service API:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-java"><code class="language-java"><span class=""><span class="token annotation punctuation">@Service</span></span>
<span class=""><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WeatherService</span> <span class="token punctuation">{</span></span>
<!-- -->
<span class="">	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RestClient</span> restClient<span class="token punctuation">;</span></span>
<!-- -->
<span class="">	<span class="token keyword">public</span> <span class="token class-name">WeatherService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">		<span class="token keyword">this</span><span class="token punctuation">.</span>restClient <span class="token operator">=</span> <span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">			<span class="token punctuation">.</span><span class="token function">baseUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.weather.gov&quot;</span><span class="token punctuation">)</span></span>
<span class="">			<span class="token punctuation">.</span><span class="token function">defaultHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Accept&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/geo+json&quot;</span><span class="token punctuation">)</span></span>
<span class="">			<span class="token punctuation">.</span><span class="token function">defaultHeader</span><span class="token punctuation">(</span><span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;WeatherApiClient/1.0 (<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="5920362c2b193c34383035773a3634">[email&#160;protected]</a>)&quot;</span><span class="token punctuation">)</span></span>
<span class="">			<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">	<span class="token punctuation">}</span></span>
<!-- -->
<span class="">  <span class="token annotation punctuation">@Tool</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;Get weather forecast for a specific latitude/longitude&quot;</span><span class="token punctuation">)</span></span>
<span class="">  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getWeatherForecastByLocation</span><span class="token punctuation">(</span></span>
<span class="">      <span class="token keyword">double</span> latitude<span class="token punctuation">,</span>   <span class="token comment">// Latitude coordinate</span></span>
<span class="">      <span class="token keyword">double</span> longitude   <span class="token comment">// Longitude coordinate</span></span>
<span class="">  <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token comment">// Returns detailed forecast including:</span></span>
<span class="">      <span class="token comment">// - Temperature and unit</span></span>
<span class="">      <span class="token comment">// - Wind speed and direction</span></span>
<span class="">      <span class="token comment">// - Detailed forecast description</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<!-- -->	<!-- -->
<span class="">  <span class="token annotation punctuation">@Tool</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;Get weather alerts for a US state&quot;</span><span class="token punctuation">)</span></span>
<span class="">  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getAlerts</span><span class="token punctuation">(</span></span>
<span class="">      <span class="token annotation punctuation">@ToolParam</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;Two-letter US state code (e.g. CA, NY)&quot;</span> <span class="token class-name">String</span> state</span>
<span class="">  <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token comment">// Returns active alerts including:</span></span>
<span class="">      <span class="token comment">// - Event type</span></span>
<span class="">      <span class="token comment">// - Affected area</span></span>
<span class="">      <span class="token comment">// - Severity</span></span>
<span class="">      <span class="token comment">// - Description</span></span>
<span class="">      <span class="token comment">// - Safety instructions</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<!-- -->
<span class="">  <span class="token comment">// ......</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><p>The <code>@Service</code> annotation with auto-register the service in your application context.
The Spring AI <code>@Tool</code> annotation, making it easy to create and maintain MCP tools.</p><p>The auto-configuration will automatically register these tools with the MCP server.</p><h3 class="flex whitespace-pre-wrap group font-semibold" id="create-your-boot-application"><div class="absolute"><a href="#create-your-boot-application" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Create your Boot Application</span></h3><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-java"><code class="language-java"><span class=""><span class="token annotation punctuation">@SpringBootApplication</span></span>
<span class=""><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">McpServerApplication</span> <span class="token punctuation">{</span></span>
<!-- -->
<span class="">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">		<span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">McpServerApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">	<span class="token punctuation">}</span></span>
<!-- -->
<span class="">	<span class="token annotation punctuation">@Bean</span></span>
<span class="">	<span class="token keyword">public</span> <span class="token class-name">ToolCallbackProvider</span> <span class="token function">weatherTools</span><span class="token punctuation">(</span><span class="token class-name">WeatherService</span> weatherService<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">		<span class="token keyword">return</span>  <span class="token class-name">MethodToolCallbackProvider</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toolObjects</span><span class="token punctuation">(</span>weatherService<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">	<span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><p>Uses the the <code>MethodToolCallbackProvider</code> utils to convert the <code>@Tools</code> into actionable callbacks used by the MCP server.</p><h3 class="flex whitespace-pre-wrap group font-semibold" id="running-the-server-3"><div class="absolute"><a href="#running-the-server-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Running the server</span></h3><p>Finally, let’s build the server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">./mvnw clean <span class="token function">install</span></span>
</code></pre></div></div></div><p>This will generate a <code>mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar</code> file within the <code>target</code> folder.</p><p>Let’s now test your server from an existing MCP host, Claude for Desktop.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="testing-your-server-with-claude-for-desktop-3"><div class="absolute"><a href="#testing-your-server-with-claude-for-desktop-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Testing your server with Claude for Desktop</span></h2><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>Claude for Desktop is not yet available on Linux.</p></div></div><p>First, make sure you have Claude for Desktop installed.
<a href="https://claude.ai/download" target="_blank" rel="noreferrer" class="link">You can install the latest version here.</a> If you already have Claude for Desktop, <strong>make sure it’s updated to the latest version.</strong></p><p>We’ll need to configure Claude for Desktop for whichever MCP servers you want to use.
To do this, open your Claude for Desktop App configuration at <code>~/Library/Application Support/Claude/claude_desktop_config.json</code> in a text editor.
Make sure to create the file if it doesn’t exist.</p><p>For example, if you have <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer" class="link">VS Code</a> installed:</p><div class="tabs tabs tab-container" id="mac-os-linux"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">MacOS/Linux</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Windows</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">code ~/Library/Application<span class="token punctuation">\</span> Support/Claude/claude_desktop_config.json</span>
</code></pre></div></div></div></div><div class="hidden"><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">code ~/Library/Application<span class="token punctuation">\</span> Support/Claude/claude_desktop_config.json</span>
</code></pre></div></div></div></div><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-powershell"><code class="language-powershell"><span class="">code <span class="token variable">$env</span>:AppData\Claude\claude_desktop_config<span class="token punctuation">.</span>json</span>
</code></pre></div></div></div></div></div></div><p>You’ll then add your servers in the <code>mcpServers</code> key.
The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.</p><p>In this case, we’ll add our single weather server like so:</p><div class="tabs tabs tab-container" id="mac-os-linux"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">MacOS/Linux</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Windows</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">java</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">  <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;spring-ai-mcp-weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;java&quot;</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">        <span class="token string">&quot;-Dspring.ai.mcp.server.stdio=true&quot;</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;-jar&quot;</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar&quot;</span></span>
<span class="">      <span class="token punctuation">]</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div><div class="hidden"><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">java</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">  <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;spring-ai-mcp-weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;java&quot;</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">        <span class="token string">&quot;-Dspring.ai.mcp.server.stdio=true&quot;</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;-jar&quot;</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar&quot;</span></span>
<span class="">      <span class="token punctuation">]</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">java</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">  <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;spring-ai-mcp-weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;java&quot;</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">        <span class="token string">&quot;-Dspring.ai.mcp.server.transport=STDIO&quot;</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;-jar&quot;</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;C:\\ABSOLUTE\\PATH\\TO\\PARENT\\FOLDER\\weather\\mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar&quot;</span></span>
<span class="">      <span class="token punctuation">]</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>Make sure you pass in the absolute path to your server.</p></div></div><p>This tells Claude for Desktop:</p><ol>
<li>There’s an MCP server named “my-weather-server”</li>
<li>To launch it by running <code>java -jar /ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar</code></li>
</ol><p>Save the file, and restart <strong>Claude for Desktop</strong>.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="testing-your-server-with-java-client"><div class="absolute"><a href="#testing-your-server-with-java-client" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Testing your server with Java client</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="create-a-mcp-client-manually"><div class="absolute"><a href="#create-a-mcp-client-manually" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Create a MCP Client manually</span></h3><p>Use the <code>McpClient</code> to connect to the server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-java"><code class="language-java"><span class=""><span class="token keyword">var</span> stdioParams <span class="token operator">=</span> <span class="token class-name">ServerParameters</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token string">&quot;java&quot;</span><span class="token punctuation">)</span></span>
<span class="">  <span class="token punctuation">.</span><span class="token function">args</span><span class="token punctuation">(</span><span class="token string">&quot;-jar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar&quot;</span><span class="token punctuation">)</span></span>
<span class="">  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token keyword">var</span> stdioTransport <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StdioClientTransport</span><span class="token punctuation">(</span>stdioParams<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token keyword">var</span> mcpClient <span class="token operator">=</span> <span class="token class-name">McpClient</span><span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span>stdioTransport<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">mcpClient<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token class-name">ListToolsResult</span> toolsList <span class="token operator">=</span> mcpClient<span class="token punctuation">.</span><span class="token function">listTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token class-name">CallToolResult</span> weather <span class="token operator">=</span> mcpClient<span class="token punctuation">.</span><span class="token function">callTool</span><span class="token punctuation">(</span></span>
<span class="">  <span class="token keyword">new</span> <span class="token class-name">CallToolRequest</span><span class="token punctuation">(</span><span class="token string">&quot;getWeatherForecastByLocation&quot;</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;latitude&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;47.6062&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;longitude&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-122.3321&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token class-name">CallToolResult</span> alert <span class="token operator">=</span> mcpClient<span class="token punctuation">.</span><span class="token function">callTool</span><span class="token punctuation">(</span></span>
<span class="">  <span class="token keyword">new</span> <span class="token class-name">CallToolRequest</span><span class="token punctuation">(</span><span class="token string">&quot;getAlerts&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;state&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;NY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">mcpClient<span class="token punctuation">.</span><span class="token function">closeGracefully</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="use-mcp-client-boot-starter"><div class="absolute"><a href="#use-mcp-client-boot-starter" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Use MCP Client Boot Starter</span></h3><p>Create a new boot starter application using the <code>spring-ai-starter-mcp-client</code> dependency:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-xml"><code class="language-xml"><span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.ai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-ai-starter-mcp-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
</code></pre></div></div></div><p>and set the <code>spring.ai.mcp.client.stdio.servers-configuration</code> property to point to your <code>claude_desktop_config.json</code>.
You can re-use the existing Anthropic Desktop configuration:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-properties"><code class="language-properties"><span class=""><span class="token key attr-name">spring.ai.mcp.client.stdio.servers-configuration</span><span class="token punctuation">=</span><span class="token value attr-value">file:PATH/TO/claude_desktop_config.json</span></span>
</code></pre></div></div></div><p>When you start your client application, the auto-configuration will create, automatically MCP clients from the claude_desktop_config.json.</p><p>For more information, see the <a href="https://docs.spring.io/spring-ai/reference/api/mcp/mcp-server-boot-client-docs.html" target="_blank" rel="noreferrer" class="link">MCP Client Boot Starters</a> reference documentation.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="more-java-mcp-server-examples"><div class="absolute"><a href="#more-java-mcp-server-examples" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">More Java MCP Server examples</span></h2><p>The <a href="https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/weather/starter-webflux-server" target="_blank" rel="noreferrer" class="link">starter-webflux-server</a> demonstrates how to create a MCP server using SSE transport.
It showcases how to define and register MCP Tools, Resources, and Prompts, using the Spring Boot’s auto-configuration capabilities.</p></div><div><p>Let’s get started with building our weather server! <a href="https://github.com/modelcontextprotocol/kotlin-sdk/tree/main/samples/weather-stdio-server" target="_blank" rel="noreferrer" class="link">You can find the complete code for what we’ll be building here.</a></p><h3 class="flex whitespace-pre-wrap group font-semibold" id="prerequisite-knowledge-3"><div class="absolute"><a href="#prerequisite-knowledge-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Prerequisite knowledge</span></h3><p>This quickstart assumes you have familiarity with:</p><ul>
<li>Kotlin</li>
<li>LLMs like Claude</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements-4"><div class="absolute"><a href="#system-requirements-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System requirements</span></h3><ul>
<li>Java 17 or higher installed.</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="set-up-your-environment-4"><div class="absolute"><a href="#set-up-your-environment-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Set up your environment</span></h3><p>First, let’s install <code>java</code> and <code>gradle</code> if you haven’t already.
You can download <code>java</code> from <a href="https://www.oracle.com/java/technologies/downloads/" target="_blank" rel="noreferrer" class="link">official Oracle JDK website</a>.
Verify your <code>java</code> installation:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token function">java</span> <span class="token parameter variable">--version</span></span>
</code></pre></div></div></div><p>Now, let’s create and set up your project:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Rlhedipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">MacOS/Linux</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R15hedipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">Windows</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R6hedipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Create a new directory for our project</span></span>
<span class=""><span class="token function">mkdir</span> weather</span>
<span class=""><span class="token builtin class-name">cd</span> weather</span>
<!-- -->
<span class=""><span class="token comment"># Initialize a new kotlin project</span></span>
<span class="">gradle init</span>
</code></pre></div></div><span id="headlessui-tabs-panel-:Rahedipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>After running <code>gradle init</code>, you will be presented with options for creating your project.
Select <strong>Application</strong> as the project type, <strong>Kotlin</strong> as the programming language, and <strong>Java 17</strong> as the Java version.</p><p>Alternatively, you can create a Kotlin application using the <a href="https://kotlinlang.org/docs/jvm-get-started.html" target="_blank" rel="noreferrer" class="link">IntelliJ IDEA project wizard</a>.</p><p>After creating the project, add the following dependencies:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Rlhudipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">build.gradle.kts</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R15hudipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">build.gradle</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R6hudipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token keyword">val</span> mcpVersion <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;0.4.0&quot;</span></span></span>
<span class=""><span class="token keyword">val</span> slf4jVersion <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;2.0.9&quot;</span></span></span>
<span class=""><span class="token keyword">val</span> ktorVersion <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;3.1.1&quot;</span></span></span>
<!-- -->
<span class="">dependencies <span class="token punctuation">{</span></span>
<span class="">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;io.modelcontextprotocol:kotlin-sdk:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">mcpVersion</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.slf4j:slf4j-nop:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">slf4jVersion</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;io.ktor:ktor-client-content-negotiation:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">ktorVersion</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;io.ktor:ktor-serialization-kotlinx-json:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">ktorVersion</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div><span id="headlessui-tabs-panel-:Rahudipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>Also, add the following plugins to your build script:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Rli6dipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">build.gradle.kts</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R15i6dipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">build.gradle</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R6i6dipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-kotlin"><code class="language-kotlin"><span class="">plugins <span class="token punctuation">{</span></span>
<span class="">    <span class="token function">kotlin</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;plugin.serialization&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;your_version_of_kotlin&quot;</span></span></span>
<span class="">    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.github.johnrengelman.shadow&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;8.1.1&quot;</span></span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div><span id="headlessui-tabs-panel-:Rai6dipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>Now let’s dive into building your server.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="building-your-server-4"><div class="absolute"><a href="#building-your-server-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Building your server</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-the-instance"><div class="absolute"><a href="#setting-up-the-instance" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting up the instance</span></h3><p>Add a server initialization function:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token comment">// Main function to run the MCP server</span></span>
<span class=""><span class="token keyword">fun</span> <span class="token function">`run mcp server`</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token comment">// Create the MCP Server instance with a basic implementation</span></span>
<span class="">    <span class="token keyword">val</span> server <span class="token operator">=</span> <span class="token function">Server</span><span class="token punctuation">(</span></span>
<span class="">        <span class="token function">Implementation</span><span class="token punctuation">(</span></span>
<span class="">            name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;weather&quot;</span></span><span class="token punctuation">,</span> <span class="token comment">// Tool name is &quot;weather&quot;</span></span>
<span class="">            version <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;1.0.0&quot;</span></span> <span class="token comment">// Version of the implementation</span></span>
<span class="">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token function">ServerOptions</span><span class="token punctuation">(</span></span>
<span class="">            capabilities <span class="token operator">=</span> <span class="token function">ServerCapabilities</span><span class="token punctuation">(</span>tools <span class="token operator">=</span> ServerCapabilities<span class="token punctuation">.</span><span class="token function">Tools</span><span class="token punctuation">(</span>listChanged <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token comment">// Create a transport using standard IO for server communication</span></span>
<span class="">    <span class="token keyword">val</span> transport <span class="token operator">=</span> <span class="token function">StdioServerTransport</span><span class="token punctuation">(</span></span>
<span class="">        System<span class="token punctuation">.</span>`<span class="token keyword">in</span>`<span class="token punctuation">.</span><span class="token function">asInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">asSink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">buffered</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">)</span></span>
<!-- -->
<span class="">    runBlocking <span class="token punctuation">{</span></span>
<span class="">        server<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>transport<span class="token punctuation">)</span></span>
<span class="">        <span class="token keyword">val</span> done <span class="token operator">=</span> <span class="token function">Job</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">        server<span class="token punctuation">.</span><span class="token function">onClose</span> <span class="token punctuation">{</span></span>
<span class="">            done<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">        done<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="weather-api-helper-functions"><div class="absolute"><a href="#weather-api-helper-functions" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Weather API helper functions</span></h3><p>Next, let’s add functions and data classes for querying and converting responses from the National Weather Service API:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token comment">// Extension function to fetch forecast information for given latitude and longitude</span></span>
<span class=""><span class="token keyword">suspend</span> <span class="token keyword">fun</span> HttpClient<span class="token punctuation">.</span><span class="token function">getForecast</span><span class="token punctuation">(</span>latitude<span class="token operator">:</span> Double<span class="token punctuation">,</span> longitude<span class="token operator">:</span> Double<span class="token punctuation">)</span><span class="token operator">:</span> List<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">val</span> points <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;/points/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">latitude</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">longitude</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>body<span class="token operator">&lt;</span>Points<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">val</span> forecast <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>points<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>forecast<span class="token punctuation">)</span><span class="token punctuation">.</span>body<span class="token operator">&lt;</span>Forecast<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">return</span> forecast<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>periods<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> period <span class="token operator">-&gt;</span></span>
<span class="">        <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>&quot;</span>
<span class="">            $<span class="token punctuation">{</span>period<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">:</span></span>
<span class="">            Temperature<span class="token operator">:</span> $<span class="token punctuation">{</span>period<span class="token punctuation">.</span>temperature<span class="token punctuation">}</span> $<span class="token punctuation">{</span>period<span class="token punctuation">.</span>temperatureUnit<span class="token punctuation">}</span></span>
<span class="">            Wind<span class="token operator">:</span> $<span class="token punctuation">{</span>period<span class="token punctuation">.</span>windSpeed<span class="token punctuation">}</span> $<span class="token punctuation">{</span>period<span class="token punctuation">.</span>windDirection<span class="token punctuation">}</span></span>
<span class="">            Forecast<span class="token operator">:</span> $<span class="token punctuation">{</span>period<span class="token punctuation">.</span>detailedForecast<span class="token punctuation">}</span></span>
<span class="">        <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>&quot;<span class="token punctuation">.</span><span class="token function">trimIndent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token comment">// Extension function to fetch weather alerts for a given state</span></span>
<span class=""><span class="token keyword">suspend</span> <span class="token keyword">fun</span> HttpClient<span class="token punctuation">.</span><span class="token function">getAlerts</span><span class="token punctuation">(</span>state<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token operator">:</span> List<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">val</span> alerts <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;/alerts/active/area/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">state</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>body<span class="token operator">&lt;</span>Alert<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">return</span> alerts<span class="token punctuation">.</span>features<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> feature <span class="token operator">-&gt;</span></span>
<span class="">        <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>&quot;</span>
<span class="">            Event<span class="token operator">:</span> $<span class="token punctuation">{</span>feature<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>event<span class="token punctuation">}</span></span>
<span class="">            Area<span class="token operator">:</span> $<span class="token punctuation">{</span>feature<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>areaDesc<span class="token punctuation">}</span></span>
<span class="">            Severity<span class="token operator">:</span> $<span class="token punctuation">{</span>feature<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>severity<span class="token punctuation">}</span></span>
<span class="">            Description<span class="token operator">:</span> $<span class="token punctuation">{</span>feature<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>description<span class="token punctuation">}</span></span>
<span class="">            Instruction<span class="token operator">:</span> $<span class="token punctuation">{</span>feature<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>instruction<span class="token punctuation">}</span></span>
<span class="">        <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>&quot;<span class="token punctuation">.</span><span class="token function">trimIndent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token annotation builtin">@Serializable</span></span>
<span class=""><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Points</span><span class="token punctuation">(</span></span>
<span class="">    <span class="token keyword">val</span> properties<span class="token operator">:</span> Properties</span>
<span class=""><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token annotation builtin">@Serializable</span></span>
<span class="">    <span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Properties</span><span class="token punctuation">(</span><span class="token keyword">val</span> forecast<span class="token operator">:</span> String<span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token annotation builtin">@Serializable</span></span>
<span class=""><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Forecast</span><span class="token punctuation">(</span></span>
<span class="">    <span class="token keyword">val</span> properties<span class="token operator">:</span> Properties</span>
<span class=""><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token annotation builtin">@Serializable</span></span>
<span class="">    <span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Properties</span><span class="token punctuation">(</span><span class="token keyword">val</span> periods<span class="token operator">:</span> List<span class="token operator">&lt;</span>Period<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token annotation builtin">@Serializable</span></span>
<span class="">    <span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Period</span><span class="token punctuation">(</span></span>
<span class="">        <span class="token keyword">val</span> number<span class="token operator">:</span> Int<span class="token punctuation">,</span> <span class="token keyword">val</span> name<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> startTime<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> endTime<span class="token operator">:</span> String<span class="token punctuation">,</span></span>
<span class="">        <span class="token keyword">val</span> isDaytime<span class="token operator">:</span> Boolean<span class="token punctuation">,</span> <span class="token keyword">val</span> temperature<span class="token operator">:</span> Int<span class="token punctuation">,</span> <span class="token keyword">val</span> temperatureUnit<span class="token operator">:</span> String<span class="token punctuation">,</span></span>
<span class="">        <span class="token keyword">val</span> temperatureTrend<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> probabilityOfPrecipitation<span class="token operator">:</span> JsonObject<span class="token punctuation">,</span></span>
<span class="">        <span class="token keyword">val</span> windSpeed<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> windDirection<span class="token operator">:</span> String<span class="token punctuation">,</span></span>
<span class="">        <span class="token keyword">val</span> shortForecast<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> detailedForecast<span class="token operator">:</span> String<span class="token punctuation">,</span></span>
<span class="">    <span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token annotation builtin">@Serializable</span></span>
<span class=""><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Alert</span><span class="token punctuation">(</span></span>
<span class="">    <span class="token keyword">val</span> features<span class="token operator">:</span> List<span class="token operator">&lt;</span>Feature<span class="token operator">&gt;</span></span>
<span class=""><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token annotation builtin">@Serializable</span></span>
<span class="">    <span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Feature</span><span class="token punctuation">(</span></span>
<span class="">        <span class="token keyword">val</span> properties<span class="token operator">:</span> Properties</span>
<span class="">    <span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token annotation builtin">@Serializable</span></span>
<span class="">    <span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Properties</span><span class="token punctuation">(</span></span>
<span class="">        <span class="token keyword">val</span> event<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> areaDesc<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> severity<span class="token operator">:</span> String<span class="token punctuation">,</span></span>
<span class="">        <span class="token keyword">val</span> description<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">val</span> instruction<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="implementing-tool-execution-3"><div class="absolute"><a href="#implementing-tool-execution-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Implementing tool execution</span></h3><p>The tool execution handler is responsible for actually executing the logic of each tool. Let’s add it:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token comment">// Create an HTTP client with a default request configuration and JSON content negotiation</span></span>
<span class=""><span class="token keyword">val</span> httpClient <span class="token operator">=</span> HttpClient <span class="token punctuation">{</span></span>
<span class="">    defaultRequest <span class="token punctuation">{</span></span>
<span class="">        <span class="token function">url</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;https://api.weather.gov&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">        headers <span class="token punctuation">{</span></span>
<span class="">            <span class="token function">append</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Accept&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;application/geo+json&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">            <span class="token function">append</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;User-Agent&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;WeatherApiClient/1.0&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">        <span class="token function">contentType</span><span class="token punctuation">(</span>ContentType<span class="token punctuation">.</span>Application<span class="token punctuation">.</span>Json<span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">    <span class="token comment">// Install content negotiation plugin for JSON serialization/deserialization</span></span>
<span class="">    <span class="token function">install</span><span class="token punctuation">(</span>ContentNegotiation<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">json</span><span class="token punctuation">(</span>Json <span class="token punctuation">{</span> ignoreUnknownKeys <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token comment">// Register a tool to fetch weather alerts by state</span></span>
<span class="">server<span class="token punctuation">.</span><span class="token function">addTool</span><span class="token punctuation">(</span></span>
<span class="">    name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;get_alerts&quot;</span></span><span class="token punctuation">,</span></span>
<span class="">    description <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>&quot;</span>
<span class="">        Get weather alerts <span class="token keyword">for</span> a US state<span class="token punctuation">.</span> Input <span class="token keyword">is</span> Two<span class="token operator">-</span>letter US state <span class="token function">code</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>g<span class="token punctuation">.</span> CA<span class="token punctuation">,</span> NY<span class="token punctuation">)</span></span>
<span class="">    <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>&quot;<span class="token punctuation">.</span><span class="token function">trimIndent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">    inputSchema <span class="token operator">=</span> Tool<span class="token punctuation">.</span><span class="token function">Input</span><span class="token punctuation">(</span></span>
<span class="">        properties <span class="token operator">=</span> buildJsonObject <span class="token punctuation">{</span></span>
<span class="">            <span class="token function">putJsonObject</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;state&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">                <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;type&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;string&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">                <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;description&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Two-letter US state code (e.g. CA, NY)&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">            <span class="token punctuation">}</span></span>
<span class="">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">        required <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;state&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">)</span> <span class="token punctuation">{</span> request <span class="token operator">-&gt;</span></span>
<span class="">    <span class="token keyword">val</span> state <span class="token operator">=</span> request<span class="token punctuation">.</span>arguments<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;state&quot;</span></span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">.</span>jsonPrimitive<span class="token operator">?</span><span class="token punctuation">.</span>content</span>
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token keyword">return</span><span class="token label symbol">@addTool</span> <span class="token function">CallToolResult</span><span class="token punctuation">(</span></span>
<span class="">            content <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token function">TextContent</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;The &#x27;state&#x27; parameter is required.&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<!-- -->
<span class="">    <span class="token keyword">val</span> alerts <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">getAlerts</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token function">CallToolResult</span><span class="token punctuation">(</span>content <span class="token operator">=</span> alerts<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> <span class="token function">TextContent</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token comment">// Register a tool to fetch weather forecast by latitude and longitude</span></span>
<span class="">server<span class="token punctuation">.</span><span class="token function">addTool</span><span class="token punctuation">(</span></span>
<span class="">    name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;get_forecast&quot;</span></span><span class="token punctuation">,</span></span>
<span class="">    description <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>&quot;</span>
<span class="">        Get weather forecast <span class="token keyword">for</span> a specific latitude<span class="token operator">/</span>longitude</span>
<span class="">    <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>&quot;<span class="token punctuation">.</span><span class="token function">trimIndent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">    inputSchema <span class="token operator">=</span> Tool<span class="token punctuation">.</span><span class="token function">Input</span><span class="token punctuation">(</span></span>
<span class="">        properties <span class="token operator">=</span> buildJsonObject <span class="token punctuation">{</span></span>
<span class="">            <span class="token function">putJsonObject</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;latitude&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;type&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;number&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="">            <span class="token function">putJsonObject</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;longitude&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;type&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;number&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">        required <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;latitude&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;longitude&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">)</span> <span class="token punctuation">{</span> request <span class="token operator">-&gt;</span></span>
<span class="">    <span class="token keyword">val</span> latitude <span class="token operator">=</span> request<span class="token punctuation">.</span>arguments<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;latitude&quot;</span></span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">.</span>jsonPrimitive<span class="token operator">?</span><span class="token punctuation">.</span>doubleOrNull</span>
<span class="">    <span class="token keyword">val</span> longitude <span class="token operator">=</span> request<span class="token punctuation">.</span>arguments<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;longitude&quot;</span></span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">.</span>jsonPrimitive<span class="token operator">?</span><span class="token punctuation">.</span>doubleOrNull</span>
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span>latitude <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> longitude <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token keyword">return</span><span class="token label symbol">@addTool</span> <span class="token function">CallToolResult</span><span class="token punctuation">(</span></span>
<span class="">            content <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token function">TextContent</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;The &#x27;latitude&#x27; and &#x27;longitude&#x27; parameters are required.&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<!-- -->
<span class="">    <span class="token keyword">val</span> forecast <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">getForecast</span><span class="token punctuation">(</span>latitude<span class="token punctuation">,</span> longitude<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token function">CallToolResult</span><span class="token punctuation">(</span>content <span class="token operator">=</span> forecast<span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> <span class="token function">TextContent</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="running-the-server-4"><div class="absolute"><a href="#running-the-server-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Running the server</span></h3><p>Finally, implement the main function to run the server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">`run mcp server`</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
</code></pre></div></div></div><p>Make sure to run <code>./gradlew build</code> to build your server. This is a very important step in getting your server to connect.</p><p>Let’s now test your server from an existing MCP host, Claude for Desktop.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="testing-your-server-with-claude-for-desktop-4"><div class="absolute"><a href="#testing-your-server-with-claude-for-desktop-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Testing your server with Claude for Desktop</span></h2><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>Claude for Desktop is not yet available on Linux. Linux users can proceed to the <a class="link" href="/quickstart/client">Building a client</a> tutorial to build an MCP client that connects to the server we just built.</p></div></div><p>First, make sure you have Claude for Desktop installed. <a href="https://claude.ai/download" target="_blank" rel="noreferrer" class="link">You can install the latest version
here.</a> If you already have Claude for Desktop, <strong>make sure it’s updated to the latest version.</strong></p><p>We’ll need to configure Claude for Desktop for whichever MCP servers you want to use.
To do this, open your Claude for Desktop App configuration at <code>~/Library/Application Support/Claude/claude_desktop_config.json</code> in a text editor.
Make sure to create the file if it doesn’t exist.</p><p>For example, if you have <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer" class="link">VS Code</a> installed:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Rlkudipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">MacOS/Linux</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R15kudipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">Windows</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R6kudipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-bash"><code class="language-bash"><span class="">code ~/Library/Application<span class="token punctuation">\</span> Support/Claude/claude_desktop_config.json</span>
</code></pre></div></div><span id="headlessui-tabs-panel-:Rakudipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>You’ll then add your servers in the <code>mcpServers</code> key.
The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.</p><p>In this case, we’ll add our single weather server like so:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Rlladipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">MacOS/Linux</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R15ladipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">Windows</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R6ladipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;java&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;-jar&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/libs/weather-0.1.0-all.jar&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div><span id="headlessui-tabs-panel-:Raladipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>This tells Claude for Desktop:</p><ol>
<li>There’s an MCP server named “weather”</li>
<li>Launch it by running <code>java -jar /ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/libs/weather-0.1.0-all.jar</code></li>
</ol><p>Save the file, and restart <strong>Claude for Desktop</strong>.</p></div><div><p>Let’s get started with building our weather server! <a href="https://github.com/modelcontextprotocol/csharp-sdk/tree/main/samples/QuickstartWeatherServer" target="_blank" rel="noreferrer" class="link">You can find the complete code for what we’ll be building here.</a></p><h3 class="flex whitespace-pre-wrap group font-semibold" id="prerequisite-knowledge-4"><div class="absolute"><a href="#prerequisite-knowledge-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Prerequisite knowledge</span></h3><p>This quickstart assumes you have familiarity with:</p><ul>
<li>C#</li>
<li>LLMs like Claude</li>
<li>.NET 8 or higher</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements-5"><div class="absolute"><a href="#system-requirements-5" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System requirements</span></h3><ul>
<li><a href="https://dotnet.microsoft.com/download/dotnet/8.0" target="_blank" rel="noreferrer" class="link">.NET 8 SDK</a> or higher installed.</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="set-up-your-environment-5"><div class="absolute"><a href="#set-up-your-environment-5" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Set up your environment</span></h3><p>First, let’s install <code>dotnet</code> if you haven’t already. You can download <code>dotnet</code> from <a href="https://dotnet.microsoft.com/download/" target="_blank" rel="noreferrer" class="link">official Microsoft .NET website</a>. Verify your <code>dotnet</code> installation:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">dotnet <span class="token parameter variable">--version</span></span>
</code></pre></div></div></div><p>Now, let’s create and set up your project:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:Rlhetipakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">MacOS/Linux</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R15hetipakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">Windows</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:R6hetipakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Create a new directory for our project</span></span>
<span class=""><span class="token function">mkdir</span> weather</span>
<span class=""><span class="token builtin class-name">cd</span> weather</span>
<span class=""><span class="token comment"># Initialize a new C# project</span></span>
<span class="">dotnet new console</span>
</code></pre></div></div><span id="headlessui-tabs-panel-:Rahetipakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>After running <code>dotnet new console</code>, you will be presented with a new C# project.
You can open the project in your favorite IDE, such as <a href="https://visualstudio.microsoft.com/" target="_blank" rel="noreferrer" class="link">Visual Studio</a> or <a href="https://www.jetbrains.com/rider/" target="_blank" rel="noreferrer" class="link">Rider</a>.
Alternatively, you can create a C# application using the <a href="https://learn.microsoft.com/en-us/visualstudio/get-started/csharp/tutorial-console?view=vs-2022" target="_blank" rel="noreferrer" class="link">Visual Studio project wizard</a>.
After creating the project, add NuGet package for the Model Context Protocol SDK and hosting:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Add the Model Context Protocol SDK NuGet package</span></span>
<span class="">dotnet <span class="token function">add</span> package ModelContextProtocol <span class="token parameter variable">--prerelease</span></span>
<span class=""><span class="token comment"># Add the .NET Hosting NuGet package</span></span>
<span class="">dotnet <span class="token function">add</span> package Microsoft.Extensions.Hosting</span>
</code></pre></div></div></div><p>Now let’s dive into building your server.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="building-your-server-5"><div class="absolute"><a href="#building-your-server-5" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Building your server</span></h2><p>Open the <code>Program.cs</code> file in your project and replace its contents with the following code:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-csharp"><code class="language-csharp"><span class=""><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>DependencyInjection</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>Hosting</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">using</span> <span class="token namespace">ModelContextProtocol</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Http<span class="token punctuation">.</span>Headers</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> Host<span class="token punctuation">.</span><span class="token function">CreateEmptyApplicationBuilder</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">settings</span><span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddMcpServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">.</span><span class="token function">WithStdioServerTransport</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">.</span><span class="token function">WithToolsFromAssembly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddSingleton</span><span class="token punctuation">(</span>_ <span class="token operator">=&gt;</span></span>
<span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> BaseAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.weather.gov&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="">    client<span class="token punctuation">.</span>DefaultRequestHeaders<span class="token punctuation">.</span>UserAgent<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ProductInfoHeaderValue</span><span class="token punctuation">(</span><span class="token string">&quot;weather-tool&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">return</span> client<span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token class-name"><span class="token keyword">var</span></span> app <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">RunAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
</code></pre></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>When creating the <code>ApplicationHostBuilder</code>, ensure you use <code>CreateEmptyApplicationBuilder</code> instead of <code>CreateDefaultBuilder</code>. This ensures that the server does not write any additional messages to the console. This is only neccessary for servers using STDIO transport.</p></div></div><p>This code sets up a basic console application that uses the Model Context Protocol SDK to create an MCP server with standard I/O transport.</p><h3 class="flex whitespace-pre-wrap group font-semibold" id="weather-api-helper-functions-2"><div class="absolute"><a href="#weather-api-helper-functions-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Weather API helper functions</span></h3><p>Next, define a class with the tool execution handlers for querying and converting responses from the National Weather Service API:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-csharp"><code class="language-csharp"><span class=""><span class="token keyword">using</span> <span class="token namespace">ModelContextProtocol<span class="token punctuation">.</span>Server</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Http<span class="token punctuation">.</span>Json</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Json</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token keyword">namespace</span> <span class="token namespace">QuickstartWeatherServer<span class="token punctuation">.</span>Tools</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">McpServerToolType</span></span><span class="token punctuation">]</span></span>
<span class=""><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">WeatherTools</span></span>
<span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">McpServerTool</span><span class="token punctuation">,</span> <span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Get weather alerts for a US state.&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span></span>
<span class="">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetAlerts</span><span class="token punctuation">(</span></span>
<span class="">        <span class="token class-name">HttpClient</span> client<span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;The US state to get alerts for.&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token class-name"><span class="token keyword">string</span></span> state<span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">{</span></span>
<span class="">        <span class="token class-name"><span class="token keyword">var</span></span> jsonElement <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetFromJsonAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>JsonElement<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;/alerts/active/area/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">state</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">        <span class="token class-name"><span class="token keyword">var</span></span> alerts <span class="token operator">=</span> jsonElement<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;features&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">EnumerateArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>alerts<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token punctuation">{</span></span>
<span class="">            <span class="token keyword">return</span> <span class="token string">&quot;No active alerts for this state.&quot;</span><span class="token punctuation">;</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<!-- -->
<span class="">        <span class="token keyword">return</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token string">&quot;\n--\n&quot;</span><span class="token punctuation">,</span> alerts<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>alert <span class="token operator">=&gt;</span></span>
<span class="">        <span class="token punctuation">{</span></span>
<span class="">            <span class="token class-name">JsonElement</span> properties <span class="token operator">=</span> alert<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">            <span class="token keyword">return</span> <span class="token interpolation-string"><span class="token string">$&quot;&quot;</span></span>&quot;</span>
<span class="">                    Event<span class="token punctuation">:</span> <span class="token punctuation">{</span>properties<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;event&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">                    Area<span class="token punctuation">:</span> <span class="token punctuation">{</span>properties<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;areaDesc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">                    Severity<span class="token punctuation">:</span> <span class="token punctuation">{</span>properties<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;severity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">                    Description<span class="token punctuation">:</span> <span class="token punctuation">{</span>properties<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;description&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">                    Instruction<span class="token punctuation">:</span> <span class="token punctuation">{</span>properties<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;instruction&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">                    <span class="token string">&quot;&quot;</span>&quot;<span class="token punctuation">;</span></span>
<span class="">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<!-- -->
<span class="">    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">McpServerTool</span><span class="token punctuation">,</span> <span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Get weather forecast for a location.&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span></span>
<span class="">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetForecast</span><span class="token punctuation">(</span></span>
<span class="">        <span class="token class-name">HttpClient</span> client<span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Latitude of the location.&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token class-name"><span class="token keyword">double</span></span> latitude<span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Longitude of the location.&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token class-name"><span class="token keyword">double</span></span> longitude<span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">{</span></span>
<span class="">        <span class="token class-name"><span class="token keyword">var</span></span> jsonElement <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetFromJsonAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>JsonElement<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;/points/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">latitude</span><span class="token punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">longitude</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">        <span class="token class-name"><span class="token keyword">var</span></span> periods <span class="token operator">=</span> jsonElement<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;periods&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">EnumerateArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">        <span class="token keyword">return</span> <span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token string">&quot;\n---\n&quot;</span><span class="token punctuation">,</span> periods<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>period <span class="token operator">=&gt;</span> <span class="token interpolation-string"><span class="token string">$&quot;&quot;</span></span>&quot;</span>
<span class="">                <span class="token punctuation">{</span>period<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">                Temperature<span class="token punctuation">:</span> <span class="token punctuation">{</span>period<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;temperature&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetInt32</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>°F</span>
<span class="">                Wind<span class="token punctuation">:</span> <span class="token punctuation">{</span>period<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;windSpeed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>period<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;windDirection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">                Forecast<span class="token punctuation">:</span> <span class="token punctuation">{</span>period<span class="token punctuation">.</span><span class="token function">GetProperty</span><span class="token punctuation">(</span><span class="token string">&quot;detailedForecast&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="">                <span class="token string">&quot;&quot;</span>&quot;<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="running-the-server-5"><div class="absolute"><a href="#running-the-server-5" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Running the server</span></h3><p>Finally, run the server using the following command:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">dotnet run</span>
</code></pre></div></div></div><p>This will start the server and listen for incoming requests on standard input/output.</p><h2 class="flex whitespace-pre-wrap group font-semibold" id="testing-your-server-with-claude-for-desktop-5"><div class="absolute"><a href="#testing-your-server-with-claude-for-desktop-5" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Testing your server with Claude for Desktop</span></h2><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>Claude for Desktop is not yet available on Linux. Linux users can proceed to the <a class="link" href="/quickstart/client">Building a client</a> tutorial to build an MCP client that connects to the server we just built.</p></div></div><p>First, make sure you have Claude for Desktop installed. <a href="https://claude.ai/download" target="_blank" rel="noreferrer" class="link">You can install the latest version
here.</a> If you already have Claude for Desktop, <strong>make sure it’s updated to the latest version.</strong>
We’ll need to configure Claude for Desktop for whichever MCP servers you want to use. To do this, open your Claude for Desktop App configuration at <code>~/Library/Application Support/Claude/claude_desktop_config.json</code> in a text editor. Make sure to create the file if it doesn’t exist.
For example, if you have <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer" class="link">VS Code</a> installed:</p><div class="tabs tabs tab-container" id="mac-os-linux"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">MacOS/Linux</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Windows</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">code ~/Library/Application<span class="token punctuation">\</span> Support/Claude/claude_desktop_config.json</span>
</code></pre></div></div></div></div><div class="hidden"><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">code ~/Library/Application<span class="token punctuation">\</span> Support/Claude/claude_desktop_config.json</span>
</code></pre></div></div></div></div><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-powershell"><code class="language-powershell"><span class="">code <span class="token variable">$env</span>:AppData\Claude\claude_desktop_config<span class="token punctuation">.</span>json</span>
</code></pre></div></div></div></div></div></div><p>You’ll then add your servers in the <code>mcpServers</code> key. The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.
In this case, we’ll add our single weather server like so:</p><div class="tabs tabs tab-container" id="mac-os-linux"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">MacOS/Linux</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Windows</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dotnet&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;--project&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;/ABSOLUTE/PATH/TO/PROJECT&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;--no-build&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div><div class="hidden"><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dotnet&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;--project&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;/ABSOLUTE/PATH/TO/PROJECT&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;--no-build&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div><div><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;weather&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">            <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dotnet&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">                <span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;--project&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;C:\\ABSOLUTE\\PATH\\TO\\PROJECT&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;--no-build&quot;</span></span>
<span class="">            <span class="token punctuation">]</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div></div></div></div><p>This tells Claude for Desktop:</p><ol>
<li>There’s an MCP server named “weather”</li>
<li>Launch it by running <code>dotnet run /ABSOLUTE/PATH/TO/PROJECT</code>
Save the file, and restart <strong>Claude for Desktop</strong>.</li>
</ol></div></div></div>
<h3 class="flex whitespace-pre-wrap group font-semibold" id="test-with-commands"><div class="absolute"><a href="#test-with-commands" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Test with commands</span></h3>
<p>Let’s make sure Claude for Desktop is picking up the two tools we’ve exposed in our <code>weather</code> server. You can do this by looking for the “Search and tools” <img src="https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/claude-desktop-mcp-slider.svg" style="display:inline;margin:0;height:1.3em"/> icon:</p>
<div><div data-name="frame" class="frame p-2 not-prose relative bg-gray-50/50 rounded-2xl overflow-hidden dark:bg-gray-800/25"><div style="background-position:10px 10px" class="absolute inset-0 bg-grid-neutral-200/20 [mask-image:linear-gradient(0deg,#fff,rgba(255,255,255,0.6))] dark:bg-grid-white/5 dark:[mask-image:linear-gradient(0deg,rgba(255,255,255,0.1),rgba(255,255,255,0.5))]"></div><div class="relative rounded-xl overflow-hidden flex justify-center"></div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-2xl dark:border-white/5"></div></div></div>
<p>After clicking on the slider icon, you should see two tools listed:</p>
<div><div data-name="frame" class="frame p-2 not-prose relative bg-gray-50/50 rounded-2xl overflow-hidden dark:bg-gray-800/25"><div style="background-position:10px 10px" class="absolute inset-0 bg-grid-neutral-200/20 [mask-image:linear-gradient(0deg,#fff,rgba(255,255,255,0.6))] dark:bg-grid-white/5 dark:[mask-image:linear-gradient(0deg,rgba(255,255,255,0.1),rgba(255,255,255,0.5))]"></div><div class="relative rounded-xl overflow-hidden flex justify-center"></div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-2xl dark:border-white/5"></div></div></div>
<p>If your server isn’t being picked up by Claude for Desktop, proceed to the <a class="link" href="/_sites/modelcontextprotocol.io/quickstart/server#troubleshooting">Troubleshooting</a> section for debugging tips.</p>
<p>If the tool settings icon has shown up, you can now test your server by running the following commands in Claude for Desktop:</p>
<ul>
<li>What’s the weather in Sacramento?</li>
<li>What are the active weather alerts in Texas?</li>
</ul>
<div><div data-name="frame" class="frame p-2 not-prose relative bg-gray-50/50 rounded-2xl overflow-hidden dark:bg-gray-800/25"><div style="background-position:10px 10px" class="absolute inset-0 bg-grid-neutral-200/20 [mask-image:linear-gradient(0deg,#fff,rgba(255,255,255,0.6))] dark:bg-grid-white/5 dark:[mask-image:linear-gradient(0deg,rgba(255,255,255,0.1),rgba(255,255,255,0.5))]"></div><div class="relative rounded-xl overflow-hidden flex justify-center"></div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-2xl dark:border-white/5"></div></div></div>
<div><div data-name="frame" class="frame p-2 not-prose relative bg-gray-50/50 rounded-2xl overflow-hidden dark:bg-gray-800/25"><div style="background-position:10px 10px" class="absolute inset-0 bg-grid-neutral-200/20 [mask-image:linear-gradient(0deg,#fff,rgba(255,255,255,0.6))] dark:bg-grid-white/5 dark:[mask-image:linear-gradient(0deg,rgba(255,255,255,0.1),rgba(255,255,255,0.5))]"></div><div class="relative rounded-xl overflow-hidden flex justify-center"></div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-2xl dark:border-white/5"></div></div></div>
<div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>Since this is the US National Weather service, the queries will only work for US locations.</p></div></div>
<h2 class="flex whitespace-pre-wrap group font-semibold" id="what%E2%80%99s-happening-under-the-hood"><div class="absolute"><a href="#what%E2%80%99s-happening-under-the-hood" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">What’s happening under the hood</span></h2>
<p>When you ask a question:</p>
<ol>
<li>The client sends your question to Claude</li>
<li>Claude analyzes the available tools and decides which one(s) to use</li>
<li>The client executes the chosen tool(s) through the MCP server</li>
<li>The results are sent back to Claude</li>
<li>Claude formulates a natural language response</li>
<li>The response is displayed to you!</li>
</ol>
<h2 class="flex whitespace-pre-wrap group font-semibold" id="troubleshooting"><div class="absolute"><a href="#troubleshooting" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Troubleshooting</span></h2>
<div class="accordion-group [&amp;&gt;div]:border-0 [&amp;&gt;div]:rounded-none [&amp;&gt;div&gt;button]:rounded-none [&amp;&gt;div]:mb-0 overflow-hidden mt-0 mb-3 rounded-xl prose prose-gray dark:prose-invert divide-y divide-inherit border dark:border-gray-800/50"><div role="button" class="accordion border-standard rounded-2xl mb-3 overflow-hidden bg-background-light dark:bg-codeblock cursor-default"><button class="relative not-prose flex flex-row items-center content-center w-full py-4 px-5 space-x-2 hover:bg-gray-100 hover:dark:bg-gray-800 rounded-t-xl" aria-controls="claude-for-desktop-integration-issues accordion children" aria-expanded="false" data-component-part="accordion-button"><div id="claude-for-desktop-integration-issues" class="absolute -top-[8rem]"></div><div class="mr-0.5" data-component-part="accordion-caret-right"><svg class="h-3 w-3 transition bg-gray-700 dark:bg-gray-400 duration-75" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/caret-right.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/caret-right.svg);mask-repeat:no-repeat;mask-position:center"></svg></div><div class="leading-tight text-left" contenteditable="false" data-component-part="accordion-title-container"><p class="m-0 font-medium text-gray-900 dark:text-gray-200" data-component-part="accordion-title">Claude for Desktop Integration Issues</p></div></button><div id="claude-for-desktop-integration-issues accordion children" role="contentinfo" class="mt-2 mb-4 mx-6 hidden overflow-x-auto cursor-default" data-component-part="accordion-content"><p><strong>Getting logs from Claude for Desktop</strong></p><p>Claude.app logging related to MCP is written to log files in <code>~/Library/Logs/Claude</code>:</p><ul>
<li><code>mcp.log</code> will contain general logging about MCP connections and connection failures.</li>
<li>Files named <code>mcp-server-SERVERNAME.log</code> will contain error (stderr) logging from the named server.</li>
</ul><p>You can run the following command to list recent logs and follow along with any new ones:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Check Claude&#x27;s logs for errors</span></span>
<span class=""><span class="token function">tail</span> <span class="token parameter variable">-n</span> <span class="token number">20</span> <span class="token parameter variable">-f</span> ~/Library/Logs/Claude/mcp*.log</span>
</code></pre></div></div></div><p><strong>Server not showing up in Claude</strong></p><ol>
<li>Check your <code>claude_desktop_config.json</code> file syntax</li>
<li>Make sure the path to your project is absolute and not relative</li>
<li>Restart Claude for Desktop completely</li>
</ol><p><strong>Tool calls failing silently</strong></p><p>If Claude attempts to use the tools but they fail:</p><ol>
<li>Check Claude’s logs for errors</li>
<li>Verify your server builds and runs without errors</li>
<li>Try restarting Claude for Desktop</li>
</ol><p><strong>None of this is working. What do I do?</strong></p><p>Please refer to our <a class="link" href="/docs/tools/debugging">debugging guide</a> for better debugging tools and more detailed guidance.</p></div></div><div role="button" class="accordion border-standard rounded-2xl mb-3 overflow-hidden bg-background-light dark:bg-codeblock cursor-default"><button class="relative not-prose flex flex-row items-center content-center w-full py-4 px-5 space-x-2 hover:bg-gray-100 hover:dark:bg-gray-800 rounded-t-xl" aria-controls="weather-api-issues accordion children" aria-expanded="false" data-component-part="accordion-button"><div id="weather-api-issues" class="absolute -top-[8rem]"></div><div class="mr-0.5" data-component-part="accordion-caret-right"><svg class="h-3 w-3 transition bg-gray-700 dark:bg-gray-400 duration-75" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/caret-right.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/caret-right.svg);mask-repeat:no-repeat;mask-position:center"></svg></div><div class="leading-tight text-left" contenteditable="false" data-component-part="accordion-title-container"><p class="m-0 font-medium text-gray-900 dark:text-gray-200" data-component-part="accordion-title">Weather API Issues</p></div></button><div id="weather-api-issues accordion children" role="contentinfo" class="mt-2 mb-4 mx-6 hidden overflow-x-auto cursor-default" data-component-part="accordion-content"><p><strong>Error: Failed to retrieve grid point data</strong></p><p>This usually means either:</p><ol>
<li>The coordinates are outside the US</li>
<li>The NWS API is having issues</li>
<li>You’re being rate limited</li>
</ol><p>Fix:</p><ul>
<li>Verify you’re using US coordinates</li>
<li>Add a small delay between requests</li>
<li>Check the NWS API status page</li>
</ul><p><strong>Error: No active alerts for [STATE]</strong></p><p>This isn’t an error - it just means there are no current weather alerts for that state. Try a different state or check during severe weather.</p></div></div></div>
<div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>For more advanced troubleshooting, check out our guide on <a class="link" href="/docs/tools/debugging">Debugging MCP</a></p></div></div>
<h2 class="flex whitespace-pre-wrap group font-semibold" id="next-steps"><div class="absolute"><a href="#next-steps" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Next steps</span></h2>
<div class="card-group not-prose grid gap-x-4 sm:grid-cols-2"><a class="card block font-normal group relative my-2 ring-2 ring-transparent rounded-2xl bg-white dark:bg-background-dark border border-gray-950/10 dark:border-white/10 overflow-hidden w-full cursor-pointer hover:!border-primary dark:hover:!border-primary-light" href="/quickstart/client"><div class="px-6 py-5 relative" data-component-part="card-content-container"><div id="card-link-arrow-icon" class="absolute text-gray-400 dark:text-gray-500 group-hover:text-primary dark:group-hover:text-primary-light top-5 right-5 hidden"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-up-right w-4 h-4"><path d="M7 7h10v10"></path><path d="M7 17 17 7"></path></svg></div><div class="h-6 w-6 fill-gray-800 dark:fill-gray-100 text-gray-800 dark:text-gray-100" data-component-part="card-icon"><svg class="h-6 w-6 bg-primary dark:bg-primary-light" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/outlet.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/outlet.svg);mask-repeat:no-repeat;mask-position:center"></svg></div><div><h2 class="not-prose font-semibold text-base text-gray-800 dark:text-white mt-4" contenteditable="false" data-component-part="card-title">Building a client</h2><div class="prose mt-1 font-normal text-sm leading-6 text-gray-600 dark:text-gray-400" data-component-part="card-content"><p>Learn how to build your own MCP client that can connect to your server</p></div></div></div></a><a class="card block font-normal group relative my-2 ring-2 ring-transparent rounded-2xl bg-white dark:bg-background-dark border border-gray-950/10 dark:border-white/10 overflow-hidden w-full cursor-pointer hover:!border-primary dark:hover:!border-primary-light" href="/examples"><div class="px-6 py-5 relative" data-component-part="card-content-container"><div id="card-link-arrow-icon" class="absolute text-gray-400 dark:text-gray-500 group-hover:text-primary dark:group-hover:text-primary-light top-5 right-5 hidden"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-up-right w-4 h-4"><path d="M7 7h10v10"></path><path d="M7 17 17 7"></path></svg></div><div class="h-6 w-6 fill-gray-800 dark:fill-gray-100 text-gray-800 dark:text-gray-100" data-component-part="card-icon"><svg class="h-6 w-6 bg-primary dark:bg-primary-light" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/grid.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/grid.svg);mask-repeat:no-repeat;mask-position:center"></svg></div><div><h2 class="not-prose font-semibold text-base text-gray-800 dark:text-white mt-4" contenteditable="false" data-component-part="card-title">Example servers</h2><div class="prose mt-1 font-normal text-sm leading-6 text-gray-600 dark:text-gray-400" data-component-part="card-content"><p>Check out our gallery of official MCP servers and implementations</p></div></div></div></a><a class="card block font-normal group relative my-2 ring-2 ring-transparent rounded-2xl bg-white dark:bg-background-dark border border-gray-950/10 dark:border-white/10 overflow-hidden w-full cursor-pointer hover:!border-primary dark:hover:!border-primary-light" href="/docs/tools/debugging"><div class="px-6 py-5 relative" data-component-part="card-content-container"><div id="card-link-arrow-icon" class="absolute text-gray-400 dark:text-gray-500 group-hover:text-primary dark:group-hover:text-primary-light top-5 right-5 hidden"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-up-right w-4 h-4"><path d="M7 7h10v10"></path><path d="M7 17 17 7"></path></svg></div><div class="h-6 w-6 fill-gray-800 dark:fill-gray-100 text-gray-800 dark:text-gray-100" data-component-part="card-icon"><svg class="h-6 w-6 bg-primary dark:bg-primary-light" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/bug.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/bug.svg);mask-repeat:no-repeat;mask-position:center"></svg></div><div><h2 class="not-prose font-semibold text-base text-gray-800 dark:text-white mt-4" contenteditable="false" data-component-part="card-title">Debugging Guide</h2><div class="prose mt-1 font-normal text-sm leading-6 text-gray-600 dark:text-gray-400" data-component-part="card-content"><p>Learn how to effectively debug MCP servers and integrations</p></div></div></div></a><a class="card block font-normal group relative my-2 ring-2 ring-transparent rounded-2xl bg-white dark:bg-background-dark border border-gray-950/10 dark:border-white/10 overflow-hidden w-full cursor-pointer hover:!border-primary dark:hover:!border-primary-light" href="/tutorials/building-mcp-with-llms"><div class="px-6 py-5 relative" data-component-part="card-content-container"><div id="card-link-arrow-icon" class="absolute text-gray-400 dark:text-gray-500 group-hover:text-primary dark:group-hover:text-primary-light top-5 right-5 hidden"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-up-right w-4 h-4"><path d="M7 7h10v10"></path><path d="M7 17 17 7"></path></svg></div><div class="h-6 w-6 fill-gray-800 dark:fill-gray-100 text-gray-800 dark:text-gray-100" data-component-part="card-icon"><svg class="h-6 w-6 bg-primary dark:bg-primary-light" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/comments.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/comments.svg);mask-repeat:no-repeat;mask-position:center"></svg></div><div><h2 class="not-prose font-semibold text-base text-gray-800 dark:text-white mt-4" contenteditable="false" data-component-part="card-title">Building MCP with LLMs</h2><div class="prose mt-1 font-normal text-sm leading-6 text-gray-600 dark:text-gray-400" data-component-part="card-content"><p>Learn how to use LLMs like Claude to speed up your MCP development</p></div></div></div></a></div></div><div class="leading-6 mt-14"><div class="feedback-toolbar pb-16 w-full"><div class="flex flex-col gap-y-4 xl:flex-col xl:gap-6 min-[1400px]:flex-row md:flex-row md:justify-end"><div class="flex flex-row gap-5 items-center grow justify-between md:justify-start xl:justify-between min-[1400px]:justify-start"><p class="text-sm text-gray-600 dark:text-gray-400">Was this page helpful?</p><div class="flex flex-row gap-3 items-center"><button class="px-3.5 py-2 flex flex-row gap-3 items-center border-standard rounded-xl text-gray-600 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 bg-white/50 dark:bg-codeblock/50 hover:border-gray-500 hover:dark:border-gray-500"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" class="fill-current"><path d="M10.1187 1.08741C8.925 0.746789 7.67813 1.43741 7.3375 2.63116L7.15938 3.25616C7.04375 3.66241 6.83438 4.03741 6.55 4.34991L4.94688 6.11241C4.66875 6.41866 4.69062 6.89366 4.99687 7.17179C5.30312 7.44991 5.77813 7.42804 6.05625 7.12179L7.65938 5.35929C8.1 4.87491 8.42188 4.29679 8.6 3.66866L8.77812 3.04366C8.89062 2.64679 9.30625 2.41554 9.70625 2.52804C10.1063 2.64054 10.3344 3.05616 10.2219 3.45616L10.0437 4.08116C9.86562 4.70304 9.58437 5.29054 9.2125 5.81554C9.05 6.04366 9.03125 6.34366 9.15938 6.59366C9.2875 6.84366 9.54375 6.99991 9.825 6.99991H14C14.275 6.99991 14.5 7.22491 14.5 7.49991C14.5 7.71241 14.3656 7.89679 14.175 7.96866C13.9438 8.05616 13.7688 8.24992 13.7094 8.49054C13.65 8.73117 13.7125 8.98429 13.875 9.16866C13.9531 9.25616 14 9.37179 14 9.49991C14 9.74366 13.825 9.94679 13.5938 9.99054C13.3375 10.0405 13.1219 10.2187 13.0312 10.4624C12.9406 10.7062 12.9813 10.9843 13.1438 11.1905C13.2094 11.2749 13.25 11.3812 13.25 11.4999C13.25 11.7093 13.1187 11.8937 12.9312 11.9655C12.5719 12.1062 12.3781 12.4937 12.4812 12.8655C12.4937 12.9062 12.5 12.953 12.5 12.9999C12.5 13.2749 12.275 13.4999 12 13.4999H8.95312C8.55937 13.4999 8.17188 13.3843 7.84375 13.1655L5.91563 11.8812C5.57188 11.6499 5.10625 11.7437 4.875 12.0905C4.64375 12.4374 4.7375 12.8999 5.08437 13.1312L7.0125 14.4155C7.5875 14.7999 8.2625 15.003 8.95312 15.003H12C13.0844 15.003 13.9656 14.1405 14 13.0655C14.4563 12.6999 14.75 12.1374 14.75 11.503C14.75 11.3624 14.7344 11.228 14.7094 11.0968C15.1906 10.7312 15.5 10.153 15.5 9.50304C15.5 9.29991 15.4688 9.10304 15.4125 8.91866C15.775 8.55304 16 8.05304 16 7.49991C16 6.39679 15.1063 5.49991 14 5.49991H11.1156C11.2625 5.17491 11.3875 4.83741 11.4844 4.49366L11.6625 3.86866C12.0031 2.67491 11.3125 1.42804 10.1187 1.08741ZM1 5.99991C0.446875 5.99991 0 6.44679 0 6.99991V13.9999C0 14.553 0.446875 14.9999 1 14.9999H3C3.55313 14.9999 4 14.553 4 13.9999V6.99991C4 6.44679 3.55313 5.99991 3 5.99991H1Z"></path></svg><small class="text-sm font-normal leading-4 ">Yes</small></button><button class="px-3.5 py-2 flex flex-row gap-3 items-center border-standard rounded-xl text-gray-600 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 bg-white/50 dark:bg-codeblock/50 hover:border-gray-500 hover:dark:border-gray-500"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" class="fill-current"><path d="M10.1187 14.9124C8.925 15.253 7.67813 14.5624 7.3375 13.3687L7.15938 12.7437C7.04375 12.3374 6.83438 11.9624 6.55 11.6499L4.94688 9.8874C4.66875 9.58115 4.69062 9.10615 4.99687 8.82803C5.30312 8.5499 5.77813 8.57178 6.05625 8.87803L7.65938 10.6405C8.1 11.1249 8.42188 11.703 8.6 12.3312L8.77812 12.9562C8.89062 13.353 9.30625 13.5843 9.70625 13.4718C10.1063 13.3593 10.3344 12.9437 10.2219 12.5437L10.0437 11.9187C9.86562 11.2968 9.58437 10.7093 9.2125 10.1843C9.05 9.95615 9.03125 9.65615 9.15938 9.40615C9.2875 9.15615 9.54375 8.9999 9.825 8.9999H14C14.275 8.9999 14.5 8.7749 14.5 8.4999C14.5 8.2874 14.3656 8.10303 14.175 8.03115C13.9438 7.94365 13.7688 7.7499 13.7094 7.50928C13.65 7.26865 13.7125 7.01553 13.875 6.83115C13.9531 6.74365 14 6.62803 14 6.4999C14 6.25615 13.825 6.05303 13.5938 6.00928C13.3375 5.95928 13.1219 5.78115 13.0312 5.53428C12.9406 5.2874 12.9813 5.0124 13.1438 4.80615C13.2094 4.72178 13.25 4.61553 13.25 4.49678C13.25 4.2874 13.1187 4.10303 12.9312 4.03115C12.5719 3.89053 12.3781 3.50303 12.4812 3.13115C12.4937 3.09053 12.5 3.04365 12.5 2.99678C12.5 2.72178 12.275 2.49678 12 2.49678H8.95312C8.55937 2.49678 8.17188 2.6124 7.84375 2.83115L5.91563 4.11553C5.57188 4.34678 5.10625 4.25303 4.875 3.90615C4.64375 3.55928 4.7375 3.09678 5.08437 2.86553L7.0125 1.58115C7.5875 1.19678 8.2625 0.993652 8.95312 0.993652H12C13.0844 0.993652 13.9656 1.85615 14 2.93115C14.4563 3.29678 14.75 3.85928 14.75 4.49365C14.75 4.63428 14.7344 4.76865 14.7094 4.8999C15.1906 5.26553 15.5 5.84365 15.5 6.49365C15.5 6.69678 15.4688 6.89365 15.4125 7.07803C15.775 7.44678 16 7.94678 16 8.4999C16 9.60303 15.1063 10.4999 14 10.4999H11.1156C11.2625 10.8249 11.3875 11.1624 11.4844 11.5062L11.6625 12.1312C12.0031 13.3249 11.3125 14.5718 10.1187 14.9124ZM1 11.9999C0.446875 11.9999 0 11.553 0 10.9999V3.9999C0 3.44678 0.446875 2.9999 1 2.9999H3C3.55313 2.9999 4 3.44678 4 3.9999V10.9999C4 11.553 3.55313 11.9999 3 11.9999H1Z"></path></svg><small class="text-sm font-normal leading-4 ">No</small></button></div></div><div class="flex flex-row gap-3 justify-end"></div></div></div><div id="pagination" class="mb-12 px-0.5 flex items-center text-sm font-semibold text-gray-700 dark:text-gray-200"><a class="flex items-center space-x-3 group" href="/introduction"><svg viewBox="0 0 3 6" class="h-1.5 stroke-gray-400 overflow-visible group-hover:stroke-gray-600 dark:group-hover:stroke-gray-300"><path d="M3 0L0 3L3 6" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="group-hover:text-gray-900 dark:group-hover:text-white">Introduction</span></a><a class="flex items-center ml-auto space-x-3 group" href="/quickstart/client"><span class="group-hover:text-gray-900 dark:group-hover:text-white">For Client Developers</span><svg viewBox="0 0 3 6" class="rotate-180 h-1.5 stroke-gray-400 overflow-visible group-hover:stroke-gray-600 dark:group-hover:stroke-gray-300"><path d="M3 0L0 3L3 6" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></a></div></div><footer id="footer" class="flex gap-12 justify-between pt-10 border-t border-gray-100 sm:flex dark:border-gray-800/50 pb-28"><div class="flex gap-6 flex-wrap"><a href="https://github.com/modelcontextprotocol" target="_blank"><span class="sr-only">github</span><svg class="w-5 h-5 bg-gray-400 dark:bg-gray-500 hover:bg-gray-500 dark:hover:bg-gray-400" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/github.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/github.svg);mask-repeat:no-repeat;mask-position:center"></svg></a></div></footer></div><div class="hidden xl:flex self-start sticky xl:flex-col max-w-[28rem] h-[calc(100vh-6rem)] top-[5.5rem]" id="content-side-layout"><div class="z-10 hidden xl:flex pl-10 box-border w-[19rem] max-h-full" id="table-of-contents-layout"><div class="text-gray-600 text-sm leading-6 w-[16.5rem] overflow-y-auto space-y-2 pb-4 -mt-10 pt-10" id="table-of-contents"><div class="text-gray-700 dark:text-gray-300 font-medium flex items-center space-x-2"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" stroke="currentColor" stroke-width="2" xmlns="http://www.w3.org/2000/svg" class="h-3 w-3"><path d="M2.44434 12.6665H13.5554" stroke-linecap="round" stroke-linejoin="round"></path><path d="M2.44434 3.3335H13.5554" stroke-linecap="round" stroke-linejoin="round"></path><path d="M2.44434 8H7.33323" stroke-linecap="round" stroke-linejoin="round"></path></svg><span>On this page</span></div><ul id="table-of-contents-content" class="toc"><li class="toc-item relative" data-depth="0"><a href="#what-we%E2%80%99ll-be-building" class="py-1 block hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300">What we’ll be building</a></li><li class="toc-item relative" data-depth="0"><a href="#core-mcp-concepts" class="py-1 block hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300">Core MCP Concepts</a></li><li class="toc-item relative" data-depth="0"><a href="#test-with-commands" class="py-1 block hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300">Test with commands</a></li><li class="toc-item relative" data-depth="0"><a href="#what%E2%80%99s-happening-under-the-hood" class="py-1 block hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300">What’s happening under the hood</a></li><li class="toc-item relative" data-depth="0"><a href="#troubleshooting" class="py-1 block hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300">Troubleshooting</a></li><li class="toc-item relative" data-depth="0"><a href="#next-steps" class="py-1 block hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300">Next steps</a></li></ul></div></div></div></div></div></div></main></div><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"mdxSource":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Accordion, AccordionGroup, Card, CardGroup, CodeBlock, CodeGroup, Frame, Heading, Note, Tab, Tabs, Warning, ZoomImage} = _components;\n  if (!Accordion) _missingMdxReference(\"Accordion\", true);\n  if (!AccordionGroup) _missingMdxReference(\"AccordionGroup\", true);\n  if (!Card) _missingMdxReference(\"Card\", true);\n  if (!CardGroup) _missingMdxReference(\"CardGroup\", true);\n  if (!CodeBlock) _missingMdxReference(\"CodeBlock\", true);\n  if (!CodeGroup) _missingMdxReference(\"CodeGroup\", true);\n  if (!Frame) _missingMdxReference(\"Frame\", true);\n  if (!Heading) _missingMdxReference(\"Heading\", true);\n  if (!Note) _missingMdxReference(\"Note\", true);\n  if (!Tab) _missingMdxReference(\"Tab\", true);\n  if (!Tabs) _missingMdxReference(\"Tabs\", true);\n  if (!Warning) _missingMdxReference(\"Warning\", true);\n  if (!ZoomImage) _missingMdxReference(\"ZoomImage\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"In this tutorial, we’ll build a simple MCP weather server and connect it to a host, Claude for Desktop. We’ll start with a basic setup, and then progress to more complex use cases.\"\n    }), \"\\n\", _jsx(Heading, {\n      level: \"3\",\n      id: \"what-we%E2%80%99ll-be-building\",\n      isAtRootLevel: \"true\",\n      children: \"What we’ll be building\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Many LLMs do not currently have the ability to fetch the forecast and severe weather alerts. Let’s use MCP to solve that!\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We’ll build a server that exposes two tools: \", _jsx(_components.code, {\n        children: \"get-alerts\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"get-forecast\"\n      }), \". Then we’ll connect the server to an MCP host (in this case, Claude for Desktop):\"]\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/weather-alerts.png\"\n        })\n      })\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/current-weather.png\"\n        })\n      })\n    }), \"\\n\", _jsx(Note, {\n      children: _jsxs(_components.p, {\n        children: [\"Servers can connect to any client. We’ve chosen Claude for Desktop here for simplicity, but we also have guides on \", _jsx(_components.a, {\n          href: \"/quickstart/client\",\n          children: \"building your own client\"\n        }), \" as well as a \", _jsx(_components.a, {\n          href: \"/clients\",\n          children: \"list of other clients here\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsx(Accordion, {\n      title: \"Why Claude for Desktop and not Claude.ai?\",\n      children: _jsx(_components.p, {\n        children: \"Because servers are locally run, MCP currently only supports desktop hosts. Remote hosts are in active development.\"\n      })\n    }), \"\\n\", _jsx(Heading, {\n      level: \"3\",\n      id: \"core-mcp-concepts\",\n      isAtRootLevel: \"true\",\n      children: \"Core MCP Concepts\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"MCP servers can provide three main types of capabilities:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Resources\"\n        }), \": File-like data that can be read by clients (like API responses or file contents)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Tools\"\n        }), \": Functions that can be called by the LLM (with user approval)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Prompts\"\n        }), \": Pre-written templates that help users accomplish specific tasks\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This tutorial will primarily focus on tools.\"\n    }), \"\\n\", _jsxs(Tabs, {\n      children: [_jsxs(Tab, {\n        title: \"Python\",\n        children: [_jsxs(_components.p, {\n          children: [\"Let’s get started with building our weather server! \", _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/quickstart-resources/tree/main/weather-server-python\",\n            children: \"You can find the complete code for what we’ll be building here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"prerequisite-knowledge\",\n          isAtRootLevel: \"false\",\n          children: \"Prerequisite knowledge\"\n        }), _jsx(_components.p, {\n          children: \"This quickstart assumes you have familiarity with:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Python\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"LLMs like Claude\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"system-requirements\",\n          isAtRootLevel: \"false\",\n          children: \"System requirements\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Python 3.10 or higher installed.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"You must use the Python MCP SDK 1.2.0 or higher.\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"set-up-your-environment\",\n          isAtRootLevel: \"false\",\n          children: \"Set up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s install \", _jsx(_components.code, {\n            children: \"uv\"\n          }), \" and set up our Python project and environment:\"]\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"curl\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token parameter variable\",\n                    children: \"-LsSf\"\n                  }), \" https://astral.sh/uv/install.sh \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"|\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"sh\"\n                  })]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"powershell \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"ExecutionPolicy ByPass \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"c \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"irm https://astral.sh/uv/install.ps1 | iex\\\"\"\n                  })]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"Make sure to restart your terminal afterwards to ensure that the \", _jsx(_components.code, {\n            children: \"uv\"\n          }), \" command gets picked up.\"]\n        }), _jsx(_components.p, {\n          children: \"Now, let’s create and set up our project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"uv init weather\"\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" weather\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create virtual environment and activate it\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"uv venv\"\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"source\"\n                  }), \" .venv/bin/activate\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"uv \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"add\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"mcp[cli]\\\"\"\n                  }), \" httpx\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create our server file\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"touch\"\n                  }), \" weather.py\"]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"uv init weather\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd weather\"\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create virtual environment and activate it\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"uv venv\"\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"venv\\\\Scripts\\\\activate\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"uv add mcp\", _jsx(_components.span, {\n                    className: \"token namespace\",\n                    children: \"[cli]\"\n                  }), \" httpx\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create our server file\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"new-item\"\n                  }), \" weather\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"py\"]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Now let’s dive into building your server.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"building-your-server\",\n          isAtRootLevel: \"false\",\n          children: \"Building your server\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"importing-packages-and-setting-up-the-instance\",\n          isAtRootLevel: \"false\",\n          children: \"Importing packages and setting up the instance\"\n        }), _jsxs(_components.p, {\n          children: [\"Add these to the top of your \", _jsx(_components.code, {\n            children: \"weather.py\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" typing \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" Any\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" httpx\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"fastmcp \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" FastMCP\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Initialize FastMCP server\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"mcp \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" FastMCP\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"weather\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Constants\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"NWS_API_BASE \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"https://api.weather.gov\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"USER_AGENT \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"weather-app/1.0\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"The FastMCP class uses Python type hints and docstrings to automatically generate tool definitions, making it easy to create and maintain MCP tools.\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"helper-functions\",\n          isAtRootLevel: \"false\",\n          children: \"Helper functions\"\n        }), _jsx(_components.p, {\n          children: \"Next, let’s add our helper functions for querying and formatting the data from the National Weather Service API:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"make_nws_request\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"dict\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" Any\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"|\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"None\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token triple-quoted-string string\",\n                  children: \"\\\"\\\"\\\"Make a request to the NWS API with proper error handling.\\\"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    headers \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"User-Agent\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" USER_AGENT\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Accept\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"application/geo+json\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"with\"\n                }), \" httpx\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"AsyncClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" headers\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"headers\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" timeout\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"30.0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"raise_for_status\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"json\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"except\"\n                }), \" Exception\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"None\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"format_alert\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"dict\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token triple-quoted-string string\",\n                  children: \"\\\"\\\"\\\"Format an alert feature into a readable string.\\\"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    props \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"properties\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Event\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"props\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'event'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'Unknown'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Area\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"props\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'areaDesc'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'Unknown'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Severity\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"props\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'severity'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'Unknown'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Description\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"props\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'description'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'No description available'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Instructions\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"props\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'instruction'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'No specific instructions provided'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"implementing-tool-execution\",\n          isAtRootLevel: \"false\",\n          children: \"Implementing tool execution\"\n        }), _jsx(_components.p, {\n          children: \"The tool execution handler is responsible for actually executing the logic of each tool. Let’s add it:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsxs(_components.span, {\n                  className: \"token decorator annotation punctuation\",\n                  children: [\"@mcp\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"tool\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get_alerts\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"Get weather alerts \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" a US state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" Two\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), \"letter US state code \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"g\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \" CA\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" NY\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    url \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"NWS_API_BASE\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"/alerts/active/area/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"state\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    data \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" make_nws_request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" data \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"or\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"features\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Unable to fetch alerts or no alerts found.\\\"\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"features\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"No active alerts for this state.\\\"\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    alerts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"format_alert\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" feature \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"features\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n---\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"join\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"alerts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsxs(_components.span, {\n                  className: \"token decorator annotation punctuation\",\n                  children: [\"@mcp\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"tool\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get_forecast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"float\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" longitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"float\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"Get weather forecast \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" a location\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" Latitude of the location\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        longitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" Longitude of the location\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# First get the forecast grid endpoint\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    points_url \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"NWS_API_BASE\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"/points/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"latitude\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \",\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"longitude\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    points_data \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" make_nws_request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"points_url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" points_data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Unable to fetch forecast data for this location.\\\"\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Get the forecast URL from the points response\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    forecast_url \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" points_data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"properties\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"forecast\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    forecast_data \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" make_nws_request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"forecast_url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" forecast_data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Unable to fetch detailed forecast.\\\"\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Format the periods into a readable forecast\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    periods \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" forecast_data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"properties\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"periods\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    forecasts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" period \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" periods\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"5\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \"  \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Only show next 5 periods\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        forecast \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'name'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Temperature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'temperature'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \"°\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'temperatureUnit'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Wind\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'windSpeed'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'windDirection'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'detailedForecast'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        forecasts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n---\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"join\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"forecasts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"running-the-server\",\n          isAtRootLevel: \"false\",\n          children: \"Running the server\"\n        }), _jsx(_components.p, {\n          children: \"Finally, let’s initialize and run the server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" __name__ \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"__main__\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Initialize and run the server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"run\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"transport\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'stdio'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Your server is complete! Run \", _jsx(_components.code, {\n            children: \"uv run weather.py\"\n          }), \" to confirm that everything’s working.\"]\n        }), _jsx(_components.p, {\n          children: \"Let’s now test your server from an existing MCP host, Claude for Desktop.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-claude-for-desktop\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Claude for Desktop\"\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"Claude for Desktop is not yet available on Linux. Linux users can proceed to the \", _jsx(_components.a, {\n              href: \"/quickstart/client\",\n              children: \"Building a client\"\n            }), \" tutorial to build an MCP client that connects to the server we just built.\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"First, make sure you have Claude for Desktop installed. \", _jsx(_components.a, {\n            href: \"https://claude.ai/download\",\n            children: \"You can install the latest version\\nhere.\"\n          }), \" If you already have Claude for Desktop, \", _jsx(_components.strong, {\n            children: \"make sure it’s updated to the latest version.\"\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"We’ll need to configure Claude for Desktop for whichever MCP servers you want to use. To do this, open your Claude for Desktop App configuration at \", _jsx(_components.code, {\n            children: \"~/Library/Application Support/Claude/claude_desktop_config.json\"\n          }), \" in a text editor. Make sure to create the file if it doesn’t exist.\"]\n        }), _jsxs(_components.p, {\n          children: [\"For example, if you have \", _jsx(_components.a, {\n            href: \"https://code.visualstudio.com/\",\n            children: \"VS Code\"\n          }), \" installed:\"]\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code ~/Library/Application\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\\\\\"\n                    }), \" Support/Claude/claude_desktop_config.json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-powershell\",\n                children: _jsxs(_components.code, {\n                  className: \"language-powershell\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code \", _jsx(_components.span, {\n                      className: \"token variable\",\n                      children: \"$env\"\n                    }), \":AppData\\\\Claude\\\\claude_desktop_config\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"You’ll then add your servers in the \", _jsx(_components.code, {\n            children: \"mcpServers\"\n          }), \" key. The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.\"]\n        }), _jsx(_components.p, {\n          children: \"In this case, we’ll add our single weather server like so:\"\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"Python\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"uv\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--directory\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"run\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"weather.py\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"Python\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"uv\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--directory\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"C:\\\\\\\\ABSOLUTE\\\\\\\\PATH\\\\\\\\TO\\\\\\\\PARENT\\\\\\\\FOLDER\\\\\\\\weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"run\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"weather.py\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"You may need to put the full path to the \", _jsx(_components.code, {\n              children: \"uv\"\n            }), \" executable in the \", _jsx(_components.code, {\n              children: \"command\"\n            }), \" field. You can get this by running \", _jsx(_components.code, {\n              children: \"which uv\"\n            }), \" on MacOS/Linux or \", _jsx(_components.code, {\n              children: \"where uv\"\n            }), \" on Windows.\"]\n          })\n        }), _jsx(Note, {\n          children: _jsx(_components.p, {\n            children: \"Make sure you pass in the absolute path to your server.\"\n          })\n        }), _jsx(_components.p, {\n          children: \"This tells Claude for Desktop:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"There’s an MCP server named “weather”\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"To launch it by running \", _jsx(_components.code, {\n              children: \"uv --directory /ABSOLUTE/PATH/TO/PARENT/FOLDER/weather run weather.py\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"Save the file, and restart \", _jsx(_components.strong, {\n            children: \"Claude for Desktop\"\n          }), \".\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"Node\",\n        children: [_jsxs(_components.p, {\n          children: [\"Let’s get started with building our weather server! \", _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/quickstart-resources/tree/main/weather-server-typescript\",\n            children: \"You can find the complete code for what we’ll be building here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"prerequisite-knowledge-2\",\n          isAtRootLevel: \"false\",\n          children: \"Prerequisite knowledge\"\n        }), _jsx(_components.p, {\n          children: \"This quickstart assumes you have familiarity with:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"TypeScript\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"LLMs like Claude\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"system-requirements-2\",\n          isAtRootLevel: \"false\",\n          children: \"System requirements\"\n        }), _jsx(_components.p, {\n          children: \"For TypeScript, make sure you have the latest version of Node installed.\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"set-up-your-environment-2\",\n          isAtRootLevel: \"false\",\n          children: \"Set up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s install Node.js and npm if you haven’t already. You can download them from \", _jsx(_components.a, {\n            href: \"https://nodejs.org/\",\n            children: \"nodejs.org\"\n          }), \".\\nVerify your Node.js installation:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--version\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"npm\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--version\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"For this tutorial, you’ll need Node.js version 16 or higher.\"\n        }), _jsx(_components.p, {\n          children: \"Now, let’s create and set up our project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" weather\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" weather\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new npm project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" init \", _jsx(_components.span, {\n                    className: \"token parameter variable\",\n                    children: \"-y\"\n                  })]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"install\"\n                  }), \" @modelcontextprotocol/sdk zod\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"install\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token parameter variable\",\n                    children: \"-D\"\n                  }), \" @types/node typescript\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create our files\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" src\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"touch\"\n                  }), \" src/index.ts\"]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"md weather\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd weather\"\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new npm project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"npm init \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"y\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"npm install @modelcontextprotocol/sdk zod\"\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"npm install \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"D @types/node typescript\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create our files\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"md src\"\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"new-item\"\n                  }), \" src\\\\index\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"ts\"]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Update your package.json to add type: “module” and a build script:\"\n        }), _jsx(CodeBlock, {\n          filename: \"package.json\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-json\",\n            children: _jsxs(_components.code, {\n              className: \"language-json\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"type\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"module\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"bin\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"weather\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"./build/index.js\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"scripts\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"build\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"tsc \u0026\u0026 chmod 755 build/index.js\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"files\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"build\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Create a \", _jsx(_components.code, {\n            children: \"tsconfig.json\"\n          }), \" in the root of your project:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"tsconfig.json\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-json\",\n            children: _jsxs(_components.code, {\n              className: \"language-json\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"compilerOptions\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"target\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ES2022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"module\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Node16\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"moduleResolution\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Node16\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"outDir\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"./build\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"rootDir\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"./src\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"strict\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"esModuleInterop\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"skipLibCheck\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"forceConsistentCasingInFileNames\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"include\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"src/**/*\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"exclude\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"node_modules\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Now let’s dive into building your server.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"building-your-server-2\",\n          isAtRootLevel: \"false\",\n          children: \"Building your server\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"importing-packages-and-setting-up-the-instance-2\",\n          isAtRootLevel: \"false\",\n          children: \"Importing packages and setting up the instance\"\n        }), _jsxs(_components.p, {\n          children: [\"Add these to the top of your \", _jsx(_components.code, {\n            children: \"src/index.ts\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" McpServer \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@modelcontextprotocol/sdk/server/mcp.js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" StdioServerTransport \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@modelcontextprotocol/sdk/server/stdio.js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" z \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"zod\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"NWS_API_BASE\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"https://api.weather.gov\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"USER_AGENT\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"weather-app/1.0\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Create server instance\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" server \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"McpServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"weather\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  version\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"1.0.0\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  capabilities\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    resources\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"helper-functions-2\",\n          isAtRootLevel: \"false\",\n          children: \"Helper functions\"\n        }), _jsx(_components.p, {\n          children: \"Next, let’s add our helper functions for querying and formatting the data from the National Weather Service API:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Helper function for making NWS API requests\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"function\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token generic-function\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"makeNWSRequest\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003c\"\n                    }), _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"T\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"Promise\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"T\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"|\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" headers \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string-property property\",\n                  children: \"\\\"User-Agent\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"USER_AGENT\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Accept\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"application/geo+json\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"fetch\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" headers \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"ok\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"HTTP error! status: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"response\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"status\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"json\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"T\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"catch\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"error\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Error making NWS request:\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" error\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"interface\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"AlertFeature\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    event\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    areaDesc\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    severity\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    status\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    headline\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Format alert data\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"function\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"formatAlert\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" AlertFeature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" props \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Event: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"props\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"event \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Area: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"props\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"areaDesc \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Severity: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"props\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"severity \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Status: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"props\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"status \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Headline: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"props\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"headline \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"No headline\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"---\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"interface\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"ForecastPeriod\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  temperature\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"number\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  temperatureUnit\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  windSpeed\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  windDirection\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  shortForecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"interface\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"AlertsResponse\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  features\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" AlertFeature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"interface\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"PointsResponse\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    forecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"interface\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"ForecastResponse\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    periods\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" ForecastPeriod\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"implementing-tool-execution-2\",\n          isAtRootLevel: \"false\",\n          children: \"Implementing tool execution\"\n        }), _jsx(_components.p, {\n          children: \"The tool execution handler is responsible for actually executing the logic of each tool. Let’s add it:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Register weather tools\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"tool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"get-alerts\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Get weather alerts for a state\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    state\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" z\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"length\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"2\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"describe\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Two-letter state code (e.g. CA, NY)\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" state \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" stateCode \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toUpperCase\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" alertsUrl \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"NWS_API_BASE\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"/alerts?area=\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"stateCode\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" alertsData \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token generic-function\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"makeNWSRequest\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003c\"\n                    }), \"AlertsResponse\", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"alertsUrl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"alertsData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Failed to retrieve alerts data\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" features \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" alertsData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"features \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"||\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"features\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"length \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"No active alerts for \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"stateCode\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" formattedAlerts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" features\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"formatAlert\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" alertsText \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Active alerts for \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"stateCode\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \":\\\\n\\\\n\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"formattedAlerts\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"join\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\\\\n\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" alertsText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"tool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"get-forecast\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Get weather forecast for a location\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    latitude\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" z\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"number\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"min\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"90\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"max\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"90\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"describe\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Latitude of the location\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    longitude\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" z\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"number\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"min\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"180\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"max\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"180\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"describe\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Longitude of the location\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" longitude \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Get grid point data\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" pointsUrl \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"NWS_API_BASE\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"/points/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"latitude\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"toFixed\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token number\",\n                      children: \"4\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \",\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"longitude\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"toFixed\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token number\",\n                      children: \"4\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" pointsData \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token generic-function\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"makeNWSRequest\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003c\"\n                    }), \"PointsResponse\", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"pointsUrl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"pointsData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Failed to retrieve grid point data for coordinates: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"latitude\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \", \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"longitude\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \". This location may not be supported by the NWS API (only US locations are supported).\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" forecastUrl \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" pointsData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?.\"\n                }), \"forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"forecastUrl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Failed to get forecast URL from grid point data\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Get forecast data\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" forecastData \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token generic-function\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"makeNWSRequest\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003c\"\n                    }), \"ForecastResponse\", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"forecastUrl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"forecastData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Failed to retrieve forecast data\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" periods \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" forecastData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?.\"\n                }), \"periods \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"||\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"periods\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"length \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"No forecast periods available\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Format forecast periods\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" formattedForecast \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" periods\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" ForecastPeriod\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"name \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \":\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Temperature: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"temperature \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"°\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"temperatureUnit \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"F\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Wind: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"windSpeed \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \" \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"windDirection \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"shortForecast \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"No forecast available\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"---\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" forecastText \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Forecast for \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"latitude\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \", \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"longitude\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \":\\\\n\\\\n\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"formattedForecast\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"join\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\\\\n\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" forecastText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"running-the-server-2\",\n          isAtRootLevel: \"false\",\n          children: \"Running the server\"\n        }), _jsx(_components.p, {\n          children: \"Finally, implement the main function to run the server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"function\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" transport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"StdioServerTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connect\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"transport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Weather MCP Server running on stdio\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"catch\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"error\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Fatal error in main():\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" error\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"exit\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Make sure to run \", _jsx(_components.code, {\n            children: \"npm run build\"\n          }), \" to build your server! This is a very important step in getting your server to connect.\"]\n        }), _jsx(_components.p, {\n          children: \"Let’s now test your server from an existing MCP host, Claude for Desktop.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-claude-for-desktop-2\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Claude for Desktop\"\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"Claude for Desktop is not yet available on Linux. Linux users can proceed to the \", _jsx(_components.a, {\n              href: \"/quickstart/client\",\n              children: \"Building a client\"\n            }), \" tutorial to build an MCP client that connects to the server we just built.\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"First, make sure you have Claude for Desktop installed. \", _jsx(_components.a, {\n            href: \"https://claude.ai/download\",\n            children: \"You can install the latest version\\nhere.\"\n          }), \" If you already have Claude for Desktop, \", _jsx(_components.strong, {\n            children: \"make sure it’s updated to the latest version.\"\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"We’ll need to configure Claude for Desktop for whichever MCP servers you want to use. To do this, open your Claude for Desktop App configuration at \", _jsx(_components.code, {\n            children: \"~/Library/Application Support/Claude/claude_desktop_config.json\"\n          }), \" in a text editor. Make sure to create the file if it doesn’t exist.\"]\n        }), _jsxs(_components.p, {\n          children: [\"For example, if you have \", _jsx(_components.a, {\n            href: \"https://code.visualstudio.com/\",\n            children: \"VS Code\"\n          }), \" installed:\"]\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code ~/Library/Application\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\\\\\"\n                    }), \" Support/Claude/claude_desktop_config.json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-powershell\",\n                children: _jsxs(_components.code, {\n                  className: \"language-powershell\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code \", _jsx(_components.span, {\n                      className: \"token variable\",\n                      children: \"$env\"\n                    }), \":AppData\\\\Claude\\\\claude_desktop_config\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"You’ll then add your servers in the \", _jsx(_components.code, {\n            children: \"mcpServers\"\n          }), \" key. The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.\"]\n        }), _jsx(_components.p, {\n          children: \"In this case, we’ll add our single weather server like so:\"\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeGroup, {\n              children: _jsx(CodeBlock, {\n                filename: \"Node\",\n                expandable: \"false\",\n                children: _jsx(_components.pre, {\n                  className: \"language-json\",\n                  children: _jsxs(_components.code, {\n                    className: \"language-json\",\n                    children: [_jsx(_components.span, {\n                      className: \"\",\n                      children: _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"    \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"mcpServers\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"        \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"weather\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"command\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"node\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \",\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"args\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"[\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"                \", _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/index.js\\\"\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"]\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"        \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"    \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })]\n                    }), \"\\n\", _jsx(_components.span, {\n                      className: \"\",\n                      children: _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })\n                    }), \"\\n\"]\n                  })\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeGroup, {\n              children: _jsx(CodeBlock, {\n                filename: \"Node\",\n                expandable: \"false\",\n                children: _jsx(_components.pre, {\n                  className: \"language-json\",\n                  children: _jsxs(_components.code, {\n                    className: \"language-json\",\n                    children: [_jsx(_components.span, {\n                      className: \"\",\n                      children: _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"    \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"mcpServers\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"        \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"weather\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"command\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"node\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \",\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"args\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"[\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"                \", _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"C:\\\\\\\\PATH\\\\\\\\TO\\\\\\\\PARENT\\\\\\\\FOLDER\\\\\\\\weather\\\\\\\\build\\\\\\\\index.js\\\"\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"]\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"        \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"    \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })]\n                    }), \"\\n\", _jsx(_components.span, {\n                      className: \"\",\n                      children: _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })\n                    }), \"\\n\"]\n                  })\n                })\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"This tells Claude for Desktop:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"There’s an MCP server named “weather”\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Launch it by running \", _jsx(_components.code, {\n              children: \"node /ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/index.js\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"Save the file, and restart \", _jsx(_components.strong, {\n            children: \"Claude for Desktop\"\n          }), \".\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"Java\",\n        children: [_jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"This is a quickstart demo based on Spring AI MCP auto-configuration and boot starters.\\nTo learn how to create sync and async MCP Servers, manually, consult the \", _jsx(_components.a, {\n              href: \"/sdk/java/mcp-server\",\n              children: \"Java SDK Server\"\n            }), \" documentation.\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Let’s get started with building our weather server!\\n\", _jsx(_components.a, {\n            href: \"https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/weather/starter-stdio-server\",\n            children: \"You can find the complete code for what we’ll be building here.\"\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"For more information, see the \", _jsx(_components.a, {\n            href: \"https://docs.spring.io/spring-ai/reference/api/mcp/mcp-server-boot-starter-docs.html\",\n            children: \"MCP Server Boot Starter\"\n          }), \" reference documentation.\\nFor manual MCP Server implementation, refer to the \", _jsx(_components.a, {\n            href: \"/sdk/java/mcp-server\",\n            children: \"MCP Server Java SDK documentation\"\n          }), \".\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"system-requirements-3\",\n          isAtRootLevel: \"false\",\n          children: \"System requirements\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Java 17 or higher installed.\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"https://docs.spring.io/spring-boot/installing.html\",\n              children: \"Spring Boot 3.3.x\"\n            }), \" or higher\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"set-up-your-environment-3\",\n          isAtRootLevel: \"false\",\n          children: \"Set up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"Use the \", _jsx(_components.a, {\n            href: \"https://start.spring.io/\",\n            children: \"Spring Initializer\"\n          }), \" to bootstrap the project.\"]\n        }), _jsx(_components.p, {\n          children: \"You will need to add the following dependencies:\"\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"Maven\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-xml\",\n                children: _jsxs(_components.code, {\n                  className: \"language-xml\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"dependencies\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"dependency\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"          \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"groupId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    }), \"org.springframework.ai\", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"groupId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"          \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"artifactId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    }), \"spring-ai-starter-mcp-server\", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"artifactId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"dependency\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"dependency\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"          \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"groupId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    }), \"org.springframework\", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"groupId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"          \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"artifactId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    }), \"spring-web\", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"artifactId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"dependency\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"dependencies\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Gradle\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-groovy\",\n                children: _jsxs(_components.code, {\n                  className: \"language-groovy\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"dependencies \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  implementation \", _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"platform\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-string\",\n                      children: _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"org.springframework.ai:spring-ai-starter-mcp-server\\\"\"\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  implementation \", _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"platform\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-string\",\n                      children: _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"org.springframework:spring-web\\\"\"\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), \"   \"]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Then configure your application by setting the application properties:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"application.properties\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token assign-left variable\",\n                    children: \"spring.main.bannerMode\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \"off\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token assign-left variable\",\n                    children: \"logging.pattern.console\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  })]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"application.yml\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-yaml\",\n              children: _jsxs(_components.code, {\n                className: \"language-yaml\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"logging\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"  pattern\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    console\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"spring\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"  main\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token key atrule\",\n                    children: \"banner-mode\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  }), \" off\"]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"The \", _jsx(_components.a, {\n            href: \"https://docs.spring.io/spring-ai/reference/api/mcp/mcp-server-boot-starter-docs.html#_configuration_properties\",\n            children: \"Server Configuration Properties\"\n          }), \" documents all available properties.\"]\n        }), _jsx(_components.p, {\n          children: \"Now let’s dive into building your server.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"building-your-server-3\",\n          isAtRootLevel: \"false\",\n          children: \"Building your server\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"weather-service\",\n          isAtRootLevel: \"false\",\n          children: \"Weather Service\"\n        }), _jsxs(_components.p, {\n          children: [\"Let’s implement a \", _jsx(_components.a, {\n            href: \"https://github.com/spring-projects/spring-ai-examples/blob/main/model-context-protocol/weather/starter-stdio-server/src/main/java/org/springframework/ai/mcp/sample/server/WeatherService.java\",\n            children: \"WeatherService.java\"\n          }), \" that uses a REST client to query the data from the National Weather Service API:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-java\",\n            children: _jsxs(_components.code, {\n              className: \"language-java\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@Service\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"WeatherService\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"final\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"RestClient\"\n                }), \" restClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"WeatherService\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"restClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"RestClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"baseUrl\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"https://api.weather.gov\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"defaultHeader\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Accept\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"application/geo+json\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"defaultHeader\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"User-Agent\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"WeatherApiClient/1.0 (your@email.com)\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@Tool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Get weather forecast for a specific latitude/longitude\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"String\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getWeatherForecastByLocation\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"double\"\n                }), \" latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"   \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Latitude coordinate\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"double\"\n                }), \" longitude   \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Longitude coordinate\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Returns detailed forecast including:\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Temperature and unit\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Wind speed and direction\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Detailed forecast description\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\t\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@Tool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Get weather alerts for a US state\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"String\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getAlerts\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@ToolParam\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Two-letter US state code (e.g. CA, NY)\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"String\"\n                }), \" state\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Returns active alerts including:\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Event type\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Affected area\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Severity\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Description\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Safety instructions\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// ......\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"The \", _jsx(_components.code, {\n            children: \"@Service\"\n          }), \" annotation with auto-register the service in your application context.\\nThe Spring AI \", _jsx(_components.code, {\n            children: \"@Tool\"\n          }), \" annotation, making it easy to create and maintain MCP tools.\"]\n        }), _jsx(_components.p, {\n          children: \"The auto-configuration will automatically register these tools with the MCP server.\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"create-your-boot-application\",\n          isAtRootLevel: \"false\",\n          children: \"Create your Boot Application\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-java\",\n            children: _jsxs(_components.code, {\n              className: \"language-java\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@SpringBootApplication\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"McpServerApplication\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"void\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"String\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"SpringApplication\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"run\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"McpServerApplication\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@Bean\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"ToolCallbackProvider\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"weatherTools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"WeatherService\"\n                }), \" weatherService\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \"  \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"MethodToolCallbackProvider\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toolObjects\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"weatherService\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Uses the the \", _jsx(_components.code, {\n            children: \"MethodToolCallbackProvider\"\n          }), \" utils to convert the \", _jsx(_components.code, {\n            children: \"@Tools\"\n          }), \" into actionable callbacks used by the MCP server.\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"running-the-server-3\",\n          isAtRootLevel: \"false\",\n          children: \"Running the server\"\n        }), _jsx(_components.p, {\n          children: \"Finally, let’s build the server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"./mvnw clean \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"install\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"This will generate a \", _jsx(_components.code, {\n            children: \"mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar\"\n          }), \" file within the \", _jsx(_components.code, {\n            children: \"target\"\n          }), \" folder.\"]\n        }), _jsx(_components.p, {\n          children: \"Let’s now test your server from an existing MCP host, Claude for Desktop.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-claude-for-desktop-3\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Claude for Desktop\"\n        }), _jsx(Note, {\n          children: _jsx(_components.p, {\n            children: \"Claude for Desktop is not yet available on Linux.\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"First, make sure you have Claude for Desktop installed.\\n\", _jsx(_components.a, {\n            href: \"https://claude.ai/download\",\n            children: \"You can install the latest version here.\"\n          }), \" If you already have Claude for Desktop, \", _jsx(_components.strong, {\n            children: \"make sure it’s updated to the latest version.\"\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"We’ll need to configure Claude for Desktop for whichever MCP servers you want to use.\\nTo do this, open your Claude for Desktop App configuration at \", _jsx(_components.code, {\n            children: \"~/Library/Application Support/Claude/claude_desktop_config.json\"\n          }), \" in a text editor.\\nMake sure to create the file if it doesn’t exist.\"]\n        }), _jsxs(_components.p, {\n          children: [\"For example, if you have \", _jsx(_components.a, {\n            href: \"https://code.visualstudio.com/\",\n            children: \"VS Code\"\n          }), \" installed:\"]\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code ~/Library/Application\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\\\\\"\n                    }), \" Support/Claude/claude_desktop_config.json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-powershell\",\n                children: _jsxs(_components.code, {\n                  className: \"language-powershell\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code \", _jsx(_components.span, {\n                      className: \"token variable\",\n                      children: \"$env\"\n                    }), \":AppData\\\\Claude\\\\claude_desktop_config\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"You’ll then add your servers in the \", _jsx(_components.code, {\n            children: \"mcpServers\"\n          }), \" key.\\nThe MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.\"]\n        }), _jsx(_components.p, {\n          children: \"In this case, we’ll add our single weather server like so:\"\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"java\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"spring-ai-mcp-weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"java\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"-Dspring.ai.mcp.server.stdio=true\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"-jar\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"java\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"spring-ai-mcp-weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"java\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"-Dspring.ai.mcp.server.transport=STDIO\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"-jar\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"C:\\\\\\\\ABSOLUTE\\\\\\\\PATH\\\\\\\\TO\\\\\\\\PARENT\\\\\\\\FOLDER\\\\\\\\weather\\\\\\\\mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsx(Note, {\n          children: _jsx(_components.p, {\n            children: \"Make sure you pass in the absolute path to your server.\"\n          })\n        }), _jsx(_components.p, {\n          children: \"This tells Claude for Desktop:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"There’s an MCP server named “my-weather-server”\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"To launch it by running \", _jsx(_components.code, {\n              children: \"java -jar /ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"Save the file, and restart \", _jsx(_components.strong, {\n            children: \"Claude for Desktop\"\n          }), \".\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-java-client\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Java client\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"create-a-mcp-client-manually\",\n          isAtRootLevel: \"false\",\n          children: \"Create a MCP Client manually\"\n        }), _jsxs(_components.p, {\n          children: [\"Use the \", _jsx(_components.code, {\n            children: \"McpClient\"\n          }), \" to connect to the server:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-java\",\n            children: _jsxs(_components.code, {\n              className: \"language-java\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" stdioParams \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"ServerParameters\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"java\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"args\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"-jar\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" stdioTransport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"StdioClientTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"stdioParams\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" mcpClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"McpClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"sync\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"stdioTransport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"initialize\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"ListToolsResult\"\n                }), \" toolsList \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listTools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"CallToolResult\"\n                }), \" weather \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"callTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"CallToolRequest\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"getWeatherForecastByLocation\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"of\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"latitude\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"47.6062\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"longitude\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"-122.3321\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"CallToolResult\"\n                }), \" alert \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"callTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"CallToolRequest\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"getAlerts\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"of\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"state\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"NY\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"closeGracefully\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"use-mcp-client-boot-starter\",\n          isAtRootLevel: \"false\",\n          children: \"Use MCP Client Boot Starter\"\n        }), _jsxs(_components.p, {\n          children: [\"Create a new boot starter application using the \", _jsx(_components.code, {\n            children: \"spring-ai-starter-mcp-client\"\n          }), \" dependency:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-xml\",\n            children: _jsxs(_components.code, {\n              className: \"language-xml\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"org.springframework.ai\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"spring-ai-starter-mcp-client\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"and set the \", _jsx(_components.code, {\n            children: \"spring.ai.mcp.client.stdio.servers-configuration\"\n          }), \" property to point to your \", _jsx(_components.code, {\n            children: \"claude_desktop_config.json\"\n          }), \".\\nYou can re-use the existing Anthropic Desktop configuration:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-properties\",\n            children: _jsxs(_components.code, {\n              className: \"language-properties\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token key attr-name\",\n                  children: \"spring.ai.mcp.client.stdio.servers-configuration\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token value attr-value\",\n                  children: \"file:PATH/TO/claude_desktop_config.json\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"When you start your client application, the auto-configuration will create, automatically MCP clients from the claude_desktop_config.json.\"\n        }), _jsxs(_components.p, {\n          children: [\"For more information, see the \", _jsx(_components.a, {\n            href: \"https://docs.spring.io/spring-ai/reference/api/mcp/mcp-server-boot-client-docs.html\",\n            children: \"MCP Client Boot Starters\"\n          }), \" reference documentation.\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"more-java-mcp-server-examples\",\n          isAtRootLevel: \"false\",\n          children: \"More Java MCP Server examples\"\n        }), _jsxs(_components.p, {\n          children: [\"The \", _jsx(_components.a, {\n            href: \"https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/weather/starter-webflux-server\",\n            children: \"starter-webflux-server\"\n          }), \" demonstrates how to create a MCP server using SSE transport.\\nIt showcases how to define and register MCP Tools, Resources, and Prompts, using the Spring Boot’s auto-configuration capabilities.\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"Kotlin\",\n        children: [_jsxs(_components.p, {\n          children: [\"Let’s get started with building our weather server! \", _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/kotlin-sdk/tree/main/samples/weather-stdio-server\",\n            children: \"You can find the complete code for what we’ll be building here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"prerequisite-knowledge-3\",\n          isAtRootLevel: \"false\",\n          children: \"Prerequisite knowledge\"\n        }), _jsx(_components.p, {\n          children: \"This quickstart assumes you have familiarity with:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Kotlin\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"LLMs like Claude\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"system-requirements-4\",\n          isAtRootLevel: \"false\",\n          children: \"System requirements\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Java 17 or higher installed.\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"set-up-your-environment-4\",\n          isAtRootLevel: \"false\",\n          children: \"Set up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s install \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" and \", _jsx(_components.code, {\n            children: \"gradle\"\n          }), \" if you haven’t already.\\nYou can download \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" from \", _jsx(_components.a, {\n            href: \"https://www.oracle.com/java/technologies/downloads/\",\n            children: \"official Oracle JDK website\"\n          }), \".\\nVerify your \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" installation:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--version\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Now, let’s create and set up your project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" weather\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" weather\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new kotlin project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"gradle init\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"md weather\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd weather\"\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new kotlin project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"gradle init\"\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"After running \", _jsx(_components.code, {\n            children: \"gradle init\"\n          }), \", you will be presented with options for creating your project.\\nSelect \", _jsx(_components.strong, {\n            children: \"Application\"\n          }), \" as the project type, \", _jsx(_components.strong, {\n            children: \"Kotlin\"\n          }), \" as the programming language, and \", _jsx(_components.strong, {\n            children: \"Java 17\"\n          }), \" as the Java version.\"]\n        }), _jsxs(_components.p, {\n          children: [\"Alternatively, you can create a Kotlin application using the \", _jsx(_components.a, {\n            href: \"https://kotlinlang.org/docs/jvm-get-started.html\",\n            children: \"IntelliJ IDEA project wizard\"\n          }), \".\"]\n        }), _jsx(_components.p, {\n          children: \"After creating the project, add the following dependencies:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"build.gradle.kts\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-kotlin\",\n              children: _jsxs(_components.code, {\n                className: \"language-kotlin\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" mcpVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"0.4.0\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" slf4jVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"2.0.9\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" ktorVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"3.1.1\\\"\"\n                    })\n                  })]\n                }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"dependencies \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.modelcontextprotocol:kotlin-sdk:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"mcpVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"org.slf4j:slf4j-nop:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"slf4jVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.ktor:ktor-client-content-negotiation:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"ktorVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.ktor:ktor-serialization-kotlinx-json:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"ktorVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"build.gradle\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-groovy\",\n              children: _jsxs(_components.code, {\n                className: \"language-groovy\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" mcpVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'0.3.0'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" slf4jVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'2.0.9'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" ktorVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'3.1.1'\"\n                  })]\n                }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"dependencies \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.modelcontextprotocol:kotlin-sdk:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"mcpVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"org.slf4j:slf4j-nop:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"slf4jVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.ktor:ktor-client-content-negotiation:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"ktorVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.ktor:ktor-serialization-kotlinx-json:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"ktorVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Also, add the following plugins to your build script:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"build.gradle.kts\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-kotlin\",\n              children: _jsxs(_components.code, {\n                className: \"language-kotlin\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"plugins \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"kotlin\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"plugin.serialization\\\"\"\n                    })\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"your_version_of_kotlin\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"id\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"com.github.johnrengelman.shadow\\\"\"\n                    })\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"8.1.1\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"build.gradle\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-groovy\",\n              children: _jsxs(_components.code, {\n                className: \"language-groovy\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"plugins \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    id \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'org.jetbrains.kotlin.plugin.serialization'\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'your_version_of_kotlin'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    id \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'com.github.johnrengelman.shadow'\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'8.1.1'\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Now let’s dive into building your server.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"building-your-server-4\",\n          isAtRootLevel: \"false\",\n          children: \"Building your server\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"setting-up-the-instance\",\n          isAtRootLevel: \"false\",\n          children: \"Setting up the instance\"\n        }), _jsx(_components.p, {\n          children: \"Add a server initialization function:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Main function to run the MCP server\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"`run mcp server`\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Create the MCP Server instance with a basic implementation\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" server \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Server\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Implementation\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"weather\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Tool name is \\\"weather\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            version \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"1.0.0\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Version of the implementation\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ServerOptions\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            capabilities \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ServerCapabilities\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" ServerCapabilities\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Tools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"listChanged \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Create a transport using standard IO for server communication\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" transport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"StdioServerTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        System\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"`\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \"`\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"asInput\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        System\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"out\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"asSink\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"buffered\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    runBlocking \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connect\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"transport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" done \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Job\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"onClose\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            done\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"complete\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        done\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"weather-api-helper-functions\",\n          isAtRootLevel: \"false\",\n          children: \"Weather API helper functions\"\n        }), _jsx(_components.p, {\n          children: \"Next, let’s add functions and data classes for querying and converting responses from the National Weather Service API:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Extension function to fetch forecast information for given latitude and longitude\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"suspend\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" HttpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getForecast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"latitude\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Double\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" longitude\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Double\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" List\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"String\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" points \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"/points/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"latitude\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \",\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"longitude\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"body\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Points\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" forecast \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"points\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"body\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Forecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"periods\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" period \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Temperature\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"temperature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"temperatureUnit\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Wind\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"windSpeed\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"windDirection\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Forecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"detailedForecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"trimIndent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Extension function to fetch weather alerts for a given state\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"suspend\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" HttpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getAlerts\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"state\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" List\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"String\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" alerts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"/alerts/active/area/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"state\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"body\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Alert\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" alerts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"features\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" feature \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Event\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"event\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Area\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"areaDesc\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Severity\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"severity\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Description\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"description\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Instruction\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"instruction\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"trimIndent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Points\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Properties\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Properties\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" forecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Forecast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Properties\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Properties\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" periods\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" List\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Period\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Period\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" number\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Int\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" startTime\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" endTime\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" isDaytime\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Boolean\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" temperature\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Int\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" temperatureUnit\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" temperatureTrend\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" probabilityOfPrecipitation\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" JsonObject\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" windSpeed\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" windDirection\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" shortForecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" detailedForecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Alert\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" features\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" List\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Feature\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Feature\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Properties\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Properties\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" event\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" areaDesc\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" severity\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" description\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" instruction\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"implementing-tool-execution-3\",\n          isAtRootLevel: \"false\",\n          children: \"Implementing tool execution\"\n        }), _jsx(_components.p, {\n          children: \"The tool execution handler is responsible for actually executing the logic of each tool. Let’s add it:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Create an HTTP client with a default request configuration and JSON content negotiation\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" httpClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" HttpClient \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    defaultRequest \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"url\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"https://api.weather.gov\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        headers \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"append\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Accept\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"application/geo+json\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"append\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"User-Agent\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"WeatherApiClient/1.0\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"contentType\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"ContentType\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Application\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Json\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Install content negotiation plugin for JSON serialization/deserialization\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"install\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"ContentNegotiation\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"json\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"Json \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" ignoreUnknownKeys \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Register a tool to fetch weather alerts by state\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"addTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"get_alerts\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        Get weather alerts \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" a US state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \" Input \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"is\"\n                }), \" Two\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), \"letter US state \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"code\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"g\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \" CA\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" NY\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"trimIndent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    inputSchema \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Input\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        properties \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" buildJsonObject \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"putJsonObject\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"state\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"put\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"type\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"string\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"put\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"description\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Two-letter US state code (e.g. CA, NY)\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        required \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"state\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" request \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" state \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"arguments\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"state\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"jsonPrimitive\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"state \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), _jsx(_components.span, {\n                  className: \"token label symbol\",\n                  children: \"@addTool\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CallToolResult\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"TextContent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"The 'state' parameter is required.\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" alerts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" httpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getAlerts\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CallToolResult\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" alerts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"TextContent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"it\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Register a tool to fetch weather forecast by latitude and longitude\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"addTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"get_forecast\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        Get weather forecast \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" a specific latitude\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"/\"\n                }), \"longitude\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"trimIndent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    inputSchema \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Input\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        properties \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" buildJsonObject \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"putJsonObject\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"latitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"put\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"type\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"number\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"putJsonObject\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"longitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"put\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"type\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"number\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        required \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"latitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"longitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" request \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" latitude \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"arguments\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"latitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"jsonPrimitive\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"doubleOrNull\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" longitude \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"arguments\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"longitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"jsonPrimitive\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"doubleOrNull\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"latitude \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"||\"\n                }), \" longitude \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), _jsx(_components.span, {\n                  className: \"token label symbol\",\n                  children: \"@addTool\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CallToolResult\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"TextContent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"The 'latitude' and 'longitude' parameters are required.\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" forecast \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" httpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getForecast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" longitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CallToolResult\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"TextContent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"it\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"running-the-server-4\",\n          isAtRootLevel: \"false\",\n          children: \"Running the server\"\n        }), _jsx(_components.p, {\n          children: \"Finally, implement the main function to run the server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"`run mcp server`\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Make sure to run \", _jsx(_components.code, {\n            children: \"./gradlew build\"\n          }), \" to build your server. This is a very important step in getting your server to connect.\"]\n        }), _jsx(_components.p, {\n          children: \"Let’s now test your server from an existing MCP host, Claude for Desktop.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-claude-for-desktop-4\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Claude for Desktop\"\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"Claude for Desktop is not yet available on Linux. Linux users can proceed to the \", _jsx(_components.a, {\n              href: \"/quickstart/client\",\n              children: \"Building a client\"\n            }), \" tutorial to build an MCP client that connects to the server we just built.\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"First, make sure you have Claude for Desktop installed. \", _jsx(_components.a, {\n            href: \"https://claude.ai/download\",\n            children: \"You can install the latest version\\nhere.\"\n          }), \" If you already have Claude for Desktop, \", _jsx(_components.strong, {\n            children: \"make sure it’s updated to the latest version.\"\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"We’ll need to configure Claude for Desktop for whichever MCP servers you want to use.\\nTo do this, open your Claude for Desktop App configuration at \", _jsx(_components.code, {\n            children: \"~/Library/Application Support/Claude/claude_desktop_config.json\"\n          }), \" in a text editor.\\nMake sure to create the file if it doesn’t exist.\"]\n        }), _jsxs(_components.p, {\n          children: [\"For example, if you have \", _jsx(_components.a, {\n            href: \"https://code.visualstudio.com/\",\n            children: \"VS Code\"\n          }), \" installed:\"]\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"code ~/Library/Application\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\\\\\"\n                  }), \" Support/Claude/claude_desktop_config.json\"]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"code \", _jsx(_components.span, {\n                    className: \"token variable\",\n                    children: \"$env\"\n                  }), \":AppData\\\\Claude\\\\claude_desktop_config\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"json\"]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"You’ll then add your servers in the \", _jsx(_components.code, {\n            children: \"mcpServers\"\n          }), \" key.\\nThe MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.\"]\n        }), _jsx(_components.p, {\n          children: \"In this case, we’ll add our single weather server like so:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-json\",\n              children: _jsxs(_components.code, {\n                className: \"language-json\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"mcpServers\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"        \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"weather\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"command\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"java\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"args\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"[\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"                \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"-jar\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"                \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/libs/weather-0.1.0-all.jar\\\"\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"]\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"        \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-json\",\n              children: _jsxs(_components.code, {\n                className: \"language-json\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"mcpServers\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"        \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"weather\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"command\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"java\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"args\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"[\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"                \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"-jar\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"                \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"C:\\\\\\\\PATH\\\\\\\\TO\\\\\\\\PARENT\\\\\\\\FOLDER\\\\\\\\weather\\\\\\\\build\\\\\\\\libs\\\\\\\\weather-0.1.0-all.jar\\\"\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"]\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"        \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"This tells Claude for Desktop:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"There’s an MCP server named “weather”\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Launch it by running \", _jsx(_components.code, {\n              children: \"java -jar /ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/libs/weather-0.1.0-all.jar\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"Save the file, and restart \", _jsx(_components.strong, {\n            children: \"Claude for Desktop\"\n          }), \".\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"C#\",\n        children: [_jsxs(_components.p, {\n          children: [\"Let’s get started with building our weather server! \", _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/csharp-sdk/tree/main/samples/QuickstartWeatherServer\",\n            children: \"You can find the complete code for what we’ll be building here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"prerequisite-knowledge-4\",\n          isAtRootLevel: \"false\",\n          children: \"Prerequisite knowledge\"\n        }), _jsx(_components.p, {\n          children: \"This quickstart assumes you have familiarity with:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"C#\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"LLMs like Claude\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \".NET 8 or higher\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"system-requirements-5\",\n          isAtRootLevel: \"false\",\n          children: \"System requirements\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"https://dotnet.microsoft.com/download/dotnet/8.0\",\n              children: \".NET 8 SDK\"\n            }), \" or higher installed.\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"set-up-your-environment-5\",\n          isAtRootLevel: \"false\",\n          children: \"Set up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s install \", _jsx(_components.code, {\n            children: \"dotnet\"\n          }), \" if you haven’t already. You can download \", _jsx(_components.code, {\n            children: \"dotnet\"\n          }), \" from \", _jsx(_components.a, {\n            href: \"https://dotnet.microsoft.com/download/\",\n            children: \"official Microsoft .NET website\"\n          }), \". Verify your \", _jsx(_components.code, {\n            children: \"dotnet\"\n          }), \" installation:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--version\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Now, let’s create and set up your project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" weather\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" weather\"]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new C# project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"dotnet new console\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"mkdir weather\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd weather\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new C# project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"dotnet new console\"\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"After running \", _jsx(_components.code, {\n            children: \"dotnet new console\"\n          }), \", you will be presented with a new C# project.\\nYou can open the project in your favorite IDE, such as \", _jsx(_components.a, {\n            href: \"https://visualstudio.microsoft.com/\",\n            children: \"Visual Studio\"\n          }), \" or \", _jsx(_components.a, {\n            href: \"https://www.jetbrains.com/rider/\",\n            children: \"Rider\"\n          }), \".\\nAlternatively, you can create a C# application using the \", _jsx(_components.a, {\n            href: \"https://learn.microsoft.com/en-us/visualstudio/get-started/csharp/tutorial-console?view=vs-2022\",\n            children: \"Visual Studio project wizard\"\n          }), \".\\nAfter creating the project, add NuGet package for the Model Context Protocol SDK and hosting:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Add the Model Context Protocol SDK NuGet package\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" package ModelContextProtocol \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--prerelease\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Add the .NET Hosting NuGet package\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" package Microsoft.Extensions.Hosting\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Now let’s dive into building your server.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"building-your-server-5\",\n          isAtRootLevel: \"false\",\n          children: \"Building your server\"\n        }), _jsxs(_components.p, {\n          children: [\"Open the \", _jsx(_components.code, {\n            children: \"Program.cs\"\n          }), \" file in your project and replace its contents with the following code:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Microsoft\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Extensions\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"DependencyInjection\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Microsoft\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Extensions\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Hosting\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"ModelContextProtocol\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"System\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Net\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Http\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Headers\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" builder \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" Host\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CreateEmptyApplicationBuilder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token named-parameter punctuation\",\n                  children: \"settings\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"builder\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Services\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"AddMcpServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WithStdioServerTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WithToolsFromAssembly\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"builder\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Services\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"AddSingleton\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"_ \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" client \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"HttpClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" BaseAddress \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"Uri\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"https://api.weather.gov\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"DefaultRequestHeaders\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"UserAgent\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"ProductInfoHeaderValue\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"weather-tool\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"1.0\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" app \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" builder\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" app\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"RunAsync\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"When creating the \", _jsx(_components.code, {\n              children: \"ApplicationHostBuilder\"\n            }), \", ensure you use \", _jsx(_components.code, {\n              children: \"CreateEmptyApplicationBuilder\"\n            }), \" instead of \", _jsx(_components.code, {\n              children: \"CreateDefaultBuilder\"\n            }), \". This ensures that the server does not write any additional messages to the console. This is only neccessary for servers using STDIO transport.\"]\n          })\n        }), _jsx(_components.p, {\n          children: \"This code sets up a basic console application that uses the Model Context Protocol SDK to create an MCP server with standard I/O transport.\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"weather-api-helper-functions-2\",\n          isAtRootLevel: \"false\",\n          children: \"Weather API helper functions\"\n        }), _jsx(_components.p, {\n          children: \"Next, define a class with the tool execution handlers for querying and converting responses from the National Weather Service API:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"ModelContextProtocol\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Server\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"System\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"ComponentModel\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"System\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Net\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Http\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Json\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"System\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Text\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Json\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"namespace\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"QuickstartWeatherServer\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Tools\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token attribute\",\n                  children: _jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"McpServerToolType\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"WeatherTools\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsxs(_components.span, {\n                  className: \"token attribute\",\n                  children: [_jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"McpServerTool\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"Description\"\n                  }), _jsxs(_components.span, {\n                    className: \"token attribute-arguments\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Get weather alerts for a US state.\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token return-type class-name\",\n                  children: [\"Task\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003c\"\n                  }), _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetAlerts\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"HttpClient\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsxs(_components.span, {\n                  className: \"token attribute\",\n                  children: [_jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"Description\"\n                  }), _jsxs(_components.span, {\n                    className: \"token attribute-arguments\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"The US state to get alerts for.\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  })\n                }), \" state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" jsonElement \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsxs(_components.span, {\n                  className: \"token generic-method\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"GetFromJsonAsync\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"JsonElement\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token interpolation-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"$\\\"/alerts/active/area/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression language-csharp\",\n                      children: \"state\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" alerts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" jsonElement\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"features\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"EnumerateArray\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"alerts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Any\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"No active alerts for this state.\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n--\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" alerts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Select\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"alert \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"JsonElement\"\n                }), \" properties \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" alert\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"properties\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token interpolation-string\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"$\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    Event\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"event\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    Area\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"areaDesc\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    Severity\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"severity\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    Description\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"description\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    Instruction\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"instruction\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsxs(_components.span, {\n                  className: \"token attribute\",\n                  children: [_jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"McpServerTool\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"Description\"\n                  }), _jsxs(_components.span, {\n                    className: \"token attribute-arguments\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Get weather forecast for a location.\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token return-type class-name\",\n                  children: [\"Task\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003c\"\n                  }), _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetForecast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"HttpClient\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsxs(_components.span, {\n                  className: \"token attribute\",\n                  children: [_jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"Description\"\n                  }), _jsxs(_components.span, {\n                    className: \"token attribute-arguments\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Latitude of the location.\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"double\"\n                  })\n                }), \" latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsxs(_components.span, {\n                  className: \"token attribute\",\n                  children: [_jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"Description\"\n                  }), _jsxs(_components.span, {\n                    className: \"token attribute-arguments\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Longitude of the location.\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"double\"\n                  })\n                }), \" longitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" jsonElement \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsxs(_components.span, {\n                  className: \"token generic-method\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"GetFromJsonAsync\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"JsonElement\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token interpolation-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"$\\\"/points/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression language-csharp\",\n                      children: \"latitude\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \",\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression language-csharp\",\n                      children: \"longitude\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" periods \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" jsonElement\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"properties\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"periods\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"EnumerateArray\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n---\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" periods\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Select\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"period \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token interpolation-string\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"$\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"name\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                Temperature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"temperature\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetInt32\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \"°F\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                Wind\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"windSpeed\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"windDirection\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                Forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"detailedForecast\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"running-the-server-5\",\n          isAtRootLevel: \"false\",\n          children: \"Running the server\"\n        }), _jsx(_components.p, {\n          children: \"Finally, run the server using the following command:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: \"dotnet run\"\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"This will start the server and listen for incoming requests on standard input/output.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-claude-for-desktop-5\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Claude for Desktop\"\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"Claude for Desktop is not yet available on Linux. Linux users can proceed to the \", _jsx(_components.a, {\n              href: \"/quickstart/client\",\n              children: \"Building a client\"\n            }), \" tutorial to build an MCP client that connects to the server we just built.\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"First, make sure you have Claude for Desktop installed. \", _jsx(_components.a, {\n            href: \"https://claude.ai/download\",\n            children: \"You can install the latest version\\nhere.\"\n          }), \" If you already have Claude for Desktop, \", _jsx(_components.strong, {\n            children: \"make sure it’s updated to the latest version.\"\n          }), \"\\nWe’ll need to configure Claude for Desktop for whichever MCP servers you want to use. To do this, open your Claude for Desktop App configuration at \", _jsx(_components.code, {\n            children: \"~/Library/Application Support/Claude/claude_desktop_config.json\"\n          }), \" in a text editor. Make sure to create the file if it doesn’t exist.\\nFor example, if you have \", _jsx(_components.a, {\n            href: \"https://code.visualstudio.com/\",\n            children: \"VS Code\"\n          }), \" installed:\"]\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code ~/Library/Application\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\\\\\"\n                    }), \" Support/Claude/claude_desktop_config.json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-powershell\",\n                children: _jsxs(_components.code, {\n                  className: \"language-powershell\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code \", _jsx(_components.span, {\n                      className: \"token variable\",\n                      children: \"$env\"\n                    }), \":AppData\\\\Claude\\\\claude_desktop_config\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"You’ll then add your servers in the \", _jsx(_components.code, {\n            children: \"mcpServers\"\n          }), \" key. The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.\\nIn this case, we’ll add our single weather server like so:\"]\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"dotnet\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"run\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--project\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"/ABSOLUTE/PATH/TO/PROJECT\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--no-build\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"dotnet\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"run\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--project\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"C:\\\\\\\\ABSOLUTE\\\\\\\\PATH\\\\\\\\TO\\\\\\\\PROJECT\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--no-build\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"This tells Claude for Desktop:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"There’s an MCP server named “weather”\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Launch it by running \", _jsx(_components.code, {\n              children: \"dotnet run /ABSOLUTE/PATH/TO/PROJECT\"\n            }), \"\\nSave the file, and restart \", _jsx(_components.strong, {\n              children: \"Claude for Desktop\"\n            }), \".\"]\n          }), \"\\n\"]\n        })]\n      })]\n    }), \"\\n\", _jsx(Heading, {\n      level: \"3\",\n      id: \"test-with-commands\",\n      isAtRootLevel: \"true\",\n      children: \"Test with commands\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let’s make sure Claude for Desktop is picking up the two tools we’ve exposed in our \", _jsx(_components.code, {\n        children: \"weather\"\n      }), \" server. You can do this by looking for the “Search and tools” \", _jsx(\"img\", {\n        src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/claude-desktop-mcp-slider.svg\",\n        style: {\n          display: 'inline',\n          margin: 0,\n          height: '1.3em'\n        }\n      }), \" icon:\"]\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/visual-indicator-mcp-tools.png\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"After clicking on the slider icon, you should see two tools listed:\"\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/available-mcp-tools.png\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If your server isn’t being picked up by Claude for Desktop, proceed to the \", _jsx(_components.a, {\n        href: \"#troubleshooting\",\n        children: \"Troubleshooting\"\n      }), \" section for debugging tips.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If the tool settings icon has shown up, you can now test your server by running the following commands in Claude for Desktop:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"What’s the weather in Sacramento?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"What are the active weather alerts in Texas?\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/current-weather.png\"\n        })\n      })\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/weather-alerts.png\"\n        })\n      })\n    }), \"\\n\", _jsx(Note, {\n      children: _jsx(_components.p, {\n        children: \"Since this is the US National Weather service, the queries will only work for US locations.\"\n      })\n    }), \"\\n\", _jsx(Heading, {\n      level: \"2\",\n      id: \"what%E2%80%99s-happening-under-the-hood\",\n      isAtRootLevel: \"true\",\n      children: \"What’s happening under the hood\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When you ask a question:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"The client sends your question to Claude\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Claude analyzes the available tools and decides which one(s) to use\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The client executes the chosen tool(s) through the MCP server\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The results are sent back to Claude\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Claude formulates a natural language response\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The response is displayed to you!\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Heading, {\n      level: \"2\",\n      id: \"troubleshooting\",\n      isAtRootLevel: \"true\",\n      children: \"Troubleshooting\"\n    }), \"\\n\", _jsxs(AccordionGroup, {\n      children: [_jsxs(Accordion, {\n        title: \"Claude for Desktop Integration Issues\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Getting logs from Claude for Desktop\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Claude.app logging related to MCP is written to log files in \", _jsx(_components.code, {\n            children: \"~/Library/Logs/Claude\"\n          }), \":\"]\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"mcp.log\"\n            }), \" will contain general logging about MCP connections and connection failures.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Files named \", _jsx(_components.code, {\n              children: \"mcp-server-SERVERNAME.log\"\n            }), \" will contain error (stderr) logging from the named server.\"]\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"You can run the following command to list recent logs and follow along with any new ones:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Check Claude's logs for errors\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"tail\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-n\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"20\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-f\"\n                }), \" ~/Library/Logs/Claude/mcp*.log\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Server not showing up in Claude\"\n          })\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"Check your \", _jsx(_components.code, {\n              children: \"claude_desktop_config.json\"\n            }), \" file syntax\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Make sure the path to your project is absolute and not relative\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Restart Claude for Desktop completely\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Tool calls failing silently\"\n          })\n        }), _jsx(_components.p, {\n          children: \"If Claude attempts to use the tools but they fail:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Check Claude’s logs for errors\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Verify your server builds and runs without errors\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Try restarting Claude for Desktop\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"None of this is working. What do I do?\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Please refer to our \", _jsx(_components.a, {\n            href: \"/docs/tools/debugging\",\n            children: \"debugging guide\"\n          }), \" for better debugging tools and more detailed guidance.\"]\n        })]\n      }), _jsxs(Accordion, {\n        title: \"Weather API Issues\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Error: Failed to retrieve grid point data\"\n          })\n        }), _jsx(_components.p, {\n          children: \"This usually means either:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The coordinates are outside the US\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The NWS API is having issues\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"You’re being rate limited\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Fix:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Verify you’re using US coordinates\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Add a small delay between requests\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Check the NWS API status page\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Error: No active alerts for [STATE]\"\n          })\n        }), _jsx(_components.p, {\n          children: \"This isn’t an error - it just means there are no current weather alerts for that state. Try a different state or check during severe weather.\"\n        })]\n      })]\n    }), \"\\n\", _jsx(Note, {\n      children: _jsxs(_components.p, {\n        children: [\"For more advanced troubleshooting, check out our guide on \", _jsx(_components.a, {\n          href: \"/docs/tools/debugging\",\n          children: \"Debugging MCP\"\n        })]\n      })\n    }), \"\\n\", _jsx(Heading, {\n      level: \"2\",\n      id: \"next-steps\",\n      isAtRootLevel: \"true\",\n      children: \"Next steps\"\n    }), \"\\n\", _jsxs(CardGroup, {\n      cols: 2,\n      children: [_jsx(Card, {\n        title: \"Building a client\",\n        icon: \"outlet\",\n        href: \"/quickstart/client\",\n        children: _jsx(_components.p, {\n          children: \"Learn how to build your own MCP client that can connect to your server\"\n        })\n      }), _jsx(Card, {\n        title: \"Example servers\",\n        icon: \"grid\",\n        href: \"/examples\",\n        children: _jsx(_components.p, {\n          children: \"Check out our gallery of official MCP servers and implementations\"\n        })\n      }), _jsx(Card, {\n        title: \"Debugging Guide\",\n        icon: \"bug\",\n        href: \"/docs/tools/debugging\",\n        children: _jsx(_components.p, {\n          children: \"Learn how to effectively debug MCP servers and integrations\"\n        })\n      }), _jsx(Card, {\n        title: \"Building MCP with LLMs\",\n        icon: \"comments\",\n        href: \"/tutorials/building-mcp-with-llms\",\n        children: _jsx(_components.p, {\n          children: \"Learn how to use LLMs like Claude to speed up your MCP development\"\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"config":{"theme":"willow","$schema":"https://mintlify.com/docs.json","name":"Model Context Protocol","colors":{"primary":"#09090b","light":"#FAFAFA","dark":"#09090b"},"logo":{"light":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg","dark":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg"},"favicon":"/favicon.svg","navbar":{"links":[],"primary":{"type":"button","label":"GitHub","href":"https://github.com/modelcontextprotocol"}},"navigation":{"global":{"anchors":[{"anchor":"Python SDK","icon":"python","href":"https://github.com/modelcontextprotocol/python-sdk"},{"anchor":"TypeScript SDK","icon":"square-js","href":"https://github.com/modelcontextprotocol/typescript-sdk"},{"anchor":"Java SDK","icon":"java","href":"https://github.com/modelcontextprotocol/java-sdk"},{"anchor":"Kotlin SDK","icon":"square-k","href":"https://github.com/modelcontextprotocol/kotlin-sdk"},{"anchor":"C# SDK","icon":"square-c","href":"https://github.com/modelcontextprotocol/csharp-sdk"},{"anchor":"Swift SDK","icon":"swift","href":"https://github.com/modelcontextprotocol/swift-sdk"}]},"tabs":[{"tab":"User Guide","groups":[{"group":"Get Started","pages":["introduction",{"group":"Quickstart","pages":["quickstart/server","quickstart/client","quickstart/user"]},"examples","clients","faqs"]},{"group":"Tutorials","pages":["tutorials/building-mcp-with-llms","docs/tools/debugging","docs/tools/inspector"]},{"group":"Concepts","pages":["docs/concepts/architecture","docs/concepts/resources","docs/concepts/prompts","docs/concepts/tools","docs/concepts/sampling","docs/concepts/roots","docs/concepts/transports"]},{"group":"Development","pages":["development/updates","development/roadmap","development/contributing"]}]},{"tab":"SDKs","icon":"book-open","groups":[{"group":"Java","pages":["sdk/java/mcp-overview","sdk/java/mcp-client","sdk/java/mcp-server"]}]},{"tab":"Specification","icon":"book","groups":[{"group":"2025-03-26 (Latest)","pages":["specification/2025-03-26/index","specification/2025-03-26/changelog","specification/2025-03-26/architecture/index",{"group":"Base Protocol","pages":["specification/2025-03-26/basic/index","specification/2025-03-26/basic/lifecycle","specification/2025-03-26/basic/transports","specification/2025-03-26/basic/authorization",{"group":"Utilities","pages":["specification/2025-03-26/basic/utilities/cancellation","specification/2025-03-26/basic/utilities/ping","specification/2025-03-26/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2025-03-26/client/roots","specification/2025-03-26/client/sampling"]},{"group":"Server Features","pages":["specification/2025-03-26/server/index","specification/2025-03-26/server/prompts","specification/2025-03-26/server/resources","specification/2025-03-26/server/tools",{"group":"Utilities","pages":["specification/2025-03-26/server/utilities/completion","specification/2025-03-26/server/utilities/logging","specification/2025-03-26/server/utilities/pagination"]}]}]},{"group":"2024-11-05","pages":["specification/2024-11-05/index","specification/2024-11-05/architecture/index",{"group":"Base Protocol","pages":["specification/2024-11-05/basic/index","specification/2024-11-05/basic/lifecycle","specification/2024-11-05/basic/messages","specification/2024-11-05/basic/transports",{"group":"Utilities","pages":["specification/2024-11-05/basic/utilities/cancellation","specification/2024-11-05/basic/utilities/ping","specification/2024-11-05/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2024-11-05/client/roots","specification/2024-11-05/client/sampling"]},{"group":"Server Features","pages":["specification/2024-11-05/server/index","specification/2024-11-05/server/prompts","specification/2024-11-05/server/resources","specification/2024-11-05/server/tools",{"group":"Utilities","pages":["specification/2024-11-05/server/utilities/completion","specification/2024-11-05/server/utilities/logging","specification/2024-11-05/server/utilities/pagination"]}]}]},{"group":"draft","pages":["specification/draft/index","specification/draft/changelog","specification/draft/architecture/index",{"group":"Base Protocol","pages":["specification/draft/basic/index","specification/draft/basic/lifecycle","specification/draft/basic/transports","specification/draft/basic/authorization","specification/draft/basic/security_best_practices",{"group":"Utilities","pages":["specification/draft/basic/utilities/cancellation","specification/draft/basic/utilities/ping","specification/draft/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/draft/client/roots","specification/draft/client/sampling"]},{"group":"Server Features","pages":["specification/draft/server/index","specification/draft/server/prompts","specification/draft/server/resources","specification/draft/server/tools",{"group":"Utilities","pages":["specification/draft/server/utilities/completion","specification/draft/server/utilities/logging","specification/draft/server/utilities/pagination"]}]}]},{"group":"Resources","pages":["specification/versioning","specification/contributing"]}]}]},"footer":{"socials":{"github":"https://github.com/modelcontextprotocol"}},"seo":{"metatags":{"og:image":"https://raw.githubusercontent.com/modelcontextprotocol/docs/2eb6171ddbfeefde349dc3b8d5e2b87414c26250/images/og-image.png"},"indexing":"navigable"},"redirects":[{"source":"/tutorials/building-a-client","destination":"/quickstart/client"},{"source":"/quickstart","destination":"/quickstart/server"},{"source":"/specification/latest","destination":"/specification/2025-03-26","permanent":false}],"contextual":{"options":["copy","view"]}},"pageMetadata":{"title":"For Server Developers","description":"Get started building your own server to use in Claude for Desktop and other clients.","href":"/quickstart/server"}}},"mdxExtracts":{"tableOfContents":[{"title":"What we’ll be building","slug":"what-we%E2%80%99ll-be-building","depth":3,"children":[]},{"title":"Core MCP Concepts","slug":"core-mcp-concepts","depth":3,"children":[]},{"title":"Test with commands","slug":"test-with-commands","depth":3,"children":[]},{"title":"What’s happening under the hood","slug":"what%E2%80%99s-happening-under-the-hood","depth":2,"children":[]},{"title":"Troubleshooting","slug":"troubleshooting","depth":2,"children":[]},{"title":"Next steps","slug":"next-steps","depth":2,"children":[]}],"codeExamples":{}},"description":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Get started building your own server to use in Claude for Desktop and other clients.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"pageData":{"navWithMetadata":[{"group":"Get Started","pages":[{"title":"Introduction","description":"Get started with the Model Context Protocol (MCP)","href":"/introduction"},{"group":"Quickstart","pages":[{"title":"For Server Developers","description":"Get started building your own server to use in Claude for Desktop and other clients.","href":"/quickstart/server"},{"title":"For Client Developers","description":"Get started building your own client that can integrate with all MCP servers.","href":"/quickstart/client"},{"title":"For Claude Desktop Users","description":"Get started using pre-built servers in Claude for Desktop.","href":"/quickstart/user"}]},{"title":"Example Servers","description":"A list of example servers and implementations","href":"/examples"},{"title":"Example Clients","description":"A list of applications that support MCP integrations","href":"/clients"}]},{"group":"Tutorials","pages":[{"title":"Building MCP with LLMs","description":"Speed up your MCP development using LLMs such as Claude!","href":"/tutorials/building-mcp-with-llms"},{"title":"Debugging","description":"A comprehensive guide to debugging Model Context Protocol (MCP) integrations","href":"/docs/tools/debugging"},{"title":"Inspector","description":"In-depth guide to using the MCP Inspector for testing and debugging Model Context Protocol servers","href":"/docs/tools/inspector"}]},{"group":"Concepts","pages":[{"title":"Core architecture","description":"Understand how MCP connects clients, servers, and LLMs","href":"/docs/concepts/architecture"},{"title":"Resources","description":"Expose data and content from your servers to LLMs","href":"/docs/concepts/resources"},{"title":"Prompts","description":"Create reusable prompt templates and workflows","href":"/docs/concepts/prompts"},{"title":"Tools","description":"Enable LLMs to perform actions through your server","href":"/docs/concepts/tools"},{"title":"Sampling","description":"Let your servers request completions from LLMs","href":"/docs/concepts/sampling"},{"title":"Roots","description":"Understanding roots in MCP","href":"/docs/concepts/roots"},{"title":"Transports","description":"Learn about MCP's communication mechanisms","href":"/docs/concepts/transports"}]},{"group":"Development","pages":[{"title":"What's New","description":"The latest updates and improvements to MCP","href":"/development/updates"},{"title":"Roadmap","description":"Our plans for evolving Model Context Protocol (H1 2025)","href":"/development/roadmap"},{"title":"Contributing","description":"How to participate in Model Context Protocol development","href":"/development/contributing"}]}],"docsNavWithMetadata":{"global":{"anchors":[{"anchor":"Python SDK","icon":"python","href":"https://github.com/modelcontextprotocol/python-sdk"},{"anchor":"TypeScript SDK","icon":"square-js","href":"https://github.com/modelcontextprotocol/typescript-sdk"},{"anchor":"Java SDK","icon":"java","href":"https://github.com/modelcontextprotocol/java-sdk"},{"anchor":"Kotlin SDK","icon":"square-k","href":"https://github.com/modelcontextprotocol/kotlin-sdk"},{"anchor":"C# SDK","icon":"square-c","href":"https://github.com/modelcontextprotocol/csharp-sdk"},{"anchor":"Swift SDK","icon":"swift","href":"https://github.com/modelcontextprotocol/swift-sdk"}]},"tabs":[{"tab":"User Guide","groups":[{"group":"Get Started","pages":[{"title":"Introduction","description":"Get started with the Model Context Protocol (MCP)","href":"/introduction"},{"group":"Quickstart","pages":[{"title":"For Server Developers","description":"Get started building your own server to use in Claude for Desktop and other clients.","href":"/quickstart/server"},{"title":"For Client Developers","description":"Get started building your own client that can integrate with all MCP servers.","href":"/quickstart/client"},{"title":"For Claude Desktop Users","description":"Get started using pre-built servers in Claude for Desktop.","href":"/quickstart/user"}]},{"title":"Example Servers","description":"A list of example servers and implementations","href":"/examples"},{"title":"Example Clients","description":"A list of applications that support MCP integrations","href":"/clients"},{"title":"FAQs","description":"Explaining MCP and why it matters in simple terms","href":"/faqs"}]},{"group":"Tutorials","pages":[{"title":"Building MCP with LLMs","description":"Speed up your MCP development using LLMs such as Claude!","href":"/tutorials/building-mcp-with-llms"},{"title":"Debugging","description":"A comprehensive guide to debugging Model Context Protocol (MCP) integrations","href":"/docs/tools/debugging"},{"title":"Inspector","description":"In-depth guide to using the MCP Inspector for testing and debugging Model Context Protocol servers","href":"/docs/tools/inspector"}]},{"group":"Concepts","pages":[{"title":"Core architecture","description":"Understand how MCP connects clients, servers, and LLMs","href":"/docs/concepts/architecture"},{"title":"Resources","description":"Expose data and content from your servers to LLMs","href":"/docs/concepts/resources"},{"title":"Prompts","description":"Create reusable prompt templates and workflows","href":"/docs/concepts/prompts"},{"title":"Tools","description":"Enable LLMs to perform actions through your server","href":"/docs/concepts/tools"},{"title":"Sampling","description":"Let your servers request completions from LLMs","href":"/docs/concepts/sampling"},{"title":"Roots","description":"Understanding roots in MCP","href":"/docs/concepts/roots"},{"title":"Transports","description":"Learn about MCP's communication mechanisms","href":"/docs/concepts/transports"}]},{"group":"Development","pages":[{"title":"What's New","description":"The latest updates and improvements to MCP","href":"/development/updates"},{"title":"Roadmap","description":"Our plans for evolving Model Context Protocol","href":"/development/roadmap"},{"title":"Contributing","description":"How to participate in Model Context Protocol development","href":"/development/contributing"}]}]},{"tab":"SDKs","icon":"book-open","groups":[{"group":"Java","pages":[{"title":"Overview","description":"Introduction to the Model Context Protocol (MCP) Java SDK","href":"/sdk/java/mcp-overview"},{"title":"MCP Client","description":"Learn how to use the Model Context Protocol (MCP) client to interact with MCP servers","href":"/sdk/java/mcp-client"},{"title":"MCP Server","description":"Learn how to implement and configure a Model Context Protocol (MCP) server","href":"/sdk/java/mcp-server"}]}]},{"tab":"Specification","icon":"book","groups":[{"group":"2025-03-26 (Latest)","pages":[{"title":"Specification","description":null,"href":"/specification/2025-03-26"},{"title":"Key Changes","description":null,"href":"/specification/2025-03-26/changelog"},{"title":"Architecture","description":null,"href":"/specification/2025-03-26/architecture/index"},{"group":"Base Protocol","pages":[{"title":"Overview","description":null,"href":"/specification/2025-03-26/basic/index"},{"title":"Lifecycle","description":null,"href":"/specification/2025-03-26/basic/lifecycle"},{"title":"Transports","description":null,"href":"/specification/2025-03-26/basic/transports"},{"title":"Authorization","description":null,"href":"/specification/2025-03-26/basic/authorization"},{"group":"Utilities","pages":[{"title":"Cancellation","description":null,"href":"/specification/2025-03-26/basic/utilities/cancellation"},{"title":"Ping","description":null,"href":"/specification/2025-03-26/basic/utilities/ping"},{"title":"Progress","description":null,"href":"/specification/2025-03-26/basic/utilities/progress"}]}]},{"group":"Client Features","pages":[{"title":"Roots","description":null,"href":"/specification/2025-03-26/client/roots"},{"title":"Sampling","description":null,"href":"/specification/2025-03-26/client/sampling"}]},{"group":"Server Features","pages":[{"title":"Overview","description":null,"href":"/specification/2025-03-26/server/index"},{"title":"Prompts","description":null,"href":"/specification/2025-03-26/server/prompts"},{"title":"Resources","description":null,"href":"/specification/2025-03-26/server/resources"},{"title":"Tools","description":null,"href":"/specification/2025-03-26/server/tools"},{"group":"Utilities","pages":[{"title":"Completion","description":null,"href":"/specification/2025-03-26/server/utilities/completion"},{"title":"Logging","description":null,"href":"/specification/2025-03-26/server/utilities/logging"},{"title":"Pagination","description":null,"href":"/specification/2025-03-26/server/utilities/pagination"}]}]}]},{"group":"2024-11-05","pages":[{"title":"Specification","description":null,"href":"/specification/2024-11-05/index"},{"title":"Architecture","description":null,"href":"/specification/2024-11-05/architecture/index"},{"group":"Base Protocol","pages":[{"title":"Overview","description":null,"href":"/specification/2024-11-05/basic/index"},{"title":"Lifecycle","type":"docs","weight":30,"description":null,"href":"/specification/2024-11-05/basic/lifecycle"},{"title":"Messages","type":"docs","weight":20,"description":null,"href":"/specification/2024-11-05/basic/messages"},{"title":"Transports","type":"docs","weight":40,"description":null,"href":"/specification/2024-11-05/basic/transports"},{"group":"Utilities","pages":[{"title":"Cancellation","weight":10,"description":null,"href":"/specification/2024-11-05/basic/utilities/cancellation"},{"title":"Ping","weight":5,"description":null,"href":"/specification/2024-11-05/basic/utilities/ping"},{"title":"Progress","weight":30,"description":null,"href":"/specification/2024-11-05/basic/utilities/progress"}]}]},{"group":"Client Features","pages":[{"title":"Roots","type":"docs","weight":40,"description":null,"href":"/specification/2024-11-05/client/roots"},{"title":"Sampling","type":"docs","weight":40,"description":null,"href":"/specification/2024-11-05/client/sampling"}]},{"group":"Server Features","pages":[{"title":"Overview","description":null,"href":"/specification/2024-11-05/server/index"},{"title":"Prompts","weight":10,"description":null,"href":"/specification/2024-11-05/server/prompts"},{"title":"Resources","type":"docs","weight":20,"description":null,"href":"/specification/2024-11-05/server/resources"},{"title":"Tools","type":"docs","weight":40,"description":null,"href":"/specification/2024-11-05/server/tools"},{"group":"Utilities","pages":[{"title":"Completion","description":null,"href":"/specification/2024-11-05/server/utilities/completion"},{"title":"Logging","description":null,"href":"/specification/2024-11-05/server/utilities/logging"},{"title":"Pagination","description":null,"href":"/specification/2024-11-05/server/utilities/pagination"}]}]}]},{"group":"draft","pages":[{"title":"Specification","description":null,"href":"/specification/draft/index"},{"title":"Key Changes","description":null,"href":"/specification/draft/changelog"},{"title":"Architecture","description":null,"href":"/specification/draft/architecture/index"},{"group":"Base Protocol","pages":[{"title":"Overview","description":null,"href":"/specification/draft/basic/index"},{"title":"Lifecycle","description":null,"href":"/specification/draft/basic/lifecycle"},{"title":"Transports","description":null,"href":"/specification/draft/basic/transports"},{"title":"Authorization","description":null,"href":"/specification/draft/basic/authorization"},{"title":"Security Best Practices","description":null,"href":"/specification/draft/basic/security_best_practices"},{"group":"Utilities","pages":[{"title":"Cancellation","description":null,"href":"/specification/draft/basic/utilities/cancellation"},{"title":"Ping","description":null,"href":"/specification/draft/basic/utilities/ping"},{"title":"Progress","description":null,"href":"/specification/draft/basic/utilities/progress"}]}]},{"group":"Client Features","pages":[{"title":"Roots","description":null,"href":"/specification/draft/client/roots"},{"title":"Sampling","description":null,"href":"/specification/draft/client/sampling"}]},{"group":"Server Features","pages":[{"title":"Overview","description":null,"href":"/specification/draft/server/index"},{"title":"Prompts","description":null,"href":"/specification/draft/server/prompts"},{"title":"Resources","description":null,"href":"/specification/draft/server/resources"},{"title":"Tools","description":null,"href":"/specification/draft/server/tools"},{"group":"Utilities","pages":[{"title":"Completion","description":null,"href":"/specification/draft/server/utilities/completion"},{"title":"Logging","description":null,"href":"/specification/draft/server/utilities/logging"},{"title":"Pagination","description":null,"href":"/specification/draft/server/utilities/pagination"}]}]}]},{"group":"Resources","pages":[{"title":"Versioning","type":"docs","weight":10,"description":null,"href":"/specification/versioning"},{"title":"Contributions","weight":20,"cascade":{"type":"docs"},"breadcrumbs":false,"description":null,"href":"/specification/contributing"}]}]}]},"pageMetadata":{"title":"For Server Developers","description":"Get started building your own server to use in Claude for Desktop and other clients.","href":"/quickstart/server"},"docsConfig":{"theme":"willow","$schema":"https://mintlify.com/docs.json","name":"Model Context Protocol","colors":{"primary":"#09090b","light":"#FAFAFA","dark":"#09090b"},"logo":{"light":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg","dark":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg"},"favicon":"/favicon.svg","navbar":{"links":[],"primary":{"type":"button","label":"GitHub","href":"https://github.com/modelcontextprotocol"}},"navigation":{"global":{"anchors":[{"anchor":"Python SDK","icon":"python","href":"https://github.com/modelcontextprotocol/python-sdk"},{"anchor":"TypeScript SDK","icon":"square-js","href":"https://github.com/modelcontextprotocol/typescript-sdk"},{"anchor":"Java SDK","icon":"java","href":"https://github.com/modelcontextprotocol/java-sdk"},{"anchor":"Kotlin SDK","icon":"square-k","href":"https://github.com/modelcontextprotocol/kotlin-sdk"},{"anchor":"C# SDK","icon":"square-c","href":"https://github.com/modelcontextprotocol/csharp-sdk"},{"anchor":"Swift SDK","icon":"swift","href":"https://github.com/modelcontextprotocol/swift-sdk"}]},"tabs":[{"tab":"User Guide","groups":[{"group":"Get Started","pages":["introduction",{"group":"Quickstart","pages":["quickstart/server","quickstart/client","quickstart/user"]},"examples","clients","faqs"]},{"group":"Tutorials","pages":["tutorials/building-mcp-with-llms","docs/tools/debugging","docs/tools/inspector"]},{"group":"Concepts","pages":["docs/concepts/architecture","docs/concepts/resources","docs/concepts/prompts","docs/concepts/tools","docs/concepts/sampling","docs/concepts/roots","docs/concepts/transports"]},{"group":"Development","pages":["development/updates","development/roadmap","development/contributing"]}]},{"tab":"SDKs","icon":"book-open","groups":[{"group":"Java","pages":["sdk/java/mcp-overview","sdk/java/mcp-client","sdk/java/mcp-server"]}]},{"tab":"Specification","icon":"book","groups":[{"group":"2025-03-26 (Latest)","pages":["specification/2025-03-26/index","specification/2025-03-26/changelog","specification/2025-03-26/architecture/index",{"group":"Base Protocol","pages":["specification/2025-03-26/basic/index","specification/2025-03-26/basic/lifecycle","specification/2025-03-26/basic/transports","specification/2025-03-26/basic/authorization",{"group":"Utilities","pages":["specification/2025-03-26/basic/utilities/cancellation","specification/2025-03-26/basic/utilities/ping","specification/2025-03-26/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2025-03-26/client/roots","specification/2025-03-26/client/sampling"]},{"group":"Server Features","pages":["specification/2025-03-26/server/index","specification/2025-03-26/server/prompts","specification/2025-03-26/server/resources","specification/2025-03-26/server/tools",{"group":"Utilities","pages":["specification/2025-03-26/server/utilities/completion","specification/2025-03-26/server/utilities/logging","specification/2025-03-26/server/utilities/pagination"]}]}]},{"group":"2024-11-05","pages":["specification/2024-11-05/index","specification/2024-11-05/architecture/index",{"group":"Base Protocol","pages":["specification/2024-11-05/basic/index","specification/2024-11-05/basic/lifecycle","specification/2024-11-05/basic/messages","specification/2024-11-05/basic/transports",{"group":"Utilities","pages":["specification/2024-11-05/basic/utilities/cancellation","specification/2024-11-05/basic/utilities/ping","specification/2024-11-05/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2024-11-05/client/roots","specification/2024-11-05/client/sampling"]},{"group":"Server Features","pages":["specification/2024-11-05/server/index","specification/2024-11-05/server/prompts","specification/2024-11-05/server/resources","specification/2024-11-05/server/tools",{"group":"Utilities","pages":["specification/2024-11-05/server/utilities/completion","specification/2024-11-05/server/utilities/logging","specification/2024-11-05/server/utilities/pagination"]}]}]},{"group":"draft","pages":["specification/draft/index","specification/draft/changelog","specification/draft/architecture/index",{"group":"Base Protocol","pages":["specification/draft/basic/index","specification/draft/basic/lifecycle","specification/draft/basic/transports","specification/draft/basic/authorization","specification/draft/basic/security_best_practices",{"group":"Utilities","pages":["specification/draft/basic/utilities/cancellation","specification/draft/basic/utilities/ping","specification/draft/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/draft/client/roots","specification/draft/client/sampling"]},{"group":"Server Features","pages":["specification/draft/server/index","specification/draft/server/prompts","specification/draft/server/resources","specification/draft/server/tools",{"group":"Utilities","pages":["specification/draft/server/utilities/completion","specification/draft/server/utilities/logging","specification/draft/server/utilities/pagination"]}]}]},{"group":"Resources","pages":["specification/versioning","specification/contributing"]}]}]},"footer":{"socials":{"github":"https://github.com/modelcontextprotocol"}},"seo":{"metatags":{"og:image":"https://raw.githubusercontent.com/modelcontextprotocol/docs/2eb6171ddbfeefde349dc3b8d5e2b87414c26250/images/og-image.png"},"indexing":"navigable"},"redirects":[{"source":"/tutorials/building-a-client","destination":"/quickstart/client"},{"source":"/quickstart","destination":"/quickstart/server"},{"source":"/specification/latest","destination":"/specification/2025-03-26","permanent":false}],"contextual":{"options":["copy","view"]}},"apiReferenceData":{}},"feedback":{"thumbs":true},"favicons":{"icons":[{"rel":"apple-touch-icon","sizes":"180x180","href":"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/apple-touch-icon.png?v=3","type":"image/png"},{"rel":"icon","sizes":"32x32","href":"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon-32x32.png?v=3","type":"image/png"},{"rel":"icon","sizes":"16x16","href":"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon-16x16.png?v=3","type":"image/png"},{"rel":"shortcut icon","href":"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon.ico?v=3","type":"image/x-icon"}],"browserconfig":"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/browserconfig.xml?v=3"},"subdomain":"modelcontextprotocol.io","actualSubdomain":"mcp","internalAnalyticsWriteKey":"phc_TXdpocbGVeZVm5VJmAsHTMrCofBQu3e0kN8HGMNGTVW","trieve":{"datasetId":"c3022217-7d56-4a27-b404-9c5678730db6","chatEnabled":true},"shouldIndex":true,"org":{"plan":"enterprise","createdAt":"2023-12-21T01:33:54.763Z"},"cssFiles":[{"_id":"68221a4c777ecd398774eef7","filePath":"style.css","subdomain":"mcp","__v":0,"content":"\n#feature-support-matrix-wrapper {\n    overflow-x: auto;\n}\n\n#feature-support-matrix-wrapper table {\n    min-width: 800px;\n}\n"}],"jsFiles":[],"mdxSourceWithNoJs":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Accordion, AccordionGroup, Card, CardGroup, CodeBlock, CodeGroup, Frame, Heading, Note, Tab, Tabs, Warning, ZoomImage} = _components;\n  if (!Accordion) _missingMdxReference(\"Accordion\", true);\n  if (!AccordionGroup) _missingMdxReference(\"AccordionGroup\", true);\n  if (!Card) _missingMdxReference(\"Card\", true);\n  if (!CardGroup) _missingMdxReference(\"CardGroup\", true);\n  if (!CodeBlock) _missingMdxReference(\"CodeBlock\", true);\n  if (!CodeGroup) _missingMdxReference(\"CodeGroup\", true);\n  if (!Frame) _missingMdxReference(\"Frame\", true);\n  if (!Heading) _missingMdxReference(\"Heading\", true);\n  if (!Note) _missingMdxReference(\"Note\", true);\n  if (!Tab) _missingMdxReference(\"Tab\", true);\n  if (!Tabs) _missingMdxReference(\"Tabs\", true);\n  if (!Warning) _missingMdxReference(\"Warning\", true);\n  if (!ZoomImage) _missingMdxReference(\"ZoomImage\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"In this tutorial, we’ll build a simple MCP weather server and connect it to a host, Claude for Desktop. We’ll start with a basic setup, and then progress to more complex use cases.\"\n    }), \"\\n\", _jsx(Heading, {\n      level: \"3\",\n      id: \"what-we%E2%80%99ll-be-building\",\n      isAtRootLevel: \"true\",\n      children: \"What we’ll be building\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Many LLMs do not currently have the ability to fetch the forecast and severe weather alerts. Let’s use MCP to solve that!\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We’ll build a server that exposes two tools: \", _jsx(_components.code, {\n        children: \"get-alerts\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"get-forecast\"\n      }), \". Then we’ll connect the server to an MCP host (in this case, Claude for Desktop):\"]\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/weather-alerts.png\"\n        })\n      })\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/current-weather.png\"\n        })\n      })\n    }), \"\\n\", _jsx(Note, {\n      children: _jsxs(_components.p, {\n        children: [\"Servers can connect to any client. We’ve chosen Claude for Desktop here for simplicity, but we also have guides on \", _jsx(_components.a, {\n          href: \"/quickstart/client\",\n          children: \"building your own client\"\n        }), \" as well as a \", _jsx(_components.a, {\n          href: \"/clients\",\n          children: \"list of other clients here\"\n        }), \".\"]\n      })\n    }), \"\\n\", _jsx(Accordion, {\n      title: \"Why Claude for Desktop and not Claude.ai?\",\n      children: _jsx(_components.p, {\n        children: \"Because servers are locally run, MCP currently only supports desktop hosts. Remote hosts are in active development.\"\n      })\n    }), \"\\n\", _jsx(Heading, {\n      level: \"3\",\n      id: \"core-mcp-concepts\",\n      isAtRootLevel: \"true\",\n      children: \"Core MCP Concepts\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"MCP servers can provide three main types of capabilities:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Resources\"\n        }), \": File-like data that can be read by clients (like API responses or file contents)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Tools\"\n        }), \": Functions that can be called by the LLM (with user approval)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Prompts\"\n        }), \": Pre-written templates that help users accomplish specific tasks\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This tutorial will primarily focus on tools.\"\n    }), \"\\n\", _jsxs(Tabs, {\n      children: [_jsxs(Tab, {\n        title: \"Python\",\n        children: [_jsxs(_components.p, {\n          children: [\"Let’s get started with building our weather server! \", _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/quickstart-resources/tree/main/weather-server-python\",\n            children: \"You can find the complete code for what we’ll be building here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"prerequisite-knowledge\",\n          isAtRootLevel: \"false\",\n          children: \"Prerequisite knowledge\"\n        }), _jsx(_components.p, {\n          children: \"This quickstart assumes you have familiarity with:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Python\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"LLMs like Claude\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"system-requirements\",\n          isAtRootLevel: \"false\",\n          children: \"System requirements\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Python 3.10 or higher installed.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"You must use the Python MCP SDK 1.2.0 or higher.\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"set-up-your-environment\",\n          isAtRootLevel: \"false\",\n          children: \"Set up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s install \", _jsx(_components.code, {\n            children: \"uv\"\n          }), \" and set up our Python project and environment:\"]\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"curl\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token parameter variable\",\n                    children: \"-LsSf\"\n                  }), \" https://astral.sh/uv/install.sh \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"|\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"sh\"\n                  })]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"powershell \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"ExecutionPolicy ByPass \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"c \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"irm https://astral.sh/uv/install.ps1 | iex\\\"\"\n                  })]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"Make sure to restart your terminal afterwards to ensure that the \", _jsx(_components.code, {\n            children: \"uv\"\n          }), \" command gets picked up.\"]\n        }), _jsx(_components.p, {\n          children: \"Now, let’s create and set up our project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"uv init weather\"\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" weather\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create virtual environment and activate it\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"uv venv\"\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"source\"\n                  }), \" .venv/bin/activate\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"uv \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"add\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"mcp[cli]\\\"\"\n                  }), \" httpx\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create our server file\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"touch\"\n                  }), \" weather.py\"]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"uv init weather\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd weather\"\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create virtual environment and activate it\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"uv venv\"\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"venv\\\\Scripts\\\\activate\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"uv add mcp\", _jsx(_components.span, {\n                    className: \"token namespace\",\n                    children: \"[cli]\"\n                  }), \" httpx\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create our server file\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"new-item\"\n                  }), \" weather\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"py\"]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Now let’s dive into building your server.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"building-your-server\",\n          isAtRootLevel: \"false\",\n          children: \"Building your server\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"importing-packages-and-setting-up-the-instance\",\n          isAtRootLevel: \"false\",\n          children: \"Importing packages and setting up the instance\"\n        }), _jsxs(_components.p, {\n          children: [\"Add these to the top of your \", _jsx(_components.code, {\n            children: \"weather.py\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" typing \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" Any\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" httpx\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"fastmcp \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" FastMCP\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Initialize FastMCP server\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"mcp \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" FastMCP\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"weather\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Constants\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"NWS_API_BASE \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"https://api.weather.gov\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"USER_AGENT \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"weather-app/1.0\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"The FastMCP class uses Python type hints and docstrings to automatically generate tool definitions, making it easy to create and maintain MCP tools.\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"helper-functions\",\n          isAtRootLevel: \"false\",\n          children: \"Helper functions\"\n        }), _jsx(_components.p, {\n          children: \"Next, let’s add our helper functions for querying and formatting the data from the National Weather Service API:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"make_nws_request\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"dict\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" Any\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"|\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"None\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token triple-quoted-string string\",\n                  children: \"\\\"\\\"\\\"Make a request to the NWS API with proper error handling.\\\"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    headers \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"User-Agent\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" USER_AGENT\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Accept\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"application/geo+json\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"with\"\n                }), \" httpx\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"AsyncClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" headers\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"headers\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" timeout\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"30.0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"raise_for_status\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"json\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"except\"\n                }), \" Exception\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"None\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"format_alert\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"dict\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token triple-quoted-string string\",\n                  children: \"\\\"\\\"\\\"Format an alert feature into a readable string.\\\"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    props \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"properties\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Event\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"props\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'event'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'Unknown'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Area\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"props\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'areaDesc'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'Unknown'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Severity\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"props\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'severity'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'Unknown'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Description\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"props\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'description'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'No description available'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Instructions\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"props\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"get\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'instruction'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'No specific instructions provided'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"implementing-tool-execution\",\n          isAtRootLevel: \"false\",\n          children: \"Implementing tool execution\"\n        }), _jsx(_components.p, {\n          children: \"The tool execution handler is responsible for actually executing the logic of each tool. Let’s add it:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsxs(_components.span, {\n                  className: \"token decorator annotation punctuation\",\n                  children: [\"@mcp\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"tool\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get_alerts\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"Get weather alerts \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" a US state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" Two\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), \"letter US state code \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"g\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \" CA\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" NY\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    url \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"NWS_API_BASE\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"/alerts/active/area/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"state\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    data \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" make_nws_request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" data \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"or\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"features\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Unable to fetch alerts or no alerts found.\\\"\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"features\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"No active alerts for this state.\\\"\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    alerts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"format_alert\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" feature \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"features\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n---\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"join\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"alerts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsxs(_components.span, {\n                  className: \"token decorator annotation punctuation\",\n                  children: [\"@mcp\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"tool\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get_forecast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"float\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" longitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"float\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"Get weather forecast \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" a location\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" Latitude of the location\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        longitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" Longitude of the location\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# First get the forecast grid endpoint\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    points_url \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"NWS_API_BASE\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"/points/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"latitude\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \",\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"longitude\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    points_data \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" make_nws_request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"points_url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" points_data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Unable to fetch forecast data for this location.\\\"\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Get the forecast URL from the points response\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    forecast_url \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" points_data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"properties\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"forecast\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    forecast_data \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" make_nws_request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"forecast_url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" forecast_data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Unable to fetch detailed forecast.\\\"\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Format the periods into a readable forecast\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    periods \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" forecast_data\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"properties\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"periods\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    forecasts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" period \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" periods\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"5\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \"  \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Only show next 5 periods\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        forecast \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'name'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Temperature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'temperature'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \"°\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'temperatureUnit'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Wind\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'windSpeed'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'windDirection'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'detailedForecast'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        forecasts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n---\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"join\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"forecasts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"running-the-server\",\n          isAtRootLevel: \"false\",\n          children: \"Running the server\"\n        }), _jsx(_components.p, {\n          children: \"Finally, let’s initialize and run the server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" __name__ \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"__main__\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Initialize and run the server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"run\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"transport\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'stdio'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Your server is complete! Run \", _jsx(_components.code, {\n            children: \"uv run weather.py\"\n          }), \" to confirm that everything’s working.\"]\n        }), _jsx(_components.p, {\n          children: \"Let’s now test your server from an existing MCP host, Claude for Desktop.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-claude-for-desktop\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Claude for Desktop\"\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"Claude for Desktop is not yet available on Linux. Linux users can proceed to the \", _jsx(_components.a, {\n              href: \"/quickstart/client\",\n              children: \"Building a client\"\n            }), \" tutorial to build an MCP client that connects to the server we just built.\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"First, make sure you have Claude for Desktop installed. \", _jsx(_components.a, {\n            href: \"https://claude.ai/download\",\n            children: \"You can install the latest version\\nhere.\"\n          }), \" If you already have Claude for Desktop, \", _jsx(_components.strong, {\n            children: \"make sure it’s updated to the latest version.\"\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"We’ll need to configure Claude for Desktop for whichever MCP servers you want to use. To do this, open your Claude for Desktop App configuration at \", _jsx(_components.code, {\n            children: \"~/Library/Application Support/Claude/claude_desktop_config.json\"\n          }), \" in a text editor. Make sure to create the file if it doesn’t exist.\"]\n        }), _jsxs(_components.p, {\n          children: [\"For example, if you have \", _jsx(_components.a, {\n            href: \"https://code.visualstudio.com/\",\n            children: \"VS Code\"\n          }), \" installed:\"]\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code ~/Library/Application\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\\\\\"\n                    }), \" Support/Claude/claude_desktop_config.json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-powershell\",\n                children: _jsxs(_components.code, {\n                  className: \"language-powershell\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code \", _jsx(_components.span, {\n                      className: \"token variable\",\n                      children: \"$env\"\n                    }), \":AppData\\\\Claude\\\\claude_desktop_config\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"You’ll then add your servers in the \", _jsx(_components.code, {\n            children: \"mcpServers\"\n          }), \" key. The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.\"]\n        }), _jsx(_components.p, {\n          children: \"In this case, we’ll add our single weather server like so:\"\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"Python\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"uv\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--directory\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"run\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"weather.py\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"Python\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"uv\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--directory\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"C:\\\\\\\\ABSOLUTE\\\\\\\\PATH\\\\\\\\TO\\\\\\\\PARENT\\\\\\\\FOLDER\\\\\\\\weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"run\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"weather.py\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"You may need to put the full path to the \", _jsx(_components.code, {\n              children: \"uv\"\n            }), \" executable in the \", _jsx(_components.code, {\n              children: \"command\"\n            }), \" field. You can get this by running \", _jsx(_components.code, {\n              children: \"which uv\"\n            }), \" on MacOS/Linux or \", _jsx(_components.code, {\n              children: \"where uv\"\n            }), \" on Windows.\"]\n          })\n        }), _jsx(Note, {\n          children: _jsx(_components.p, {\n            children: \"Make sure you pass in the absolute path to your server.\"\n          })\n        }), _jsx(_components.p, {\n          children: \"This tells Claude for Desktop:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"There’s an MCP server named “weather”\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"To launch it by running \", _jsx(_components.code, {\n              children: \"uv --directory /ABSOLUTE/PATH/TO/PARENT/FOLDER/weather run weather.py\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"Save the file, and restart \", _jsx(_components.strong, {\n            children: \"Claude for Desktop\"\n          }), \".\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"Node\",\n        children: [_jsxs(_components.p, {\n          children: [\"Let’s get started with building our weather server! \", _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/quickstart-resources/tree/main/weather-server-typescript\",\n            children: \"You can find the complete code for what we’ll be building here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"prerequisite-knowledge-2\",\n          isAtRootLevel: \"false\",\n          children: \"Prerequisite knowledge\"\n        }), _jsx(_components.p, {\n          children: \"This quickstart assumes you have familiarity with:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"TypeScript\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"LLMs like Claude\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"system-requirements-2\",\n          isAtRootLevel: \"false\",\n          children: \"System requirements\"\n        }), _jsx(_components.p, {\n          children: \"For TypeScript, make sure you have the latest version of Node installed.\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"set-up-your-environment-2\",\n          isAtRootLevel: \"false\",\n          children: \"Set up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s install Node.js and npm if you haven’t already. You can download them from \", _jsx(_components.a, {\n            href: \"https://nodejs.org/\",\n            children: \"nodejs.org\"\n          }), \".\\nVerify your Node.js installation:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--version\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"npm\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--version\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"For this tutorial, you’ll need Node.js version 16 or higher.\"\n        }), _jsx(_components.p, {\n          children: \"Now, let’s create and set up our project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" weather\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" weather\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new npm project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" init \", _jsx(_components.span, {\n                    className: \"token parameter variable\",\n                    children: \"-y\"\n                  })]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"install\"\n                  }), \" @modelcontextprotocol/sdk zod\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"install\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token parameter variable\",\n                    children: \"-D\"\n                  }), \" @types/node typescript\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create our files\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" src\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"touch\"\n                  }), \" src/index.ts\"]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"md weather\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd weather\"\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new npm project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"npm init \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"y\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"npm install @modelcontextprotocol/sdk zod\"\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"npm install \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"D @types/node typescript\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create our files\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"md src\"\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"new-item\"\n                  }), \" src\\\\index\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"ts\"]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Update your package.json to add type: “module” and a build script:\"\n        }), _jsx(CodeBlock, {\n          filename: \"package.json\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-json\",\n            children: _jsxs(_components.code, {\n              className: \"language-json\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"type\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"module\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"bin\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"weather\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"./build/index.js\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"scripts\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"build\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"tsc \u0026\u0026 chmod 755 build/index.js\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"files\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"build\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Create a \", _jsx(_components.code, {\n            children: \"tsconfig.json\"\n          }), \" in the root of your project:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"tsconfig.json\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-json\",\n            children: _jsxs(_components.code, {\n              className: \"language-json\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"compilerOptions\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"target\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ES2022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"module\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Node16\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"moduleResolution\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Node16\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"outDir\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"./build\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"rootDir\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"./src\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"strict\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"esModuleInterop\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"skipLibCheck\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"forceConsistentCasingInFileNames\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"include\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"src/**/*\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"exclude\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"node_modules\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Now let’s dive into building your server.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"building-your-server-2\",\n          isAtRootLevel: \"false\",\n          children: \"Building your server\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"importing-packages-and-setting-up-the-instance-2\",\n          isAtRootLevel: \"false\",\n          children: \"Importing packages and setting up the instance\"\n        }), _jsxs(_components.p, {\n          children: [\"Add these to the top of your \", _jsx(_components.code, {\n            children: \"src/index.ts\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" McpServer \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@modelcontextprotocol/sdk/server/mcp.js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" StdioServerTransport \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@modelcontextprotocol/sdk/server/stdio.js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" z \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"zod\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"NWS_API_BASE\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"https://api.weather.gov\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"USER_AGENT\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"weather-app/1.0\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Create server instance\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" server \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"McpServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"weather\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  version\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"1.0.0\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  capabilities\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    resources\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"helper-functions-2\",\n          isAtRootLevel: \"false\",\n          children: \"Helper functions\"\n        }), _jsx(_components.p, {\n          children: \"Next, let’s add our helper functions for querying and formatting the data from the National Weather Service API:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Helper function for making NWS API requests\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"function\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token generic-function\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"makeNWSRequest\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003c\"\n                    }), _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"T\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"Promise\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"T\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"|\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" headers \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string-property property\",\n                  children: \"\\\"User-Agent\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"USER_AGENT\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Accept\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"application/geo+json\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"fetch\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"url\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" headers \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"ok\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"HTTP error! status: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"response\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"status\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"json\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"T\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"catch\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"error\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Error making NWS request:\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" error\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"interface\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"AlertFeature\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    event\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    areaDesc\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    severity\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    status\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    headline\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Format alert data\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"function\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"formatAlert\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" AlertFeature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" props \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Event: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"props\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"event \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Area: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"props\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"areaDesc \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Severity: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"props\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"severity \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Status: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"props\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"status \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Headline: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"props\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"headline \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"No headline\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"---\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"interface\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"ForecastPeriod\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  temperature\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"number\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  temperatureUnit\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  windSpeed\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  windDirection\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  shortForecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"interface\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"AlertsResponse\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  features\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" AlertFeature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"interface\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"PointsResponse\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    forecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"interface\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"ForecastResponse\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    periods\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" ForecastPeriod\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"implementing-tool-execution-2\",\n          isAtRootLevel: \"false\",\n          children: \"Implementing tool execution\"\n        }), _jsx(_components.p, {\n          children: \"The tool execution handler is responsible for actually executing the logic of each tool. Let’s add it:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Register weather tools\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"tool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"get-alerts\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Get weather alerts for a state\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    state\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" z\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"length\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"2\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"describe\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Two-letter state code (e.g. CA, NY)\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" state \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" stateCode \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toUpperCase\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" alertsUrl \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"NWS_API_BASE\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"/alerts?area=\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"stateCode\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" alertsData \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token generic-function\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"makeNWSRequest\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003c\"\n                    }), \"AlertsResponse\", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"alertsUrl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"alertsData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Failed to retrieve alerts data\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" features \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" alertsData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"features \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"||\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"features\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"length \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"No active alerts for \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"stateCode\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" formattedAlerts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" features\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"formatAlert\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" alertsText \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Active alerts for \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"stateCode\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \":\\\\n\\\\n\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"formattedAlerts\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"join\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\\\\n\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" alertsText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"tool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"get-forecast\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Get weather forecast for a location\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    latitude\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" z\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"number\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"min\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"90\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"max\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"90\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"describe\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Latitude of the location\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    longitude\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" z\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"number\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"min\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"180\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"max\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"180\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"describe\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Longitude of the location\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" longitude \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Get grid point data\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" pointsUrl \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"NWS_API_BASE\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"/points/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"latitude\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"toFixed\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token number\",\n                      children: \"4\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \",\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"longitude\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"toFixed\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token number\",\n                      children: \"4\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" pointsData \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token generic-function\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"makeNWSRequest\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003c\"\n                    }), \"PointsResponse\", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"pointsUrl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"pointsData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Failed to retrieve grid point data for coordinates: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"latitude\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \", \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"longitude\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \". This location may not be supported by the NWS API (only US locations are supported).\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" forecastUrl \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" pointsData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?.\"\n                }), \"forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"forecastUrl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Failed to get forecast URL from grid point data\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Get forecast data\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" forecastData \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token generic-function\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"makeNWSRequest\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003c\"\n                    }), \"ForecastResponse\", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"forecastUrl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"forecastData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Failed to retrieve forecast data\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" periods \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" forecastData\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?.\"\n                }), \"periods \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"||\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"periods\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"length \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"No forecast periods available\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Format forecast periods\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" formattedForecast \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" periods\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" ForecastPeriod\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"name \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \":\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Temperature: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"temperature \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"°\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"temperatureUnit \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"F\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Wind: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"windSpeed \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Unknown\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \" \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"windDirection \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"period\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"shortForecast \", _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"||\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"No forecast available\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"---\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" forecastText \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"Forecast for \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"latitude\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \", \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"longitude\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \":\\\\n\\\\n\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"formattedForecast\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"join\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\\\\n\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          type\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          text\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" forecastText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"running-the-server-2\",\n          isAtRootLevel: \"false\",\n          children: \"Running the server\"\n        }), _jsx(_components.p, {\n          children: \"Finally, implement the main function to run the server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"function\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" transport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"StdioServerTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connect\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"transport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Weather MCP Server running on stdio\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"catch\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"error\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Fatal error in main():\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" error\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"exit\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Make sure to run \", _jsx(_components.code, {\n            children: \"npm run build\"\n          }), \" to build your server! This is a very important step in getting your server to connect.\"]\n        }), _jsx(_components.p, {\n          children: \"Let’s now test your server from an existing MCP host, Claude for Desktop.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-claude-for-desktop-2\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Claude for Desktop\"\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"Claude for Desktop is not yet available on Linux. Linux users can proceed to the \", _jsx(_components.a, {\n              href: \"/quickstart/client\",\n              children: \"Building a client\"\n            }), \" tutorial to build an MCP client that connects to the server we just built.\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"First, make sure you have Claude for Desktop installed. \", _jsx(_components.a, {\n            href: \"https://claude.ai/download\",\n            children: \"You can install the latest version\\nhere.\"\n          }), \" If you already have Claude for Desktop, \", _jsx(_components.strong, {\n            children: \"make sure it’s updated to the latest version.\"\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"We’ll need to configure Claude for Desktop for whichever MCP servers you want to use. To do this, open your Claude for Desktop App configuration at \", _jsx(_components.code, {\n            children: \"~/Library/Application Support/Claude/claude_desktop_config.json\"\n          }), \" in a text editor. Make sure to create the file if it doesn’t exist.\"]\n        }), _jsxs(_components.p, {\n          children: [\"For example, if you have \", _jsx(_components.a, {\n            href: \"https://code.visualstudio.com/\",\n            children: \"VS Code\"\n          }), \" installed:\"]\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code ~/Library/Application\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\\\\\"\n                    }), \" Support/Claude/claude_desktop_config.json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-powershell\",\n                children: _jsxs(_components.code, {\n                  className: \"language-powershell\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code \", _jsx(_components.span, {\n                      className: \"token variable\",\n                      children: \"$env\"\n                    }), \":AppData\\\\Claude\\\\claude_desktop_config\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"You’ll then add your servers in the \", _jsx(_components.code, {\n            children: \"mcpServers\"\n          }), \" key. The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.\"]\n        }), _jsx(_components.p, {\n          children: \"In this case, we’ll add our single weather server like so:\"\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeGroup, {\n              children: _jsx(CodeBlock, {\n                filename: \"Node\",\n                expandable: \"false\",\n                children: _jsx(_components.pre, {\n                  className: \"language-json\",\n                  children: _jsxs(_components.code, {\n                    className: \"language-json\",\n                    children: [_jsx(_components.span, {\n                      className: \"\",\n                      children: _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"    \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"mcpServers\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"        \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"weather\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"command\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"node\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \",\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"args\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"[\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"                \", _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/index.js\\\"\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"]\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"        \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"    \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })]\n                    }), \"\\n\", _jsx(_components.span, {\n                      className: \"\",\n                      children: _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })\n                    }), \"\\n\"]\n                  })\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeGroup, {\n              children: _jsx(CodeBlock, {\n                filename: \"Node\",\n                expandable: \"false\",\n                children: _jsx(_components.pre, {\n                  className: \"language-json\",\n                  children: _jsxs(_components.code, {\n                    className: \"language-json\",\n                    children: [_jsx(_components.span, {\n                      className: \"\",\n                      children: _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"    \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"mcpServers\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"        \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"weather\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"{\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"command\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"node\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \",\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token property\",\n                        children: \"\\\"args\\\"\"\n                      }), _jsx(_components.span, {\n                        className: \"token operator\",\n                        children: \":\"\n                      }), \" \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"[\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"                \", _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"C:\\\\\\\\PATH\\\\\\\\TO\\\\\\\\PARENT\\\\\\\\FOLDER\\\\\\\\weather\\\\\\\\build\\\\\\\\index.js\\\"\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"            \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"]\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"        \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })]\n                    }), \"\\n\", _jsxs(_components.span, {\n                      className: \"\",\n                      children: [\"    \", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })]\n                    }), \"\\n\", _jsx(_components.span, {\n                      className: \"\",\n                      children: _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"}\"\n                      })\n                    }), \"\\n\"]\n                  })\n                })\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"This tells Claude for Desktop:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"There’s an MCP server named “weather”\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Launch it by running \", _jsx(_components.code, {\n              children: \"node /ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/index.js\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"Save the file, and restart \", _jsx(_components.strong, {\n            children: \"Claude for Desktop\"\n          }), \".\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"Java\",\n        children: [_jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"This is a quickstart demo based on Spring AI MCP auto-configuration and boot starters.\\nTo learn how to create sync and async MCP Servers, manually, consult the \", _jsx(_components.a, {\n              href: \"/sdk/java/mcp-server\",\n              children: \"Java SDK Server\"\n            }), \" documentation.\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Let’s get started with building our weather server!\\n\", _jsx(_components.a, {\n            href: \"https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/weather/starter-stdio-server\",\n            children: \"You can find the complete code for what we’ll be building here.\"\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"For more information, see the \", _jsx(_components.a, {\n            href: \"https://docs.spring.io/spring-ai/reference/api/mcp/mcp-server-boot-starter-docs.html\",\n            children: \"MCP Server Boot Starter\"\n          }), \" reference documentation.\\nFor manual MCP Server implementation, refer to the \", _jsx(_components.a, {\n            href: \"/sdk/java/mcp-server\",\n            children: \"MCP Server Java SDK documentation\"\n          }), \".\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"system-requirements-3\",\n          isAtRootLevel: \"false\",\n          children: \"System requirements\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Java 17 or higher installed.\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"https://docs.spring.io/spring-boot/installing.html\",\n              children: \"Spring Boot 3.3.x\"\n            }), \" or higher\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"set-up-your-environment-3\",\n          isAtRootLevel: \"false\",\n          children: \"Set up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"Use the \", _jsx(_components.a, {\n            href: \"https://start.spring.io/\",\n            children: \"Spring Initializer\"\n          }), \" to bootstrap the project.\"]\n        }), _jsx(_components.p, {\n          children: \"You will need to add the following dependencies:\"\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"Maven\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-xml\",\n                children: _jsxs(_components.code, {\n                  className: \"language-xml\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"dependencies\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"dependency\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"          \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"groupId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    }), \"org.springframework.ai\", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"groupId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"          \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"artifactId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    }), \"spring-ai-starter-mcp-server\", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"artifactId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"dependency\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"dependency\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"          \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"groupId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    }), \"org.springframework\", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"groupId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"          \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c\"\n                        }), \"artifactId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    }), \"spring-web\", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"artifactId\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"dependency\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsxs(_components.span, {\n                      className: \"token tag\",\n                      children: [_jsxs(_components.span, {\n                        className: \"token tag\",\n                        children: [_jsx(_components.span, {\n                          className: \"token punctuation\",\n                          children: \"\u003c/\"\n                        }), \"dependencies\"]\n                      }), _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \"\u003e\"\n                      })]\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Gradle\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-groovy\",\n                children: _jsxs(_components.code, {\n                  className: \"language-groovy\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"dependencies \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  implementation \", _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"platform\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-string\",\n                      children: _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"org.springframework.ai:spring-ai-starter-mcp-server\\\"\"\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  implementation \", _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"platform\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-string\",\n                      children: _jsx(_components.span, {\n                        className: \"token string\",\n                        children: \"\\\"org.springframework:spring-web\\\"\"\n                      })\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), \"   \"]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Then configure your application by setting the application properties:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"application.properties\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token assign-left variable\",\n                    children: \"spring.main.bannerMode\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \"off\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token assign-left variable\",\n                    children: \"logging.pattern.console\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  })]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"application.yml\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-yaml\",\n              children: _jsxs(_components.code, {\n                className: \"language-yaml\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"logging\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"  pattern\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    console\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"spring\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"  main\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token key atrule\",\n                    children: \"banner-mode\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \":\"\n                  }), \" off\"]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"The \", _jsx(_components.a, {\n            href: \"https://docs.spring.io/spring-ai/reference/api/mcp/mcp-server-boot-starter-docs.html#_configuration_properties\",\n            children: \"Server Configuration Properties\"\n          }), \" documents all available properties.\"]\n        }), _jsx(_components.p, {\n          children: \"Now let’s dive into building your server.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"building-your-server-3\",\n          isAtRootLevel: \"false\",\n          children: \"Building your server\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"weather-service\",\n          isAtRootLevel: \"false\",\n          children: \"Weather Service\"\n        }), _jsxs(_components.p, {\n          children: [\"Let’s implement a \", _jsx(_components.a, {\n            href: \"https://github.com/spring-projects/spring-ai-examples/blob/main/model-context-protocol/weather/starter-stdio-server/src/main/java/org/springframework/ai/mcp/sample/server/WeatherService.java\",\n            children: \"WeatherService.java\"\n          }), \" that uses a REST client to query the data from the National Weather Service API:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-java\",\n            children: _jsxs(_components.code, {\n              className: \"language-java\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@Service\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"WeatherService\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"final\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"RestClient\"\n                }), \" restClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"WeatherService\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"restClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"RestClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"baseUrl\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"https://api.weather.gov\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"defaultHeader\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Accept\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"application/geo+json\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"defaultHeader\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"User-Agent\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"WeatherApiClient/1.0 (your@email.com)\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@Tool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Get weather forecast for a specific latitude/longitude\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"String\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getWeatherForecastByLocation\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"double\"\n                }), \" latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \"   \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Latitude coordinate\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"double\"\n                }), \" longitude   \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Longitude coordinate\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Returns detailed forecast including:\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Temperature and unit\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Wind speed and direction\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Detailed forecast description\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\t\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@Tool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Get weather alerts for a US state\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"String\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getAlerts\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@ToolParam\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Two-letter US state code (e.g. CA, NY)\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"String\"\n                }), \" state\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Returns active alerts including:\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Event type\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Affected area\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Severity\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Description\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// - Safety instructions\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// ......\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"The \", _jsx(_components.code, {\n            children: \"@Service\"\n          }), \" annotation with auto-register the service in your application context.\\nThe Spring AI \", _jsx(_components.code, {\n            children: \"@Tool\"\n          }), \" annotation, making it easy to create and maintain MCP tools.\"]\n        }), _jsx(_components.p, {\n          children: \"The auto-configuration will automatically register these tools with the MCP server.\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"create-your-boot-application\",\n          isAtRootLevel: \"false\",\n          children: \"Create your Boot Application\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-java\",\n            children: _jsxs(_components.code, {\n              className: \"language-java\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@SpringBootApplication\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"McpServerApplication\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"void\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"String\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"SpringApplication\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"run\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"McpServerApplication\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token annotation punctuation\",\n                  children: \"@Bean\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"ToolCallbackProvider\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"weatherTools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"WeatherService\"\n                }), \" weatherService\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\\t\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \"  \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"MethodToolCallbackProvider\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toolObjects\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"weatherService\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"\\t\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Uses the the \", _jsx(_components.code, {\n            children: \"MethodToolCallbackProvider\"\n          }), \" utils to convert the \", _jsx(_components.code, {\n            children: \"@Tools\"\n          }), \" into actionable callbacks used by the MCP server.\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"running-the-server-3\",\n          isAtRootLevel: \"false\",\n          children: \"Running the server\"\n        }), _jsx(_components.p, {\n          children: \"Finally, let’s build the server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"./mvnw clean \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"install\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"This will generate a \", _jsx(_components.code, {\n            children: \"mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar\"\n          }), \" file within the \", _jsx(_components.code, {\n            children: \"target\"\n          }), \" folder.\"]\n        }), _jsx(_components.p, {\n          children: \"Let’s now test your server from an existing MCP host, Claude for Desktop.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-claude-for-desktop-3\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Claude for Desktop\"\n        }), _jsx(Note, {\n          children: _jsx(_components.p, {\n            children: \"Claude for Desktop is not yet available on Linux.\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"First, make sure you have Claude for Desktop installed.\\n\", _jsx(_components.a, {\n            href: \"https://claude.ai/download\",\n            children: \"You can install the latest version here.\"\n          }), \" If you already have Claude for Desktop, \", _jsx(_components.strong, {\n            children: \"make sure it’s updated to the latest version.\"\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"We’ll need to configure Claude for Desktop for whichever MCP servers you want to use.\\nTo do this, open your Claude for Desktop App configuration at \", _jsx(_components.code, {\n            children: \"~/Library/Application Support/Claude/claude_desktop_config.json\"\n          }), \" in a text editor.\\nMake sure to create the file if it doesn’t exist.\"]\n        }), _jsxs(_components.p, {\n          children: [\"For example, if you have \", _jsx(_components.a, {\n            href: \"https://code.visualstudio.com/\",\n            children: \"VS Code\"\n          }), \" installed:\"]\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code ~/Library/Application\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\\\\\"\n                    }), \" Support/Claude/claude_desktop_config.json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-powershell\",\n                children: _jsxs(_components.code, {\n                  className: \"language-powershell\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code \", _jsx(_components.span, {\n                      className: \"token variable\",\n                      children: \"$env\"\n                    }), \":AppData\\\\Claude\\\\claude_desktop_config\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"You’ll then add your servers in the \", _jsx(_components.code, {\n            children: \"mcpServers\"\n          }), \" key.\\nThe MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.\"]\n        }), _jsx(_components.p, {\n          children: \"In this case, we’ll add our single weather server like so:\"\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"java\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"spring-ai-mcp-weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"java\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"-Dspring.ai.mcp.server.stdio=true\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"-jar\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"java\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"spring-ai-mcp-weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"java\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"-Dspring.ai.mcp.server.transport=STDIO\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"-jar\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"C:\\\\\\\\ABSOLUTE\\\\\\\\PATH\\\\\\\\TO\\\\\\\\PARENT\\\\\\\\FOLDER\\\\\\\\weather\\\\\\\\mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"      \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"  \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsx(Note, {\n          children: _jsx(_components.p, {\n            children: \"Make sure you pass in the absolute path to your server.\"\n          })\n        }), _jsx(_components.p, {\n          children: \"This tells Claude for Desktop:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"There’s an MCP server named “my-weather-server”\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"To launch it by running \", _jsx(_components.code, {\n              children: \"java -jar /ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"Save the file, and restart \", _jsx(_components.strong, {\n            children: \"Claude for Desktop\"\n          }), \".\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-java-client\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Java client\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"create-a-mcp-client-manually\",\n          isAtRootLevel: \"false\",\n          children: \"Create a MCP Client manually\"\n        }), _jsxs(_components.p, {\n          children: [\"Use the \", _jsx(_components.code, {\n            children: \"McpClient\"\n          }), \" to connect to the server:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-java\",\n            children: _jsxs(_components.code, {\n              className: \"language-java\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" stdioParams \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"ServerParameters\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"java\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"args\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"-jar\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"/ABSOLUTE/PATH/TO/PARENT/FOLDER/mcp-weather-stdio-server-0.0.1-SNAPSHOT.jar\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" stdioTransport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"StdioClientTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"stdioParams\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" mcpClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"McpClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"sync\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"stdioTransport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"initialize\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"ListToolsResult\"\n                }), \" toolsList \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listTools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"CallToolResult\"\n                }), \" weather \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"callTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"CallToolRequest\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"getWeatherForecastByLocation\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"of\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"latitude\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"47.6062\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"longitude\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"-122.3321\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"CallToolResult\"\n                }), \" alert \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"callTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"CallToolRequest\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"getAlerts\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"of\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"state\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"NY\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"closeGracefully\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"use-mcp-client-boot-starter\",\n          isAtRootLevel: \"false\",\n          children: \"Use MCP Client Boot Starter\"\n        }), _jsxs(_components.p, {\n          children: [\"Create a new boot starter application using the \", _jsx(_components.code, {\n            children: \"spring-ai-starter-mcp-client\"\n          }), \" dependency:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-xml\",\n            children: _jsxs(_components.code, {\n              className: \"language-xml\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"org.springframework.ai\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"spring-ai-starter-mcp-client\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"and set the \", _jsx(_components.code, {\n            children: \"spring.ai.mcp.client.stdio.servers-configuration\"\n          }), \" property to point to your \", _jsx(_components.code, {\n            children: \"claude_desktop_config.json\"\n          }), \".\\nYou can re-use the existing Anthropic Desktop configuration:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-properties\",\n            children: _jsxs(_components.code, {\n              className: \"language-properties\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token key attr-name\",\n                  children: \"spring.ai.mcp.client.stdio.servers-configuration\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token value attr-value\",\n                  children: \"file:PATH/TO/claude_desktop_config.json\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"When you start your client application, the auto-configuration will create, automatically MCP clients from the claude_desktop_config.json.\"\n        }), _jsxs(_components.p, {\n          children: [\"For more information, see the \", _jsx(_components.a, {\n            href: \"https://docs.spring.io/spring-ai/reference/api/mcp/mcp-server-boot-client-docs.html\",\n            children: \"MCP Client Boot Starters\"\n          }), \" reference documentation.\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"more-java-mcp-server-examples\",\n          isAtRootLevel: \"false\",\n          children: \"More Java MCP Server examples\"\n        }), _jsxs(_components.p, {\n          children: [\"The \", _jsx(_components.a, {\n            href: \"https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/weather/starter-webflux-server\",\n            children: \"starter-webflux-server\"\n          }), \" demonstrates how to create a MCP server using SSE transport.\\nIt showcases how to define and register MCP Tools, Resources, and Prompts, using the Spring Boot’s auto-configuration capabilities.\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"Kotlin\",\n        children: [_jsxs(_components.p, {\n          children: [\"Let’s get started with building our weather server! \", _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/kotlin-sdk/tree/main/samples/weather-stdio-server\",\n            children: \"You can find the complete code for what we’ll be building here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"prerequisite-knowledge-3\",\n          isAtRootLevel: \"false\",\n          children: \"Prerequisite knowledge\"\n        }), _jsx(_components.p, {\n          children: \"This quickstart assumes you have familiarity with:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Kotlin\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"LLMs like Claude\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"system-requirements-4\",\n          isAtRootLevel: \"false\",\n          children: \"System requirements\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Java 17 or higher installed.\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"set-up-your-environment-4\",\n          isAtRootLevel: \"false\",\n          children: \"Set up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s install \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" and \", _jsx(_components.code, {\n            children: \"gradle\"\n          }), \" if you haven’t already.\\nYou can download \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" from \", _jsx(_components.a, {\n            href: \"https://www.oracle.com/java/technologies/downloads/\",\n            children: \"official Oracle JDK website\"\n          }), \".\\nVerify your \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" installation:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--version\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Now, let’s create and set up your project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" weather\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" weather\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new kotlin project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"gradle init\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"md weather\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd weather\"\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new kotlin project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"gradle init\"\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"After running \", _jsx(_components.code, {\n            children: \"gradle init\"\n          }), \", you will be presented with options for creating your project.\\nSelect \", _jsx(_components.strong, {\n            children: \"Application\"\n          }), \" as the project type, \", _jsx(_components.strong, {\n            children: \"Kotlin\"\n          }), \" as the programming language, and \", _jsx(_components.strong, {\n            children: \"Java 17\"\n          }), \" as the Java version.\"]\n        }), _jsxs(_components.p, {\n          children: [\"Alternatively, you can create a Kotlin application using the \", _jsx(_components.a, {\n            href: \"https://kotlinlang.org/docs/jvm-get-started.html\",\n            children: \"IntelliJ IDEA project wizard\"\n          }), \".\"]\n        }), _jsx(_components.p, {\n          children: \"After creating the project, add the following dependencies:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"build.gradle.kts\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-kotlin\",\n              children: _jsxs(_components.code, {\n                className: \"language-kotlin\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" mcpVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"0.4.0\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" slf4jVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"2.0.9\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" ktorVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"3.1.1\\\"\"\n                    })\n                  })]\n                }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"dependencies \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.modelcontextprotocol:kotlin-sdk:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"mcpVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"org.slf4j:slf4j-nop:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"slf4jVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.ktor:ktor-client-content-negotiation:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"ktorVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.ktor:ktor-serialization-kotlinx-json:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"ktorVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"build.gradle\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-groovy\",\n              children: _jsxs(_components.code, {\n                className: \"language-groovy\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" mcpVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'0.3.0'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" slf4jVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'2.0.9'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" ktorVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'3.1.1'\"\n                  })]\n                }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"dependencies \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.modelcontextprotocol:kotlin-sdk:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"mcpVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"org.slf4j:slf4j-nop:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"slf4jVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.ktor:ktor-client-content-negotiation:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"ktorVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.ktor:ktor-serialization-kotlinx-json:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"ktorVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Also, add the following plugins to your build script:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"build.gradle.kts\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-kotlin\",\n              children: _jsxs(_components.code, {\n                className: \"language-kotlin\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"plugins \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"kotlin\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"plugin.serialization\\\"\"\n                    })\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"your_version_of_kotlin\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"id\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"com.github.johnrengelman.shadow\\\"\"\n                    })\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"8.1.1\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"build.gradle\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-groovy\",\n              children: _jsxs(_components.code, {\n                className: \"language-groovy\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"plugins \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    id \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'org.jetbrains.kotlin.plugin.serialization'\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'your_version_of_kotlin'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    id \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'com.github.johnrengelman.shadow'\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'8.1.1'\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Now let’s dive into building your server.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"building-your-server-4\",\n          isAtRootLevel: \"false\",\n          children: \"Building your server\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"setting-up-the-instance\",\n          isAtRootLevel: \"false\",\n          children: \"Setting up the instance\"\n        }), _jsx(_components.p, {\n          children: \"Add a server initialization function:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Main function to run the MCP server\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"`run mcp server`\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Create the MCP Server instance with a basic implementation\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" server \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Server\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Implementation\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"weather\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Tool name is \\\"weather\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            version \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"1.0.0\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Version of the implementation\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ServerOptions\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            capabilities \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ServerCapabilities\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" ServerCapabilities\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Tools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"listChanged \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Create a transport using standard IO for server communication\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" transport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"StdioServerTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        System\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"`\", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \"`\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"asInput\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        System\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"out\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"asSink\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"buffered\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    runBlocking \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connect\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"transport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" done \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Job\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"onClose\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            done\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"complete\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        done\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"weather-api-helper-functions\",\n          isAtRootLevel: \"false\",\n          children: \"Weather API helper functions\"\n        }), _jsx(_components.p, {\n          children: \"Next, let’s add functions and data classes for querying and converting responses from the National Weather Service API:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Extension function to fetch forecast information for given latitude and longitude\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"suspend\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" HttpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getForecast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"latitude\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Double\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" longitude\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Double\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" List\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"String\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" points \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"/points/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"latitude\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \",\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"longitude\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"body\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Points\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" forecast \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"points\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"body\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Forecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"periods\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" period \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Temperature\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"temperature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"temperatureUnit\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Wind\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"windSpeed\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"windDirection\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Forecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"detailedForecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"trimIndent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Extension function to fetch weather alerts for a given state\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"suspend\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" HttpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getAlerts\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"state\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" List\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"String\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" alerts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"/alerts/active/area/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"state\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"body\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Alert\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" alerts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"features\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" feature \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Event\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"event\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Area\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"areaDesc\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Severity\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"severity\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Description\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"description\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            Instruction\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"feature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"instruction\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"trimIndent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Points\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Properties\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Properties\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" forecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Forecast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Properties\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Properties\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" periods\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" List\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Period\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Period\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" number\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Int\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" startTime\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" endTime\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" isDaytime\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Boolean\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" temperature\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Int\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" temperatureUnit\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" temperatureTrend\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" probabilityOfPrecipitation\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" JsonObject\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" windSpeed\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" windDirection\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" shortForecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" detailedForecast\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Alert\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" features\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" List\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Feature\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Feature\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" properties\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Properties\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token annotation builtin\",\n                  children: \"@Serializable\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"data\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Properties\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" event\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" areaDesc\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" severity\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" description\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" instruction\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"implementing-tool-execution-3\",\n          isAtRootLevel: \"false\",\n          children: \"Implementing tool execution\"\n        }), _jsx(_components.p, {\n          children: \"The tool execution handler is responsible for actually executing the logic of each tool. Let’s add it:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Create an HTTP client with a default request configuration and JSON content negotiation\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" httpClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" HttpClient \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    defaultRequest \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"url\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"https://api.weather.gov\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        headers \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"append\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Accept\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"application/geo+json\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"append\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"User-Agent\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"WeatherApiClient/1.0\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"contentType\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"ContentType\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Application\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Json\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Install content negotiation plugin for JSON serialization/deserialization\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"install\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"ContentNegotiation\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"json\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"Json \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" ignoreUnknownKeys \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Register a tool to fetch weather alerts by state\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"addTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"get_alerts\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        Get weather alerts \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" a US state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \" Input \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"is\"\n                }), \" Two\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), \"letter US state \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"code\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"g\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \" CA\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" NY\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"trimIndent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    inputSchema \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Input\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        properties \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" buildJsonObject \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"putJsonObject\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"state\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"put\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"type\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"string\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"put\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"description\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Two-letter US state code (e.g. CA, NY)\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        required \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"state\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" request \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" state \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"arguments\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"state\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"jsonPrimitive\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"state \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), _jsx(_components.span, {\n                  className: \"token label symbol\",\n                  children: \"@addTool\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CallToolResult\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"TextContent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"The 'state' parameter is required.\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" alerts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" httpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getAlerts\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CallToolResult\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" alerts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"TextContent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"it\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// Register a tool to fetch weather forecast by latitude and longitude\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"addTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"get_forecast\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        Get weather forecast \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" a specific latitude\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"/\"\n                }), \"longitude\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"trimIndent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    inputSchema \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Input\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        properties \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" buildJsonObject \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"putJsonObject\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"latitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"put\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"type\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"number\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"putJsonObject\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"longitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"put\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"type\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"number\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        required \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"latitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"longitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" request \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" latitude \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"arguments\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"latitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"jsonPrimitive\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"doubleOrNull\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" longitude \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" request\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"arguments\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"longitude\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"jsonPrimitive\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"doubleOrNull\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"latitude \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"||\"\n                }), \" longitude \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), _jsx(_components.span, {\n                  className: \"token label symbol\",\n                  children: \"@addTool\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CallToolResult\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"TextContent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"The 'latitude' and 'longitude' parameters are required.\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" forecast \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" httpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getForecast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" longitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CallToolResult\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"TextContent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"it\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"running-the-server-4\",\n          isAtRootLevel: \"false\",\n          children: \"Running the server\"\n        }), _jsx(_components.p, {\n          children: \"Finally, implement the main function to run the server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"`run mcp server`\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Make sure to run \", _jsx(_components.code, {\n            children: \"./gradlew build\"\n          }), \" to build your server. This is a very important step in getting your server to connect.\"]\n        }), _jsx(_components.p, {\n          children: \"Let’s now test your server from an existing MCP host, Claude for Desktop.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-claude-for-desktop-4\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Claude for Desktop\"\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"Claude for Desktop is not yet available on Linux. Linux users can proceed to the \", _jsx(_components.a, {\n              href: \"/quickstart/client\",\n              children: \"Building a client\"\n            }), \" tutorial to build an MCP client that connects to the server we just built.\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"First, make sure you have Claude for Desktop installed. \", _jsx(_components.a, {\n            href: \"https://claude.ai/download\",\n            children: \"You can install the latest version\\nhere.\"\n          }), \" If you already have Claude for Desktop, \", _jsx(_components.strong, {\n            children: \"make sure it’s updated to the latest version.\"\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"We’ll need to configure Claude for Desktop for whichever MCP servers you want to use.\\nTo do this, open your Claude for Desktop App configuration at \", _jsx(_components.code, {\n            children: \"~/Library/Application Support/Claude/claude_desktop_config.json\"\n          }), \" in a text editor.\\nMake sure to create the file if it doesn’t exist.\"]\n        }), _jsxs(_components.p, {\n          children: [\"For example, if you have \", _jsx(_components.a, {\n            href: \"https://code.visualstudio.com/\",\n            children: \"VS Code\"\n          }), \" installed:\"]\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"code ~/Library/Application\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\\\\\"\n                  }), \" Support/Claude/claude_desktop_config.json\"]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"code \", _jsx(_components.span, {\n                    className: \"token variable\",\n                    children: \"$env\"\n                  }), \":AppData\\\\Claude\\\\claude_desktop_config\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"json\"]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"You’ll then add your servers in the \", _jsx(_components.code, {\n            children: \"mcpServers\"\n          }), \" key.\\nThe MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.\"]\n        }), _jsx(_components.p, {\n          children: \"In this case, we’ll add our single weather server like so:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-json\",\n              children: _jsxs(_components.code, {\n                className: \"language-json\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"mcpServers\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"        \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"weather\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"command\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"java\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"args\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"[\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"                \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"-jar\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"                \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"/ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/libs/weather-0.1.0-all.jar\\\"\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"]\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"        \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-json\",\n              children: _jsxs(_components.code, {\n                className: \"language-json\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"mcpServers\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"        \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"weather\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"command\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"java\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token property\",\n                    children: \"\\\"args\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \":\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"[\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"                \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"-jar\\\"\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"                \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"C:\\\\\\\\PATH\\\\\\\\TO\\\\\\\\PARENT\\\\\\\\FOLDER\\\\\\\\weather\\\\\\\\build\\\\\\\\libs\\\\\\\\weather-0.1.0-all.jar\\\"\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"            \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"]\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"        \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"This tells Claude for Desktop:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"There’s an MCP server named “weather”\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Launch it by running \", _jsx(_components.code, {\n              children: \"java -jar /ABSOLUTE/PATH/TO/PARENT/FOLDER/weather/build/libs/weather-0.1.0-all.jar\"\n            })]\n          }), \"\\n\"]\n        }), _jsxs(_components.p, {\n          children: [\"Save the file, and restart \", _jsx(_components.strong, {\n            children: \"Claude for Desktop\"\n          }), \".\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"C#\",\n        children: [_jsxs(_components.p, {\n          children: [\"Let’s get started with building our weather server! \", _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/csharp-sdk/tree/main/samples/QuickstartWeatherServer\",\n            children: \"You can find the complete code for what we’ll be building here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"prerequisite-knowledge-4\",\n          isAtRootLevel: \"false\",\n          children: \"Prerequisite knowledge\"\n        }), _jsx(_components.p, {\n          children: \"This quickstart assumes you have familiarity with:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"C#\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"LLMs like Claude\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \".NET 8 or higher\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"system-requirements-5\",\n          isAtRootLevel: \"false\",\n          children: \"System requirements\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.a, {\n              href: \"https://dotnet.microsoft.com/download/dotnet/8.0\",\n              children: \".NET 8 SDK\"\n            }), \" or higher installed.\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"set-up-your-environment-5\",\n          isAtRootLevel: \"false\",\n          children: \"Set up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s install \", _jsx(_components.code, {\n            children: \"dotnet\"\n          }), \" if you haven’t already. You can download \", _jsx(_components.code, {\n            children: \"dotnet\"\n          }), \" from \", _jsx(_components.a, {\n            href: \"https://dotnet.microsoft.com/download/\",\n            children: \"official Microsoft .NET website\"\n          }), \". Verify your \", _jsx(_components.code, {\n            children: \"dotnet\"\n          }), \" installation:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--version\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Now, let’s create and set up your project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" weather\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" weather\"]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new C# project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"dotnet new console\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"mkdir weather\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd weather\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new C# project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"dotnet new console\"\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"After running \", _jsx(_components.code, {\n            children: \"dotnet new console\"\n          }), \", you will be presented with a new C# project.\\nYou can open the project in your favorite IDE, such as \", _jsx(_components.a, {\n            href: \"https://visualstudio.microsoft.com/\",\n            children: \"Visual Studio\"\n          }), \" or \", _jsx(_components.a, {\n            href: \"https://www.jetbrains.com/rider/\",\n            children: \"Rider\"\n          }), \".\\nAlternatively, you can create a C# application using the \", _jsx(_components.a, {\n            href: \"https://learn.microsoft.com/en-us/visualstudio/get-started/csharp/tutorial-console?view=vs-2022\",\n            children: \"Visual Studio project wizard\"\n          }), \".\\nAfter creating the project, add NuGet package for the Model Context Protocol SDK and hosting:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Add the Model Context Protocol SDK NuGet package\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" package ModelContextProtocol \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--prerelease\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Add the .NET Hosting NuGet package\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" package Microsoft.Extensions.Hosting\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Now let’s dive into building your server.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"building-your-server-5\",\n          isAtRootLevel: \"false\",\n          children: \"Building your server\"\n        }), _jsxs(_components.p, {\n          children: [\"Open the \", _jsx(_components.code, {\n            children: \"Program.cs\"\n          }), \" file in your project and replace its contents with the following code:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Microsoft\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Extensions\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"DependencyInjection\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Microsoft\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Extensions\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Hosting\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token namespace\",\n                  children: \"ModelContextProtocol\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"System\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Net\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Http\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Headers\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" builder \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" Host\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CreateEmptyApplicationBuilder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token named-parameter punctuation\",\n                  children: \"settings\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"builder\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Services\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"AddMcpServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WithStdioServerTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WithToolsFromAssembly\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"builder\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Services\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"AddSingleton\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"_ \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" client \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"HttpClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" BaseAddress \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"Uri\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"https://api.weather.gov\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"DefaultRequestHeaders\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"UserAgent\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"ProductInfoHeaderValue\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"weather-tool\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"1.0\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" app \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" builder\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" app\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"RunAsync\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"When creating the \", _jsx(_components.code, {\n              children: \"ApplicationHostBuilder\"\n            }), \", ensure you use \", _jsx(_components.code, {\n              children: \"CreateEmptyApplicationBuilder\"\n            }), \" instead of \", _jsx(_components.code, {\n              children: \"CreateDefaultBuilder\"\n            }), \". This ensures that the server does not write any additional messages to the console. This is only neccessary for servers using STDIO transport.\"]\n          })\n        }), _jsx(_components.p, {\n          children: \"This code sets up a basic console application that uses the Model Context Protocol SDK to create an MCP server with standard I/O transport.\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"weather-api-helper-functions-2\",\n          isAtRootLevel: \"false\",\n          children: \"Weather API helper functions\"\n        }), _jsx(_components.p, {\n          children: \"Next, define a class with the tool execution handlers for querying and converting responses from the National Weather Service API:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"ModelContextProtocol\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Server\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"System\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"ComponentModel\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"System\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Net\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Http\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Json\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"System\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Text\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Json\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"namespace\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"QuickstartWeatherServer\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Tools\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token attribute\",\n                  children: _jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"McpServerToolType\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"WeatherTools\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsxs(_components.span, {\n                  className: \"token attribute\",\n                  children: [_jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"McpServerTool\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"Description\"\n                  }), _jsxs(_components.span, {\n                    className: \"token attribute-arguments\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Get weather alerts for a US state.\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token return-type class-name\",\n                  children: [\"Task\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003c\"\n                  }), _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetAlerts\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"HttpClient\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsxs(_components.span, {\n                  className: \"token attribute\",\n                  children: [_jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"Description\"\n                  }), _jsxs(_components.span, {\n                    className: \"token attribute-arguments\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"The US state to get alerts for.\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  })\n                }), \" state\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" jsonElement \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsxs(_components.span, {\n                  className: \"token generic-method\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"GetFromJsonAsync\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"JsonElement\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token interpolation-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"$\\\"/alerts/active/area/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression language-csharp\",\n                      children: \"state\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" alerts \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" jsonElement\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"features\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"EnumerateArray\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"alerts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Any\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"No active alerts for this state.\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n--\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" alerts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Select\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"alert \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"JsonElement\"\n                }), \" properties \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" alert\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"properties\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token interpolation-string\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"$\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    Event\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"event\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    Area\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"areaDesc\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    Severity\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"severity\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    Description\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"description\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    Instruction\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"instruction\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsxs(_components.span, {\n                  className: \"token attribute\",\n                  children: [_jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"McpServerTool\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"Description\"\n                  }), _jsxs(_components.span, {\n                    className: \"token attribute-arguments\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Get weather forecast for a location.\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"public\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token return-type class-name\",\n                  children: [\"Task\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003c\"\n                  }), _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetForecast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"HttpClient\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsxs(_components.span, {\n                  className: \"token attribute\",\n                  children: [_jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"Description\"\n                  }), _jsxs(_components.span, {\n                    className: \"token attribute-arguments\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Latitude of the location.\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"double\"\n                  })\n                }), \" latitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsxs(_components.span, {\n                  className: \"token attribute\",\n                  children: [_jsx(_components.span, {\n                    className: \"token class-name\",\n                    children: \"Description\"\n                  }), _jsxs(_components.span, {\n                    className: \"token attribute-arguments\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"Longitude of the location.\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"double\"\n                  })\n                }), \" longitude\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" jsonElement \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsxs(_components.span, {\n                  className: \"token generic-method\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"GetFromJsonAsync\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"JsonElement\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token interpolation-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"$\\\"/points/\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression language-csharp\",\n                      children: \"latitude\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \",\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression language-csharp\",\n                      children: \"longitude\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" periods \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" jsonElement\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"properties\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"periods\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"EnumerateArray\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n---\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" periods\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Select\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"period \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token interpolation-string\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"$\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"name\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                Temperature\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"temperature\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetInt32\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \"°F\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                Wind\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"windSpeed\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"windDirection\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                Forecast\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"period\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"detailedForecast\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"running-the-server-5\",\n          isAtRootLevel: \"false\",\n          children: \"Running the server\"\n        }), _jsx(_components.p, {\n          children: \"Finally, run the server using the following command:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: \"dotnet run\"\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"This will start the server and listen for incoming requests on standard input/output.\"\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"testing-your-server-with-claude-for-desktop-5\",\n          isAtRootLevel: \"false\",\n          children: \"Testing your server with Claude for Desktop\"\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"Claude for Desktop is not yet available on Linux. Linux users can proceed to the \", _jsx(_components.a, {\n              href: \"/quickstart/client\",\n              children: \"Building a client\"\n            }), \" tutorial to build an MCP client that connects to the server we just built.\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"First, make sure you have Claude for Desktop installed. \", _jsx(_components.a, {\n            href: \"https://claude.ai/download\",\n            children: \"You can install the latest version\\nhere.\"\n          }), \" If you already have Claude for Desktop, \", _jsx(_components.strong, {\n            children: \"make sure it’s updated to the latest version.\"\n          }), \"\\nWe’ll need to configure Claude for Desktop for whichever MCP servers you want to use. To do this, open your Claude for Desktop App configuration at \", _jsx(_components.code, {\n            children: \"~/Library/Application Support/Claude/claude_desktop_config.json\"\n          }), \" in a text editor. Make sure to create the file if it doesn’t exist.\\nFor example, if you have \", _jsx(_components.a, {\n            href: \"https://code.visualstudio.com/\",\n            children: \"VS Code\"\n          }), \" installed:\"]\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code ~/Library/Application\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\\\\\"\n                    }), \" Support/Claude/claude_desktop_config.json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-powershell\",\n                children: _jsxs(_components.code, {\n                  className: \"language-powershell\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"code \", _jsx(_components.span, {\n                      className: \"token variable\",\n                      children: \"$env\"\n                    }), \":AppData\\\\Claude\\\\claude_desktop_config\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), \"json\"]\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"You’ll then add your servers in the \", _jsx(_components.code, {\n            children: \"mcpServers\"\n          }), \" key. The MCP UI elements will only show up in Claude for Desktop if at least one server is properly configured.\\nIn this case, we’ll add our single weather server like so:\"]\n        }), _jsxs(Tabs, {\n          children: [_jsx(Tab, {\n            title: \"MacOS/Linux\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"dotnet\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"run\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--project\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"/ABSOLUTE/PATH/TO/PROJECT\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--no-build\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          }), _jsx(Tab, {\n            title: \"Windows\",\n            children: _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-json\",\n                children: _jsxs(_components.code, {\n                  className: \"language-json\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"mcpServers\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"weather\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"command\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"dotnet\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token property\",\n                      children: \"\\\"args\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \":\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"[\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"run\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--project\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"C:\\\\\\\\ABSOLUTE\\\\\\\\PATH\\\\\\\\TO\\\\\\\\PROJECT\\\"\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \",\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"                \", _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"--no-build\\\"\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"            \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"]\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"        \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"    \", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), \"\\n\", _jsx(_components.span, {\n                    className: \"\",\n                    children: _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })\n                  }), \"\\n\"]\n                })\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"This tells Claude for Desktop:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"There’s an MCP server named “weather”\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Launch it by running \", _jsx(_components.code, {\n              children: \"dotnet run /ABSOLUTE/PATH/TO/PROJECT\"\n            }), \"\\nSave the file, and restart \", _jsx(_components.strong, {\n              children: \"Claude for Desktop\"\n            }), \".\"]\n          }), \"\\n\"]\n        })]\n      })]\n    }), \"\\n\", _jsx(Heading, {\n      level: \"3\",\n      id: \"test-with-commands\",\n      isAtRootLevel: \"true\",\n      children: \"Test with commands\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let’s make sure Claude for Desktop is picking up the two tools we’ve exposed in our \", _jsx(_components.code, {\n        children: \"weather\"\n      }), \" server. You can do this by looking for the “Search and tools” \", _jsx(\"img\", {\n        src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/claude-desktop-mcp-slider.svg\",\n        style: {\n          display: 'inline',\n          margin: 0,\n          height: '1.3em'\n        }\n      }), \" icon:\"]\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/visual-indicator-mcp-tools.png\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"After clicking on the slider icon, you should see two tools listed:\"\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/available-mcp-tools.png\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If your server isn’t being picked up by Claude for Desktop, proceed to the \", _jsx(_components.a, {\n        href: \"#troubleshooting\",\n        children: \"Troubleshooting\"\n      }), \" section for debugging tips.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If the tool settings icon has shown up, you can now test your server by running the following commands in Claude for Desktop:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"What’s the weather in Sacramento?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"What are the active weather alerts in Texas?\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/current-weather.png\"\n        })\n      })\n    }), \"\\n\", _jsx(Frame, {\n      children: _jsx(ZoomImage, {\n        children: _jsx(\"img\", {\n          src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/weather-alerts.png\"\n        })\n      })\n    }), \"\\n\", _jsx(Note, {\n      children: _jsx(_components.p, {\n        children: \"Since this is the US National Weather service, the queries will only work for US locations.\"\n      })\n    }), \"\\n\", _jsx(Heading, {\n      level: \"2\",\n      id: \"what%E2%80%99s-happening-under-the-hood\",\n      isAtRootLevel: \"true\",\n      children: \"What’s happening under the hood\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When you ask a question:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"The client sends your question to Claude\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Claude analyzes the available tools and decides which one(s) to use\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The client executes the chosen tool(s) through the MCP server\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The results are sent back to Claude\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Claude formulates a natural language response\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The response is displayed to you!\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Heading, {\n      level: \"2\",\n      id: \"troubleshooting\",\n      isAtRootLevel: \"true\",\n      children: \"Troubleshooting\"\n    }), \"\\n\", _jsxs(AccordionGroup, {\n      children: [_jsxs(Accordion, {\n        title: \"Claude for Desktop Integration Issues\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Getting logs from Claude for Desktop\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Claude.app logging related to MCP is written to log files in \", _jsx(_components.code, {\n            children: \"~/Library/Logs/Claude\"\n          }), \":\"]\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"mcp.log\"\n            }), \" will contain general logging about MCP connections and connection failures.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Files named \", _jsx(_components.code, {\n              children: \"mcp-server-SERVERNAME.log\"\n            }), \" will contain error (stderr) logging from the named server.\"]\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"You can run the following command to list recent logs and follow along with any new ones:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Check Claude's logs for errors\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"tail\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-n\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"20\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-f\"\n                }), \" ~/Library/Logs/Claude/mcp*.log\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Server not showing up in Claude\"\n          })\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"Check your \", _jsx(_components.code, {\n              children: \"claude_desktop_config.json\"\n            }), \" file syntax\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Make sure the path to your project is absolute and not relative\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Restart Claude for Desktop completely\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Tool calls failing silently\"\n          })\n        }), _jsx(_components.p, {\n          children: \"If Claude attempts to use the tools but they fail:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Check Claude’s logs for errors\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Verify your server builds and runs without errors\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Try restarting Claude for Desktop\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"None of this is working. What do I do?\"\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Please refer to our \", _jsx(_components.a, {\n            href: \"/docs/tools/debugging\",\n            children: \"debugging guide\"\n          }), \" for better debugging tools and more detailed guidance.\"]\n        })]\n      }), _jsxs(Accordion, {\n        title: \"Weather API Issues\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Error: Failed to retrieve grid point data\"\n          })\n        }), _jsx(_components.p, {\n          children: \"This usually means either:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The coordinates are outside the US\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The NWS API is having issues\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"You’re being rate limited\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Fix:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Verify you’re using US coordinates\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Add a small delay between requests\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Check the NWS API status page\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Error: No active alerts for [STATE]\"\n          })\n        }), _jsx(_components.p, {\n          children: \"This isn’t an error - it just means there are no current weather alerts for that state. Try a different state or check during severe weather.\"\n        })]\n      })]\n    }), \"\\n\", _jsx(Note, {\n      children: _jsxs(_components.p, {\n        children: [\"For more advanced troubleshooting, check out our guide on \", _jsx(_components.a, {\n          href: \"/docs/tools/debugging\",\n          children: \"Debugging MCP\"\n        })]\n      })\n    }), \"\\n\", _jsx(Heading, {\n      level: \"2\",\n      id: \"next-steps\",\n      isAtRootLevel: \"true\",\n      children: \"Next steps\"\n    }), \"\\n\", _jsxs(CardGroup, {\n      cols: 2,\n      children: [_jsx(Card, {\n        title: \"Building a client\",\n        icon: \"outlet\",\n        href: \"/quickstart/client\",\n        children: _jsx(_components.p, {\n          children: \"Learn how to build your own MCP client that can connect to your server\"\n        })\n      }), _jsx(Card, {\n        title: \"Example servers\",\n        icon: \"grid\",\n        href: \"/examples\",\n        children: _jsx(_components.p, {\n          children: \"Check out our gallery of official MCP servers and implementations\"\n        })\n      }), _jsx(Card, {\n        title: \"Debugging Guide\",\n        icon: \"bug\",\n        href: \"/docs/tools/debugging\",\n        children: _jsx(_components.p, {\n          children: \"Learn how to effectively debug MCP servers and integrations\"\n        })\n      }), _jsx(Card, {\n        title: \"Building MCP with LLMs\",\n        icon: \"comments\",\n        href: \"/tutorials/building-mcp-with-llms\",\n        children: _jsx(_components.p, {\n          children: \"Learn how to use LLMs like Claude to speed up your MCP development\"\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"config":{"theme":"willow","$schema":"https://mintlify.com/docs.json","name":"Model Context Protocol","colors":{"primary":"#09090b","light":"#FAFAFA","dark":"#09090b"},"logo":{"light":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg","dark":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg"},"favicon":"/favicon.svg","navbar":{"links":[],"primary":{"type":"button","label":"GitHub","href":"https://github.com/modelcontextprotocol"}},"navigation":{"global":{"anchors":[{"anchor":"Python SDK","icon":"python","href":"https://github.com/modelcontextprotocol/python-sdk"},{"anchor":"TypeScript SDK","icon":"square-js","href":"https://github.com/modelcontextprotocol/typescript-sdk"},{"anchor":"Java SDK","icon":"java","href":"https://github.com/modelcontextprotocol/java-sdk"},{"anchor":"Kotlin SDK","icon":"square-k","href":"https://github.com/modelcontextprotocol/kotlin-sdk"},{"anchor":"C# SDK","icon":"square-c","href":"https://github.com/modelcontextprotocol/csharp-sdk"},{"anchor":"Swift SDK","icon":"swift","href":"https://github.com/modelcontextprotocol/swift-sdk"}]},"tabs":[{"tab":"User Guide","groups":[{"group":"Get Started","pages":["introduction",{"group":"Quickstart","pages":["quickstart/server","quickstart/client","quickstart/user"]},"examples","clients","faqs"]},{"group":"Tutorials","pages":["tutorials/building-mcp-with-llms","docs/tools/debugging","docs/tools/inspector"]},{"group":"Concepts","pages":["docs/concepts/architecture","docs/concepts/resources","docs/concepts/prompts","docs/concepts/tools","docs/concepts/sampling","docs/concepts/roots","docs/concepts/transports"]},{"group":"Development","pages":["development/updates","development/roadmap","development/contributing"]}]},{"tab":"SDKs","icon":"book-open","groups":[{"group":"Java","pages":["sdk/java/mcp-overview","sdk/java/mcp-client","sdk/java/mcp-server"]}]},{"tab":"Specification","icon":"book","groups":[{"group":"2025-03-26 (Latest)","pages":["specification/2025-03-26/index","specification/2025-03-26/changelog","specification/2025-03-26/architecture/index",{"group":"Base Protocol","pages":["specification/2025-03-26/basic/index","specification/2025-03-26/basic/lifecycle","specification/2025-03-26/basic/transports","specification/2025-03-26/basic/authorization",{"group":"Utilities","pages":["specification/2025-03-26/basic/utilities/cancellation","specification/2025-03-26/basic/utilities/ping","specification/2025-03-26/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2025-03-26/client/roots","specification/2025-03-26/client/sampling"]},{"group":"Server Features","pages":["specification/2025-03-26/server/index","specification/2025-03-26/server/prompts","specification/2025-03-26/server/resources","specification/2025-03-26/server/tools",{"group":"Utilities","pages":["specification/2025-03-26/server/utilities/completion","specification/2025-03-26/server/utilities/logging","specification/2025-03-26/server/utilities/pagination"]}]}]},{"group":"2024-11-05","pages":["specification/2024-11-05/index","specification/2024-11-05/architecture/index",{"group":"Base Protocol","pages":["specification/2024-11-05/basic/index","specification/2024-11-05/basic/lifecycle","specification/2024-11-05/basic/messages","specification/2024-11-05/basic/transports",{"group":"Utilities","pages":["specification/2024-11-05/basic/utilities/cancellation","specification/2024-11-05/basic/utilities/ping","specification/2024-11-05/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2024-11-05/client/roots","specification/2024-11-05/client/sampling"]},{"group":"Server Features","pages":["specification/2024-11-05/server/index","specification/2024-11-05/server/prompts","specification/2024-11-05/server/resources","specification/2024-11-05/server/tools",{"group":"Utilities","pages":["specification/2024-11-05/server/utilities/completion","specification/2024-11-05/server/utilities/logging","specification/2024-11-05/server/utilities/pagination"]}]}]},{"group":"draft","pages":["specification/draft/index","specification/draft/changelog","specification/draft/architecture/index",{"group":"Base Protocol","pages":["specification/draft/basic/index","specification/draft/basic/lifecycle","specification/draft/basic/transports","specification/draft/basic/authorization","specification/draft/basic/security_best_practices",{"group":"Utilities","pages":["specification/draft/basic/utilities/cancellation","specification/draft/basic/utilities/ping","specification/draft/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/draft/client/roots","specification/draft/client/sampling"]},{"group":"Server Features","pages":["specification/draft/server/index","specification/draft/server/prompts","specification/draft/server/resources","specification/draft/server/tools",{"group":"Utilities","pages":["specification/draft/server/utilities/completion","specification/draft/server/utilities/logging","specification/draft/server/utilities/pagination"]}]}]},{"group":"Resources","pages":["specification/versioning","specification/contributing"]}]}]},"footer":{"socials":{"github":"https://github.com/modelcontextprotocol"}},"seo":{"metatags":{"og:image":"https://raw.githubusercontent.com/modelcontextprotocol/docs/2eb6171ddbfeefde349dc3b8d5e2b87414c26250/images/og-image.png"},"indexing":"navigable"},"redirects":[{"source":"/tutorials/building-a-client","destination":"/quickstart/client"},{"source":"/quickstart","destination":"/quickstart/server"},{"source":"/specification/latest","destination":"/specification/2025-03-26","permanent":false}],"contextual":{"options":["copy","view"]}},"pageMetadata":{"title":"For Server Developers","description":"Get started building your own server to use in Claude for Desktop and other clients.","href":"/quickstart/server"}}},"entitlements":{"REMOVE_BRANDING":{"status":"ENABLED"}},"gitSource":{"type":"github","owner":"modelcontextprotocol","repo":"modelcontextprotocol","deployBranch":"main","contentDirectory":"docs","isPrivate":true},"banner":null,"buildId":"682fa3046d0b71604fc93f2c:success"},"__N_SSG":true},"page":"/_sites/[subdomain]/[[...slug]]","query":{"subdomain":"modelcontextprotocol.io","slug":["quickstart","server"]},"buildId":"rTNlc3N1jjUuGX8TQWQnB","assetPrefix":"/mintlify-assets","isFallback":false,"isExperimentalCompile":false,"gsp":true,"scriptLoader":[]}</script></html></body></html>