<!DOCTYPE html><html lang="en" class="dark"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width"/><link rel="apple-touch-icon" type="image/png" sizes="180x180" href="https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/apple-touch-icon.png?v=3"/><link rel="icon" type="image/png" sizes="32x32" href="https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon-32x32.png?v=3"/><link rel="icon" type="image/png" sizes="16x16" href="https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon-16x16.png?v=3"/><link rel="shortcut icon" type="image/x-icon" href="https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon.ico?v=3"/><meta name="msapplication-config" content="https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/browserconfig.xml?v=3"/><meta name="apple-mobile-web-app-title" content="Model Context Protocol"/><meta name="application-name" content="Model Context Protocol"/><meta name="msapplication-TileColor" content="#09090b"/><meta name="theme-color" content="#ffffff"/><meta name="generator" content="Mintlify"/><link rel="sitemap" type="application/xml" href="/sitemap.xml"/><meta name="charset" content="utf-8"/><meta name="og:type" content="website"/><meta name="og:site_name" content="Model Context Protocol"/><meta name="twitter:card" content="summary_large_image"/><meta name="og:title" content="For Client Developers - Model Context Protocol"/><meta name="twitter:title" content="For Client Developers - Model Context Protocol"/><meta name="og:description" content="Get started building your own client that can integrate with all MCP servers."/><meta name="description" content="Get started building your own client that can integrate with all MCP servers."/><meta name="og:image" content="https://raw.githubusercontent.com/modelcontextprotocol/docs/2eb6171ddbfeefde349dc3b8d5e2b87414c26250/images/og-image.png"/><meta property="og:image:width" content="1200"/><meta property="og:image:height" content="630"/><meta property="twitter:image" content="https://mcp.mintlify.app/mintlify-assets/_next/image?url=%2Fapi%2Fog%3Fdivision%3DDocumentation%26title%3DFor%2BClient%2BDevelopers%26description%3DGet%2Bstarted%2Bbuilding%2Byour%2Bown%2Bclient%2Bthat%2Bcan%2Bintegrate%2Bwith%2Ball%2BMCP%2Bservers.%26logoLight%3Dhttps%253A%252F%252Fmintlify.s3.us-west-1.amazonaws.com%252Fmcp%252Flogo%252Flight.svg%26logoDark%3Dhttps%253A%252F%252Fmintlify.s3.us-west-1.amazonaws.com%252Fmcp%252Flogo%252Fdark.svg%26primaryColor%3D%252309090b%26lightColor%3D%2523FAFAFA%26darkColor%3D%252309090b&amp;w=1200&amp;q=100"/><meta property="twitter:image:width" content="1200"/><meta property="twitter:image:height" content="630"/><title>For Client Developers - Model Context Protocol</title><meta name="og:url" content="/quickstart/client"/><link rel="canonical" href="/quickstart/client"/><meta name="next-head-count" content="30"/><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css" integrity="sha384-Xi8rHCmBmhbuyyhbI88391ZKP2dmfnOl4rT9ZfRI7mLTdk1wblIUnrIq35nqwEvC" crossorigin="anonymous"/><link rel="preload" href="/mintlify-assets/_next/static/media/a34f9d1faa5f3315-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/mintlify-assets/_next/static/media/bb3ef058b751a6ad-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><script id="mode-toggle" data-nscript="beforeInteractive">
      try {
        if (localStorage.isDarkMode === 'true') {
          document.documentElement.classList.add('dark');
        } else if (localStorage.isDarkMode === 'false') {
          document.documentElement.classList.remove('dark');
        } else if ((true && !('isDarkMode' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches) || false) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      } catch (_) {}</script><link rel="preload" href="/mintlify-assets/_next/static/css/45c3eaaab0014fc5.css" as="style"/><link rel="stylesheet" href="/mintlify-assets/_next/static/css/45c3eaaab0014fc5.css" data-n-g=""/><link rel="preload" href="/mintlify-assets/_next/static/css/8c76fb7d3768dfe7.css" as="style"/><link rel="stylesheet" href="/mintlify-assets/_next/static/css/8c76fb7d3768dfe7.css" data-n-p=""/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/mintlify-assets/_next/static/chunks/polyfills-42372ed130431b0a.js"></script><script src="/mintlify-assets/_next/static/chunks/webpack-ccc766cf26487e8b.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/framework-822fcadcf2c4b2cf.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/main-62e52a310a4175a3.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/pages/_app-88fdc25309cbb42a.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/2edb282b-a83f7ffd007bccf0.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/e893f787-f6a1094a35763a0d.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/086d643d-6f7196a364073d16.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/9498-3d5f4dcd260f14f4.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/5094-367d16afbf96e822.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/9099-a4db4f2b3443e9b0.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/474-f29cd88767d95c5d.js" defer=""></script><script src="/mintlify-assets/_next/static/chunks/pages/_sites/%5Bsubdomain%5D/%5B%5B...slug%5D%5D-180209af373e276d.js" defer=""></script><script src="/mintlify-assets/_next/static/rTNlc3N1jjUuGX8TQWQnB/_buildManifest.js" defer=""></script><script src="/mintlify-assets/_next/static/rTNlc3N1jjUuGX8TQWQnB/_ssgManifest.js" defer=""></script><style id="__jsx-168234603">:root{--font-inter:'__Inter_a4e4e2', '__Inter_Fallback_a4e4e2';--font-jetbrains-mono:'__JetBrains_Mono_3bbdad', '__JetBrains_Mono_Fallback_3bbdad'}</style></head><div id="__next"><main class="jsx-168234603"><style>:root {
    --primary: 9 9 11;
    --primary-light: 250 250 250;
    --primary-dark: 9 9 11;
    --background-light: 255 255 255;
    --background-dark: 14 14 16;
    --gray-50: 243 243 243;
    --gray-100: 238 238 238;
    --gray-200: 222 222 222;
    --gray-300: 206 206 206;
    --gray-400: 158 158 158;
    --gray-500: 112 112 112;
    --gray-600: 80 80 80;
    --gray-700: 62 62 62;
    --gray-800: 37 37 37;
    --gray-900: 23 23 23;
    --gray-950: 10 10 10;
  }</style><style>
#feature-support-matrix-wrapper {
    overflow-x: auto;
}

#feature-support-matrix-wrapper table {
    min-width: 800px;
}
</style><span class="fixed inset-0 bg-background-light dark:bg-background-dark -z-10"></span><div class="relative antialiased text-gray-500 dark:text-gray-400"><div class="z-[45] hidden"></div><div class="flex"><div class="hidden lg:flex fixed flex-col left-0 top-0 bottom-0 w-[19rem]" id="sidebar"><div class="flex-1 overflow-y-auto px-7 py-6 bg-gray-950/5 dark:bg-white/5" id="sidebar-content"><div class="flex justify-between items-center"><div class="flex items-center gap-x-4"><a href="/"><span class="sr-only">Model Context Protocol<!-- --> home page</span><img class="nav-logo w-auto relative object-contain block dark:hidden px-1 h-6" src="https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg" alt="light logo"/><img class="nav-logo w-auto relative object-contain hidden dark:block px-1 h-6" src="https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg" alt="dark logo"/></a></div></div><button type="button" class="hidden lg:flex relative flex-1 pointer-events-auto rounded-xl w-full items-center text-sm leading-6 py-1.5 pl-3.5 pr-3 shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.1] dark:ring-1 dark:hover:brightness-[1.25] ring-1 ring-gray-400/20 hover:ring-gray-600/25 dark:ring-gray-600/30 dark:hover:ring-gray-500/30 focus:outline-primary justify-between truncate gap-2 min-w-[43px] mt-6 bg-white" id="search-bar-entry"><div class="flex items-center gap-3 min-w-[42px]"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-search min-w-4 flex-none text-gray-700 hover:text-gray-800 dark:text-gray-300 hover:dark:text-gray-200"><circle cx="11" cy="11" r="8"></circle><path d="m21 21-4.3-4.3"></path></svg><div class="truncate min-w-0">Search...</div></div></button><div class="-mx-3 text-sm" id="navigation-items"><div class="mt-8"><li class="list-none"><a href="https://github.com/modelcontextprotocol/python-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/python.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/python.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>Python SDK</span></a></li><li class="list-none"><a href="https://github.com/modelcontextprotocol/typescript-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/square-js.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/square-js.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>TypeScript SDK</span></a></li><li class="list-none"><a href="https://github.com/modelcontextprotocol/java-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/java.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/java.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>Java SDK</span></a></li><li class="list-none"><a href="https://github.com/modelcontextprotocol/kotlin-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/square-k.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/square-k.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>Kotlin SDK</span></a></li><li class="list-none"><a href="https://github.com/modelcontextprotocol/csharp-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/square-c.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/square-c.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>C# SDK</span></a></li><li class="list-none"><a href="https://github.com/modelcontextprotocol/swift-sdk" target="_blank" rel="noreferrer" class="link nav-anchor pl-4 group flex items-center lg:text-sm lg:leading-6 mb-3 gap-3.5 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300"><svg class="h-4 w-4 secondary-opacity group-hover:fill-primary-dark group-hover:bg-gray-900 dark:group-hover:bg-gray-300 bg-gray-400 dark:bg-gray-500" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/swift.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/swift.svg);mask-repeat:no-repeat;mask-position:center"></svg><span>Swift SDK</span></a></li></div><div class="mt-12 lg:mt-8"><div class="sidebar-group-header flex items-center gap-2.5 pl-4 mb-3.5 lg:mb-2.5 text-gray-900 dark:text-gray-200 font-medium"><h5 id="sidebar-title">Get Started</h5></div><ul id="sidebar-group"><li id="/introduction" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/introduction"><div class="flex-1 flex items-center space-x-2.5"><div class="">Introduction</div></div></a></li><li><div class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem"><div class="flex-1">Quickstart</div><svg width="8" height="24" viewBox="0 -9 3 24" class="transition-transform text-gray-400 overflow-visible group-hover:text-gray-600 dark:text-gray-600 dark:group-hover:text-gray-400 -mr-0.5 duration-75 rotate-90"><path d="M0 0L3 3L0 6" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div><ul><li id="/quickstart/server" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1.75rem" href="/quickstart/server"><div class="flex-1 flex items-center space-x-2.5"><div class="">For Server Developers</div></div></a></li><li id="/quickstart/client" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-primary dark:border-primary-light text-primary font-semibold dark:text-primary-light" style="padding-left:1.75rem" href="/quickstart/client"><div class="flex-1 flex items-center space-x-2.5"><div class="">For Client Developers</div></div></a></li><li id="/quickstart/user" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1.75rem" href="/quickstart/user"><div class="flex-1 flex items-center space-x-2.5"><div class="">For Claude Desktop Users</div></div></a></li></ul></li><li id="/examples" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/examples"><div class="flex-1 flex items-center space-x-2.5"><div class="">Example Servers</div></div></a></li><li id="/clients" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/clients"><div class="flex-1 flex items-center space-x-2.5"><div class="">Example Clients</div></div></a></li><li id="/faqs" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/faqs"><div class="flex-1 flex items-center space-x-2.5"><div class="">FAQs</div></div></a></li></ul></div><div class="mt-12 lg:mt-8"><div class="sidebar-group-header flex items-center gap-2.5 pl-4 mb-3.5 lg:mb-2.5 text-gray-900 dark:text-gray-200 font-medium"><h5 id="sidebar-title">Tutorials</h5></div><ul id="sidebar-group"><li id="/tutorials/building-mcp-with-llms" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/tutorials/building-mcp-with-llms"><div class="flex-1 flex items-center space-x-2.5"><div class="">Building MCP with LLMs</div></div></a></li><li id="/docs/tools/debugging" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/tools/debugging"><div class="flex-1 flex items-center space-x-2.5"><div class="">Debugging</div></div></a></li><li id="/docs/tools/inspector" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/tools/inspector"><div class="flex-1 flex items-center space-x-2.5"><div class="">Inspector</div></div></a></li></ul></div><div class="mt-12 lg:mt-8"><div class="sidebar-group-header flex items-center gap-2.5 pl-4 mb-3.5 lg:mb-2.5 text-gray-900 dark:text-gray-200 font-medium"><h5 id="sidebar-title">Concepts</h5></div><ul id="sidebar-group"><li id="/docs/concepts/architecture" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/architecture"><div class="flex-1 flex items-center space-x-2.5"><div class="">Core architecture</div></div></a></li><li id="/docs/concepts/resources" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/resources"><div class="flex-1 flex items-center space-x-2.5"><div class="">Resources</div></div></a></li><li id="/docs/concepts/prompts" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/prompts"><div class="flex-1 flex items-center space-x-2.5"><div class="">Prompts</div></div></a></li><li id="/docs/concepts/tools" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/tools"><div class="flex-1 flex items-center space-x-2.5"><div class="">Tools</div></div></a></li><li id="/docs/concepts/sampling" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/sampling"><div class="flex-1 flex items-center space-x-2.5"><div class="">Sampling</div></div></a></li><li id="/docs/concepts/roots" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/roots"><div class="flex-1 flex items-center space-x-2.5"><div class="">Roots</div></div></a></li><li id="/docs/concepts/transports" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/docs/concepts/transports"><div class="flex-1 flex items-center space-x-2.5"><div class="">Transports</div></div></a></li></ul></div><div class="mt-12 lg:mt-8"><div class="sidebar-group-header flex items-center gap-2.5 pl-4 mb-3.5 lg:mb-2.5 text-gray-900 dark:text-gray-200 font-medium"><h5 id="sidebar-title">Development</h5></div><ul id="sidebar-group"><li id="/development/updates" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/development/updates"><div class="flex-1 flex items-center space-x-2.5"><div class="">What&#x27;s New</div></div></a></li><li id="/development/roadmap" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/development/roadmap"><div class="flex-1 flex items-center space-x-2.5"><div class="">Roadmap</div></div></a></li><li id="/development/contributing" class="relative scroll-m-4 first:scroll-m-20"><a class="group mt-2 lg:mt-0 flex items-center pr-3 py-1.5 cursor-pointer focus:outline-primary dark:focus:outline-primary-light gap-x-3 lg:ml-4 border-l border-gray-950/5 dark:border-white/10 hover:border-gray-950/20 dark:hover:border-white/20 text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" style="padding-left:1rem" href="/development/contributing"><div class="flex-1 flex items-center space-x-2.5"><div class="">Contributing</div></div></a></li></ul></div></div></div></div><div class="block lg:hidden"><div id="navbar" class="z-30 fixed lg:sticky top-0 w-full"><div id="navbar-transition" class="absolute w-full h-full backdrop-blur flex-none transition-colors duration-500 border-b border-gray-500/5 dark:border-gray-300/[0.06] supports-backdrop-blur:bg-background-light/60 dark:bg-transparent"></div><div class="max-w-8xl mx-auto relative"><div class=""><div class="relative"><div class="flex items-center lg:px-12 h-16 min-w-0 mx-4 lg:mx-0"><div class="h-full relative flex-1 flex items-center gap-x-4 min-w-0 border-b border-gray-500/5 dark:border-gray-300/[0.06]"><div class="flex-1 flex items-center gap-x-4"><a href="/"><span class="sr-only">Model Context Protocol<!-- --> home page</span><img class="nav-logo w-auto h-7 relative object-contain block dark:hidden" src="https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg" alt="light logo"/><img class="nav-logo w-auto h-7 relative object-contain hidden dark:block" src="https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg" alt="dark logo"/></a><div class="flex items-center gap-x-2"></div></div><button type="button" class="hidden lg:flex relative flex-1 pointer-events-auto rounded-xl w-full items-center text-sm leading-6 py-1.5 pl-3.5 pr-3 shadow-sm text-gray-400 dark:text-white/50 bg-background-light dark:bg-background-dark dark:brightness-[1.1] dark:ring-1 dark:hover:brightness-[1.25] ring-1 ring-gray-400/20 hover:ring-gray-600/25 dark:ring-gray-600/30 dark:hover:ring-gray-500/30 focus:outline-primary justify-between truncate gap-2 min-w-[43px]" id="search-bar-entry"><div class="flex items-center gap-3 min-w-[42px]"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-search min-w-4 flex-none text-gray-700 hover:text-gray-800 dark:text-gray-300 hover:dark:text-gray-200"><circle cx="11" cy="11" r="8"></circle><path d="m21 21-4.3-4.3"></path></svg><div class="truncate min-w-0">Search...</div></div></button><div class="flex-1 relative hidden lg:flex items-center ml-auto justify-end space-x-4"><nav class="text-sm"><ul class="flex space-x-6 items-center"><li class="block lg:hidden"><a class="whitespace-nowrap font-medium text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300" href="https://github.com/modelcontextprotocol">GitHub</a></li><li class="whitespace-nowrap hidden lg:flex" id="topbar-cta-button"><a target="_blank" class="group py-1.5 relative inline-flex items-center text-sm font-medium" href="https://github.com/modelcontextprotocol"><div class="space-x-2.5 flex items-center text-gray-950/90 dark:text-white/90 hover:text-gray-950 dark:hover:text-white"><span class="z-10">GitHub</span><svg width="3" height="24" viewBox="0 -9 3 24" class="h-5 rotate-0 overflow-visible text-current"><path d="M0 0L3 3L0 6" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a></li></ul></nav><div class="flex items-center"><button class="group p-2 flex items-center justify-center" aria-label="Toggle dark mode"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" stroke="currentColor" xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 block text-gray-400 dark:hidden group-hover:text-gray-600"><g clip-path="url(#clip0_2880_7340)"><path d="M8 1.11133V2.00022" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12.8711 3.12891L12.2427 3.75735" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M14.8889 8H14" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12.8711 12.8711L12.2427 12.2427" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M8 14.8889V14" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M3.12891 12.8711L3.75735 12.2427" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M1.11133 8H2.00022" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M3.12891 3.12891L3.75735 3.75735" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M8.00043 11.7782C10.0868 11.7782 11.7782 10.0868 11.7782 8.00043C11.7782 5.91402 10.0868 4.22266 8.00043 4.22266C5.91402 4.22266 4.22266 5.91402 4.22266 8.00043C4.22266 10.0868 5.91402 11.7782 8.00043 11.7782Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></g><defs><clipPath id="clip0_2880_7340"><rect width="16" height="16" fill="white"></rect></clipPath></defs></svg><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-moon h-4 w-4 hidden dark:block text-gray-500 dark:group-hover:text-gray-300"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path></svg></button></div></div><div class="flex lg:hidden items-center gap-2"><button type="button" class="text-gray-500 w-8 h-8 flex items-center justify-center hover:text-gray-600 dark:text-gray-400 dark:hover:text-gray-300" id="search-bar-entry-mobile"><span class="sr-only">Search...</span><svg class="h-4 w-4 bg-gray-500 dark:bg-gray-400 hover:bg-gray-600 dark:hover:bg-gray-300" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/magnifying-glass.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/magnifying-glass.svg);mask-repeat:no-repeat;mask-position:center"></svg></button><button aria-label="More actions" class="h-7 w-5 flex items-center justify-end"><svg class="h-4 w-4 bg-gray-500 dark:bg-gray-400 hover:bg-gray-600 dark:hover:bg-gray-300" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/ellipsis-vertical.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/solid/ellipsis-vertical.svg);mask-repeat:no-repeat;mask-position:center"></svg></button></div></div></div><button type="button" class="flex items-center h-14 py-4 px-5 lg:hidden"><div class="text-gray-500 hover:text-gray-600 dark:text-gray-400 dark:hover:text-gray-300"><span class="sr-only">Navigation</span><svg class="h-4" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z"></path></svg></div><div class="ml-4 flex text-sm leading-6 whitespace-nowrap min-w-0 space-x-3"><div class="flex items-center space-x-3"><span>Quickstart</span><svg width="3" height="24" viewBox="0 -9 3 24" class="h-5 rotate-0 overflow-visible fill-gray-400"><path d="M0 0L3 3L0 6" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div><div class="font-semibold text-gray-900 truncate dark:text-gray-200">For Client Developers</div></div></button></div><div class="hidden lg:flex px-12 h-12"><div class="nav-tabs h-full flex text-sm space-x-6"><a class="link nav-tabs-item group relative h-full flex items-center hover:text-gray-800 dark:hover:text-gray-300 text-gray-800 dark:text-gray-200 font-semibold" href="/introduction">User Guide<div class="absolute bottom-0 h-[1.5px] w-full bg-primary dark:bg-primary-light"></div></a><a class="link nav-tabs-item group relative h-full flex items-center font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300" href="/sdk/java/mcp-overview">SDKs<div class="absolute bottom-0 h-[1.5px] w-full group-hover:bg-gray-200 dark:group-hover:bg-gray-700"></div></a><a class="link nav-tabs-item group relative h-full flex items-center font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300" href="/specification/2025-03-26">Specification<div class="absolute bottom-0 h-[1.5px] w-full group-hover:bg-gray-200 dark:group-hover:bg-gray-700"></div></a></div></div></div></div></div></div><div class="relative w-full lg:ml-[19rem] flex gap-x-8 pt-40 px-4 lg:pt-10 lg:pl-16 lg:pr-10 lg:mt-12"><div id="navbar-transition-willow" class="z-20 hidden lg:flex fixed top-0 left-[19rem] h-12 px-14 right-0 bottom-0 backdrop-blur flex-none transition-colors duration-500 border-b border-gray-200/40 dark:border-white/[0.07] space-x-6 supports-backdrop-blur:bg-background-light/60 dark:bg-transparent"><div class="flex-1"><div class="nav-tabs h-full flex text-sm space-x-6"><a class="link nav-tabs-item group relative h-full flex items-center hover:text-gray-800 dark:hover:text-gray-300 text-gray-800 dark:text-gray-200 font-semibold" href="/introduction">User Guide<div class="absolute bottom-0 h-[1.5px] w-full bg-primary dark:bg-primary-light"></div></a><a class="link nav-tabs-item group relative h-full flex items-center font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300" href="/sdk/java/mcp-overview">SDKs<div class="absolute bottom-0 h-[1.5px] w-full group-hover:bg-gray-200 dark:group-hover:bg-gray-700"></div></a><a class="link nav-tabs-item group relative h-full flex items-center font-medium text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-300" href="/specification/2025-03-26">Specification<div class="absolute bottom-0 h-[1.5px] w-full group-hover:bg-gray-200 dark:group-hover:bg-gray-700"></div></a></div></div><div class="flex items-center text-sm space-x-6 list-none"><li class="whitespace-nowrap hidden lg:flex" id="topbar-cta-button"><a target="_blank" class="group py-1.5 relative inline-flex items-center text-sm font-medium" href="https://github.com/modelcontextprotocol"><div class="space-x-2.5 flex items-center text-gray-950/90 dark:text-white/90 hover:text-gray-950 dark:hover:text-white"><span class="z-10">GitHub</span><svg width="3" height="24" viewBox="0 -9 3 24" class="h-5 rotate-0 overflow-visible text-current"><path d="M0 0L3 3L0 6" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a></li></div><div class="flex items-center"><button class="group p-2 flex items-center justify-center" aria-label="Toggle dark mode"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" stroke="currentColor" xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 block text-gray-400 dark:hidden group-hover:text-gray-600"><g clip-path="url(#clip0_2880_7340)"><path d="M8 1.11133V2.00022" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12.8711 3.12891L12.2427 3.75735" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M14.8889 8H14" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M12.8711 12.8711L12.2427 12.2427" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M8 14.8889V14" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M3.12891 12.8711L3.75735 12.2427" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M1.11133 8H2.00022" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M3.12891 3.12891L3.75735 3.75735" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M8.00043 11.7782C10.0868 11.7782 11.7782 10.0868 11.7782 8.00043C11.7782 5.91402 10.0868 4.22266 8.00043 4.22266C5.91402 4.22266 4.22266 5.91402 4.22266 8.00043C4.22266 10.0868 5.91402 11.7782 8.00043 11.7782Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></g><defs><clipPath id="clip0_2880_7340"><rect width="16" height="16" fill="white"></rect></clipPath></defs></svg><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-moon h-4 w-4 hidden dark:block text-gray-500 dark:group-hover:text-gray-300"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path></svg></button></div></div><div class="flex flex-col box-border w-full relative grow mx-auto max-w-xl 2xl:max-w-2xl xl:w-[calc(100%-28rem)]" id="content-area"><header id="header" class="relative"><div class="mt-0.5 space-y-2.5"><div class="eyebrow h-5 text-primary dark:text-primary-light text-sm font-semibold">Quickstart</div><div class="flex items-center relative gap-2"><h1 id="page-title" class="inline-block text-2xl sm:text-3xl font-bold text-gray-900 tracking-tight dark:text-gray-200">For Client Developers</h1><div id="page-context-menu" class="absolute right-0 flex items-center justify-center -top-2"><button id="page-context-menu-button" class="rounded-l-xl px-3 text-gray-700 dark:text-gray-300 py-1.5 border border-gray-200 dark:border-white/[0.07] bg-background-light dark:bg-background-dark hover:bg-gray-600/5 dark:hover:bg-gray-200/5 border-r-0"><div class="flex items-center gap-2 text-sm text-center font-medium"><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4"><path d="M14.25 5.25H7.25C6.14543 5.25 5.25 6.14543 5.25 7.25V14.25C5.25 15.3546 6.14543 16.25 7.25 16.25H14.25C15.3546 16.25 16.25 15.3546 16.25 14.25V7.25C16.25 6.14543 15.3546 5.25 14.25 5.25Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M2.80103 11.998L1.77203 5.07397C1.61003 3.98097 2.36403 2.96397 3.45603 2.80197L10.38 1.77297C11.313 1.63397 12.19 2.16297 12.528 3.00097" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg><span>Copy page</span></div></button><button class="group bg-background-light dark:bg-background-dark disabled:pointer-events-none [&amp;&gt;span]:line-clamp-1 overflow-hidden group outline-none flex items-center py-0.5 gap-1 text-sm text-gray-950/50 dark:text-white/50 group-hover:text-gray-950/70 dark:group-hover:text-white/70 rounded-none rounded-r-xl border px-3 border-gray-200 aspect-square dark:border-white/[0.07] bg-background-light dark:bg-background-dark hover:bg-gray-600/5 dark:hover:bg-gray-200/5" type="button" id="radix-:R2sjakql6:" aria-haspopup="menu" aria-expanded="false" data-state="closed"><svg width="8" height="24" viewBox="0 -9 3 24" class="transition-transform text-gray-400 overflow-visible group-hover:text-gray-600 dark:text-gray-600 dark:group-hover:text-gray-400 rotate-90"><path d="M0 0L3 3L0 6" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></button></div></div></div><div class="mt-2 text-lg prose prose-gray dark:prose-invert"><p>Get started building your own client that can integrate with all MCP servers.</p></div></header><div class="flex flex-col gap-8"></div><div class="mdx-content relative mt-8 prose prose-gray dark:prose-invert"><p>In this tutorial, you’ll learn how to build a LLM-powered chatbot client that connects to MCP servers. It helps to have gone through the <a class="link" href="/quickstart/server">Server quickstart</a> that guides you through the basic of building your first server.</p>
<div class="tabs tabs tab-container" id="python"><ul class="not-prose mb-6 pb-[1px] flex-none min-w-full overflow-auto border-b border-gray-200 gap-x-6 flex dark:border-gray-200/10" data-component-part="tabs-list"><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-primary dark:text-primary-light border-current" data-component-part="tab-button" data-active="true">Python</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Node</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Java</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">Kotlin</button></li><li class="cursor-pointer"><button class="flex text-sm leading-6 font-semibold whitespace-nowrap pt-3 pb-2.5 -mb-px max-w-max border-b text-gray-900 border-transparent hover:border-gray-300 dark:text-gray-200 dark:hover:border-gray-700" data-component-part="tab-button" data-active="false">C#</button></li></ul><div class="prose dark:prose-dark overflow-x-auto" data-component-part="tab-content"><p><a href="https://github.com/modelcontextprotocol/quickstart-resources/tree/main/mcp-client-python" target="_blank" rel="noreferrer" class="link">You can find the complete code for this tutorial here.</a></p><h2 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements"><div class="absolute"><a href="#system-requirements" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System Requirements</span></h2><p>Before starting, ensure your system meets these requirements:</p><ul>
<li>Mac or Windows computer</li>
<li>Latest Python version installed</li>
<li>Latest version of <code>uv</code> installed</li>
</ul><h2 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-your-environment"><div class="absolute"><a href="#setting-up-your-environment" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting Up Your Environment</span></h2><p>First, create a new Python project with <code>uv</code>:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Create project directory</span></span>
<span class="">uv init mcp-client</span>
<span class=""><span class="token builtin class-name">cd</span> mcp-client</span>
<!-- -->
<span class=""><span class="token comment"># Create virtual environment</span></span>
<span class="">uv venv</span>
<!-- -->
<span class=""><span class="token comment"># Activate virtual environment</span></span>
<span class=""><span class="token comment"># On Windows:</span></span>
<span class="">.venv<span class="token punctuation">\</span>Scripts<span class="token punctuation">\</span>activate</span>
<span class=""><span class="token comment"># On Unix or MacOS:</span></span>
<span class=""><span class="token builtin class-name">source</span> .venv/bin/activate</span>
<!-- -->
<span class=""><span class="token comment"># Install required packages</span></span>
<span class="">uv <span class="token function">add</span> mcp anthropic python-dotenv</span>
<!-- -->
<span class=""><span class="token comment"># Remove boilerplate files</span></span>
<span class=""><span class="token comment"># On Windows:</span></span>
<span class="">del main.py</span>
<span class=""><span class="token comment"># On Unix or MacOS:</span></span>
<span class=""><span class="token function">rm</span> main.py</span>
<!-- -->
<span class=""><span class="token comment"># Create our main file</span></span>
<span class=""><span class="token function">touch</span> client.py</span>
</code></pre></div></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-your-api-key"><div class="absolute"><a href="#setting-up-your-api-key" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting Up Your API Key</span></h2><p>You’ll need an Anthropic API key from the <a href="https://console.anthropic.com/settings/keys" target="_blank" rel="noreferrer" class="link">Anthropic Console</a>.</p><p>Create a <code>.env</code> file to store it:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Create .env file</span></span>
<span class=""><span class="token function">touch</span> .env</span>
</code></pre></div></div></div><p>Add your key to the <code>.env</code> file:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token assign-left variable">ANTHROPIC_API_KEY</span><span class="token operator">=</span><span class="token operator">&lt;</span>your key here<span class="token operator">&gt;</span></span>
</code></pre></div></div></div><p>Add <code>.env</code> to your <code>.gitignore</code>:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token builtin class-name">echo</span> <span class="token string">&quot;.env&quot;</span> <span class="token operator">&gt;&gt;</span> .gitignore</span>
</code></pre></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-amber-500/20 bg-amber-50/50 dark:border-amber-500/30 dark:bg-amber-500/10" data-callout-type="warning"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg class="flex-none w-5 h-5 text-amber-400 dark:text-amber-300/80" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" aria-label="Warning"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-amber-900 dark:text-amber-200" data-component-part="callout-content"><p>Make sure you keep your <code>ANTHROPIC_API_KEY</code> secure!</p></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="creating-the-client"><div class="absolute"><a href="#creating-the-client" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Creating the Client</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="basic-client-structure"><div class="absolute"><a href="#basic-client-structure" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Basic Client Structure</span></h3><p>First, let’s set up our imports and create the basic client class:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">import</span> asyncio</span>
<span class=""><span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional</span>
<span class=""><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> AsyncExitStack</span>
<!-- -->
<span class=""><span class="token keyword">from</span> mcp <span class="token keyword">import</span> ClientSession<span class="token punctuation">,</span> StdioServerParameters</span>
<span class=""><span class="token keyword">from</span> mcp<span class="token punctuation">.</span>client<span class="token punctuation">.</span>stdio <span class="token keyword">import</span> stdio_client</span>
<!-- -->
<span class=""><span class="token keyword">from</span> anthropic <span class="token keyword">import</span> Anthropic</span>
<span class=""><span class="token keyword">from</span> dotenv <span class="token keyword">import</span> load_dotenv</span>
<!-- -->
<span class="">load_dotenv<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># load environment variables from .env</span></span>
<!-- -->
<span class=""><span class="token keyword">class</span> <span class="token class-name">MCPClient</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token comment"># Initialize session and client objects</span></span>
<span class="">        self<span class="token punctuation">.</span>session<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>ClientSession<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="">        self<span class="token punctuation">.</span>exit_stack <span class="token operator">=</span> AsyncExitStack<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">        self<span class="token punctuation">.</span>anthropic <span class="token operator">=</span> Anthropic<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token comment"># methods will go here</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="server-connection-management"><div class="absolute"><a href="#server-connection-management" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Server Connection Management</span></h3><p>Next, we’ll implement the method to connect to an MCP server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">connect_to_server</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> server_script_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;Connect to an MCP server</span>
<!-- -->
<span class="">    Args<span class="token punctuation">:</span></span>
<span class="">        server_script_path<span class="token punctuation">:</span> Path to the server script <span class="token punctuation">(</span><span class="token punctuation">.</span>py <span class="token keyword">or</span> <span class="token punctuation">.</span>js<span class="token punctuation">)</span></span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;</span>
<span class="">    is_python <span class="token operator">=</span> server_script_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#x27;.py&#x27;</span><span class="token punctuation">)</span></span>
<span class="">    is_js <span class="token operator">=</span> server_script_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#x27;.js&#x27;</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token punctuation">(</span>is_python <span class="token keyword">or</span> is_js<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&quot;Server script must be a .py or .js file&quot;</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    command <span class="token operator">=</span> <span class="token string">&quot;python&quot;</span> <span class="token keyword">if</span> is_python <span class="token keyword">else</span> <span class="token string">&quot;node&quot;</span></span>
<span class="">    server_params <span class="token operator">=</span> StdioServerParameters<span class="token punctuation">(</span></span>
<span class="">        command<span class="token operator">=</span>command<span class="token punctuation">,</span></span>
<span class="">        args<span class="token operator">=</span><span class="token punctuation">[</span>server_script_path<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">        env<span class="token operator">=</span><span class="token boolean">None</span></span>
<span class="">    <span class="token punctuation">)</span></span>
<!-- -->
<span class="">    stdio_transport <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>exit_stack<span class="token punctuation">.</span>enter_async_context<span class="token punctuation">(</span>stdio_client<span class="token punctuation">(</span>server_params<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">    self<span class="token punctuation">.</span>stdio<span class="token punctuation">,</span> self<span class="token punctuation">.</span>write <span class="token operator">=</span> stdio_transport</span>
<span class="">    self<span class="token punctuation">.</span>session <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>exit_stack<span class="token punctuation">.</span>enter_async_context<span class="token punctuation">(</span>ClientSession<span class="token punctuation">(</span>self<span class="token punctuation">.</span>stdio<span class="token punctuation">,</span> self<span class="token punctuation">.</span>write<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">await</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>initialize<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token comment"># List available tools</span></span>
<span class="">    response <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>list_tools<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    tools <span class="token operator">=</span> response<span class="token punctuation">.</span>tools</span>
<span class="">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\nConnected to server with tools:&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>tool<span class="token punctuation">.</span>name <span class="token keyword">for</span> tool <span class="token keyword">in</span> tools<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="query-processing-logic"><div class="absolute"><a href="#query-processing-logic" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Query Processing Logic</span></h3><p>Now let’s add the core functionality for processing queries and handling tool calls:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">process_query</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> query<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token triple-quoted-string string">&quot;&quot;&quot;Process a query using Claude and available tools&quot;&quot;&quot;</span></span>
<span class="">    messages <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="">        <span class="token punctuation">{</span></span>
<span class="">            <span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> query</span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">]</span></span>
<!-- -->
<span class="">    response <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>list_tools<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    available_tools <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span></span>
<span class="">        <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> tool<span class="token punctuation">.</span>name<span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;description&quot;</span><span class="token punctuation">:</span> tool<span class="token punctuation">.</span>description<span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;input_schema&quot;</span><span class="token punctuation">:</span> tool<span class="token punctuation">.</span>inputSchema</span>
<span class="">    <span class="token punctuation">}</span> <span class="token keyword">for</span> tool <span class="token keyword">in</span> response<span class="token punctuation">.</span>tools<span class="token punctuation">]</span></span>
<!-- -->
<span class="">    <span class="token comment"># Initial Claude API call</span></span>
<span class="">    response <span class="token operator">=</span> self<span class="token punctuation">.</span>anthropic<span class="token punctuation">.</span>messages<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="">        model<span class="token operator">=</span><span class="token string">&quot;claude-3-5-sonnet-20241022&quot;</span><span class="token punctuation">,</span></span>
<span class="">        max_tokens<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="">        messages<span class="token operator">=</span>messages<span class="token punctuation">,</span></span>
<span class="">        tools<span class="token operator">=</span>available_tools</span>
<span class="">    <span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token comment"># Process response and handle tool calls</span></span>
<span class="">    final_text <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<!-- -->
<span class="">    assistant_message_content <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="">    <span class="token keyword">for</span> content <span class="token keyword">in</span> response<span class="token punctuation">.</span>content<span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">if</span> content<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> <span class="token string">&#x27;text&#x27;</span><span class="token punctuation">:</span></span>
<span class="">            final_text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>content<span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<span class="">            assistant_message_content<span class="token punctuation">.</span>append<span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="">        <span class="token keyword">elif</span> content<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> <span class="token string">&#x27;tool_use&#x27;</span><span class="token punctuation">:</span></span>
<span class="">            tool_name <span class="token operator">=</span> content<span class="token punctuation">.</span>name</span>
<span class="">            tool_args <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token builtin">input</span></span>
<!-- -->
<span class="">            <span class="token comment"># Execute tool call</span></span>
<span class="">            result <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>call_tool<span class="token punctuation">(</span>tool_name<span class="token punctuation">,</span> tool_args<span class="token punctuation">)</span></span>
<span class="">            final_text<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[Calling tool </span><span class="token interpolation"><span class="token punctuation">{</span>tool_name<span class="token punctuation">}</span></span><span class="token string"> with args </span><span class="token interpolation"><span class="token punctuation">{</span>tool_args<span class="token punctuation">}</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">            assistant_message_content<span class="token punctuation">.</span>append<span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="">            messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">                <span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;assistant&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> assistant_message_content</span>
<span class="">            <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="">            messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">                <span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="">                    <span class="token punctuation">{</span></span>
<span class="">                        <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;tool_result&quot;</span><span class="token punctuation">,</span></span>
<span class="">                        <span class="token string">&quot;tool_use_id&quot;</span><span class="token punctuation">:</span> content<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">,</span></span>
<span class="">                        <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> result<span class="token punctuation">.</span>content</span>
<span class="">                    <span class="token punctuation">}</span></span>
<span class="">                <span class="token punctuation">]</span></span>
<span class="">            <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">            <span class="token comment"># Get next response from Claude</span></span>
<span class="">            response <span class="token operator">=</span> self<span class="token punctuation">.</span>anthropic<span class="token punctuation">.</span>messages<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="">                model<span class="token operator">=</span><span class="token string">&quot;claude-3-5-sonnet-20241022&quot;</span><span class="token punctuation">,</span></span>
<span class="">                max_tokens<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="">                messages<span class="token operator">=</span>messages<span class="token punctuation">,</span></span>
<span class="">                tools<span class="token operator">=</span>available_tools</span>
<span class="">            <span class="token punctuation">)</span></span>
<!-- -->
<span class="">            final_text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">return</span> <span class="token string">&quot;\n&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>final_text<span class="token punctuation">)</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="interactive-chat-interface"><div class="absolute"><a href="#interactive-chat-interface" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Interactive Chat Interface</span></h3><p>Now we’ll add the chat loop and cleanup functionality:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">chat_loop</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token triple-quoted-string string">&quot;&quot;&quot;Run an interactive chat loop&quot;&quot;&quot;</span></span>
<span class="">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\nMCP Client Started!&quot;</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Type your queries or &#x27;quit&#x27; to exit.&quot;</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="">            query <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\nQuery: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">            <span class="token keyword">if</span> query<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#x27;quit&#x27;</span><span class="token punctuation">:</span></span>
<span class="">                <span class="token keyword">break</span></span>
<!-- -->
<span class="">            response <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>process_query<span class="token punctuation">(</span>query<span class="token punctuation">)</span></span>
<span class="">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\n&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">)</span></span>
<!-- -->
<span class="">        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;\nError: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<!-- -->
<span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">cleanup</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token triple-quoted-string string">&quot;&quot;&quot;Clean up resources&quot;&quot;&quot;</span></span>
<span class="">    <span class="token keyword">await</span> self<span class="token punctuation">.</span>exit_stack<span class="token punctuation">.</span>aclose<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="main-entry-point"><div class="absolute"><a href="#main-entry-point" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Main Entry Point</span></h3><p>Finally, we’ll add the main execution logic:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Usage: python client.py &lt;path_to_server_script&gt;&quot;</span><span class="token punctuation">)</span></span>
<span class="">        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    client <span class="token operator">=</span> MCPClient<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">await</span> client<span class="token punctuation">.</span>connect_to_server<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token keyword">await</span> client<span class="token punctuation">.</span>chat_loop<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">await</span> client<span class="token punctuation">.</span>cleanup<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<!-- -->
<span class=""><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token keyword">import</span> sys</span>
<span class="">    asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
</code></pre></div></div></div><p>You can find the complete <code>client.py</code> file <a href="https://gist.github.com/zckly/f3f28ea731e096e53b39b47bf0a2d4b1" target="_blank" rel="noreferrer" class="link">here.</a></p><h2 class="flex whitespace-pre-wrap group font-semibold" id="key-components-explained"><div class="absolute"><a href="#key-components-explained" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Key Components Explained</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="1-client-initialization"><div class="absolute"><a href="#1-client-initialization" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">1. Client Initialization</span></h3><ul>
<li>The <code>MCPClient</code> class initializes with session management and API clients</li>
<li>Uses <code>AsyncExitStack</code> for proper resource management</li>
<li>Configures the Anthropic client for Claude interactions</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="2-server-connection"><div class="absolute"><a href="#2-server-connection" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">2. Server Connection</span></h3><ul>
<li>Supports both Python and Node.js servers</li>
<li>Validates server script type</li>
<li>Sets up proper communication channels</li>
<li>Initializes the session and lists available tools</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="3-query-processing"><div class="absolute"><a href="#3-query-processing" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">3. Query Processing</span></h3><ul>
<li>Maintains conversation context</li>
<li>Handles Claude’s responses and tool calls</li>
<li>Manages the message flow between Claude and tools</li>
<li>Combines results into a coherent response</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="4-interactive-interface"><div class="absolute"><a href="#4-interactive-interface" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">4. Interactive Interface</span></h3><ul>
<li>Provides a simple command-line interface</li>
<li>Handles user input and displays responses</li>
<li>Includes basic error handling</li>
<li>Allows graceful exit</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="5-resource-management"><div class="absolute"><a href="#5-resource-management" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">5. Resource Management</span></h3><ul>
<li>Proper cleanup of resources</li>
<li>Error handling for connection issues</li>
<li>Graceful shutdown procedures</li>
</ul><h2 class="flex whitespace-pre-wrap group font-semibold" id="common-customization-points"><div class="absolute"><a href="#common-customization-points" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Common Customization Points</span></h2><ol>
<li>
<p><strong>Tool Handling</strong></p>
<ul>
<li>Modify <code>process_query()</code> to handle specific tool types</li>
<li>Add custom error handling for tool calls</li>
<li>Implement tool-specific response formatting</li>
</ul>
</li>
<li>
<p><strong>Response Processing</strong></p>
<ul>
<li>Customize how tool results are formatted</li>
<li>Add response filtering or transformation</li>
<li>Implement custom logging</li>
</ul>
</li>
<li>
<p><strong>User Interface</strong></p>
<ul>
<li>Add a GUI or web interface</li>
<li>Implement rich console output</li>
<li>Add command history or auto-completion</li>
</ul>
</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="running-the-client"><div class="absolute"><a href="#running-the-client" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Running the Client</span></h2><p>To run your client with any MCP server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">uv run client.py path/to/server.py <span class="token comment"># python server</span></span>
<span class="">uv run client.py path/to/build/index.js <span class="token comment"># node server</span></span>
</code></pre></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: <code>python client.py .../quickstart-resources/weather-server-python/weather.py</code></p></div></div><p>The client will:</p><ol>
<li>Connect to the specified server</li>
<li>List available tools</li>
<li>Start an interactive chat session where you can:<!-- -->
<ul>
<li>Enter queries</li>
<li>See tool executions</li>
<li>Get responses from Claude</li>
</ul>
</li>
</ol><p>Here’s an example of what it should look like if connected to the weather server from the server quickstart:</p><div><div data-name="frame" class="frame p-2 not-prose relative bg-gray-50/50 rounded-2xl overflow-hidden dark:bg-gray-800/25"><div style="background-position:10px 10px" class="absolute inset-0 bg-grid-neutral-200/20 [mask-image:linear-gradient(0deg,#fff,rgba(255,255,255,0.6))] dark:bg-grid-white/5 dark:[mask-image:linear-gradient(0deg,rgba(255,255,255,0.1),rgba(255,255,255,0.5))]"></div><div class="relative rounded-xl overflow-hidden flex justify-center"></div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-2xl dark:border-white/5"></div></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="how-it-works"><div class="absolute"><a href="#how-it-works" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">How It Works</span></h2><p>When you submit a query:</p><ol>
<li>The client gets the list of available tools from the server</li>
<li>Your query is sent to Claude along with tool descriptions</li>
<li>Claude decides which tools (if any) to use</li>
<li>The client executes any requested tool calls through the server</li>
<li>Results are sent back to Claude</li>
<li>Claude provides a natural language response</li>
<li>The response is displayed to you</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="best-practices"><div class="absolute"><a href="#best-practices" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Best practices</span></h2><ol>
<li>
<p><strong>Error Handling</strong></p>
<ul>
<li>Always wrap tool calls in try-catch blocks</li>
<li>Provide meaningful error messages</li>
<li>Gracefully handle connection issues</li>
</ul>
</li>
<li>
<p><strong>Resource Management</strong></p>
<ul>
<li>Use <code>AsyncExitStack</code> for proper cleanup</li>
<li>Close connections when done</li>
<li>Handle server disconnections</li>
</ul>
</li>
<li>
<p><strong>Security</strong></p>
<ul>
<li>Store API keys securely in <code>.env</code></li>
<li>Validate server responses</li>
<li>Be cautious with tool permissions</li>
</ul>
</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="troubleshooting"><div class="absolute"><a href="#troubleshooting" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Troubleshooting</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="server-path-issues"><div class="absolute"><a href="#server-path-issues" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Server Path Issues</span></h3><ul>
<li>Double-check the path to your server script is correct</li>
<li>Use the absolute path if the relative path isn’t working</li>
<li>For Windows users, make sure to use forward slashes (/) or escaped backslashes (\) in the path</li>
<li>Verify the server file has the correct extension (.py for Python or .js for Node.js)</li>
</ul><p>Example of correct path usage:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Relative path</span></span>
<span class="">uv run client.py ./server/weather.py</span>
<!-- -->
<span class=""><span class="token comment"># Absolute path</span></span>
<span class="">uv run client.py /Users/username/projects/mcp-server/weather.py</span>
<!-- -->
<span class=""><span class="token comment"># Windows path (either format works)</span></span>
<span class="">uv run client.py C:/projects/mcp-server/weather.py</span>
<span class="">uv run client.py C:<span class="token punctuation">\</span><span class="token punctuation">\</span>projects<span class="token punctuation">\</span><span class="token punctuation">\</span>mcp-server<span class="token punctuation">\</span><span class="token punctuation">\</span>weather.py</span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="response-timing"><div class="absolute"><a href="#response-timing" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Response Timing</span></h3><ul>
<li>The first response might take up to 30 seconds to return</li>
<li>This is normal and happens while:<!-- -->
<ul>
<li>The server initializes</li>
<li>Claude processes the query</li>
<li>Tools are being executed</li>
</ul>
</li>
<li>Subsequent responses are typically faster</li>
<li>Don’t interrupt the process during this initial waiting period</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="common-error-messages"><div class="absolute"><a href="#common-error-messages" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Common Error Messages</span></h3><p>If you see:</p><ul>
<li><code>FileNotFoundError</code>: Check your server path</li>
<li><code>Connection refused</code>: Ensure the server is running and the path is correct</li>
<li><code>Tool execution failed</code>: Verify the tool’s required environment variables are set</li>
<li><code>Timeout error</code>: Consider increasing the timeout in your client configuration</li>
</ul></div><div class="hidden"><div><p><a href="https://github.com/modelcontextprotocol/quickstart-resources/tree/main/mcp-client-python" target="_blank" rel="noreferrer" class="link">You can find the complete code for this tutorial here.</a></p><h2 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements"><div class="absolute"><a href="#system-requirements" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System Requirements</span></h2><p>Before starting, ensure your system meets these requirements:</p><ul>
<li>Mac or Windows computer</li>
<li>Latest Python version installed</li>
<li>Latest version of <code>uv</code> installed</li>
</ul><h2 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-your-environment"><div class="absolute"><a href="#setting-up-your-environment" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting Up Your Environment</span></h2><p>First, create a new Python project with <code>uv</code>:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Create project directory</span></span>
<span class="">uv init mcp-client</span>
<span class=""><span class="token builtin class-name">cd</span> mcp-client</span>
<!-- -->
<span class=""><span class="token comment"># Create virtual environment</span></span>
<span class="">uv venv</span>
<!-- -->
<span class=""><span class="token comment"># Activate virtual environment</span></span>
<span class=""><span class="token comment"># On Windows:</span></span>
<span class="">.venv<span class="token punctuation">\</span>Scripts<span class="token punctuation">\</span>activate</span>
<span class=""><span class="token comment"># On Unix or MacOS:</span></span>
<span class=""><span class="token builtin class-name">source</span> .venv/bin/activate</span>
<!-- -->
<span class=""><span class="token comment"># Install required packages</span></span>
<span class="">uv <span class="token function">add</span> mcp anthropic python-dotenv</span>
<!-- -->
<span class=""><span class="token comment"># Remove boilerplate files</span></span>
<span class=""><span class="token comment"># On Windows:</span></span>
<span class="">del main.py</span>
<span class=""><span class="token comment"># On Unix or MacOS:</span></span>
<span class=""><span class="token function">rm</span> main.py</span>
<!-- -->
<span class=""><span class="token comment"># Create our main file</span></span>
<span class=""><span class="token function">touch</span> client.py</span>
</code></pre></div></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-your-api-key"><div class="absolute"><a href="#setting-up-your-api-key" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting Up Your API Key</span></h2><p>You’ll need an Anthropic API key from the <a href="https://console.anthropic.com/settings/keys" target="_blank" rel="noreferrer" class="link">Anthropic Console</a>.</p><p>Create a <code>.env</code> file to store it:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Create .env file</span></span>
<span class=""><span class="token function">touch</span> .env</span>
</code></pre></div></div></div><p>Add your key to the <code>.env</code> file:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token assign-left variable">ANTHROPIC_API_KEY</span><span class="token operator">=</span><span class="token operator">&lt;</span>your key here<span class="token operator">&gt;</span></span>
</code></pre></div></div></div><p>Add <code>.env</code> to your <code>.gitignore</code>:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token builtin class-name">echo</span> <span class="token string">&quot;.env&quot;</span> <span class="token operator">&gt;&gt;</span> .gitignore</span>
</code></pre></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-amber-500/20 bg-amber-50/50 dark:border-amber-500/30 dark:bg-amber-500/10" data-callout-type="warning"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg class="flex-none w-5 h-5 text-amber-400 dark:text-amber-300/80" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" aria-label="Warning"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-amber-900 dark:text-amber-200" data-component-part="callout-content"><p>Make sure you keep your <code>ANTHROPIC_API_KEY</code> secure!</p></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="creating-the-client"><div class="absolute"><a href="#creating-the-client" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Creating the Client</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="basic-client-structure"><div class="absolute"><a href="#basic-client-structure" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Basic Client Structure</span></h3><p>First, let’s set up our imports and create the basic client class:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">import</span> asyncio</span>
<span class=""><span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional</span>
<span class=""><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> AsyncExitStack</span>
<!-- -->
<span class=""><span class="token keyword">from</span> mcp <span class="token keyword">import</span> ClientSession<span class="token punctuation">,</span> StdioServerParameters</span>
<span class=""><span class="token keyword">from</span> mcp<span class="token punctuation">.</span>client<span class="token punctuation">.</span>stdio <span class="token keyword">import</span> stdio_client</span>
<!-- -->
<span class=""><span class="token keyword">from</span> anthropic <span class="token keyword">import</span> Anthropic</span>
<span class=""><span class="token keyword">from</span> dotenv <span class="token keyword">import</span> load_dotenv</span>
<!-- -->
<span class="">load_dotenv<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># load environment variables from .env</span></span>
<!-- -->
<span class=""><span class="token keyword">class</span> <span class="token class-name">MCPClient</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token comment"># Initialize session and client objects</span></span>
<span class="">        self<span class="token punctuation">.</span>session<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>ClientSession<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="">        self<span class="token punctuation">.</span>exit_stack <span class="token operator">=</span> AsyncExitStack<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">        self<span class="token punctuation">.</span>anthropic <span class="token operator">=</span> Anthropic<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token comment"># methods will go here</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="server-connection-management"><div class="absolute"><a href="#server-connection-management" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Server Connection Management</span></h3><p>Next, we’ll implement the method to connect to an MCP server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">connect_to_server</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> server_script_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;Connect to an MCP server</span>
<!-- -->
<span class="">    Args<span class="token punctuation">:</span></span>
<span class="">        server_script_path<span class="token punctuation">:</span> Path to the server script <span class="token punctuation">(</span><span class="token punctuation">.</span>py <span class="token keyword">or</span> <span class="token punctuation">.</span>js<span class="token punctuation">)</span></span>
<span class="">    <span class="token string">&quot;&quot;</span>&quot;</span>
<span class="">    is_python <span class="token operator">=</span> server_script_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#x27;.py&#x27;</span><span class="token punctuation">)</span></span>
<span class="">    is_js <span class="token operator">=</span> server_script_path<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#x27;.js&#x27;</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token punctuation">(</span>is_python <span class="token keyword">or</span> is_js<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&quot;Server script must be a .py or .js file&quot;</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    command <span class="token operator">=</span> <span class="token string">&quot;python&quot;</span> <span class="token keyword">if</span> is_python <span class="token keyword">else</span> <span class="token string">&quot;node&quot;</span></span>
<span class="">    server_params <span class="token operator">=</span> StdioServerParameters<span class="token punctuation">(</span></span>
<span class="">        command<span class="token operator">=</span>command<span class="token punctuation">,</span></span>
<span class="">        args<span class="token operator">=</span><span class="token punctuation">[</span>server_script_path<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">        env<span class="token operator">=</span><span class="token boolean">None</span></span>
<span class="">    <span class="token punctuation">)</span></span>
<!-- -->
<span class="">    stdio_transport <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>exit_stack<span class="token punctuation">.</span>enter_async_context<span class="token punctuation">(</span>stdio_client<span class="token punctuation">(</span>server_params<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">    self<span class="token punctuation">.</span>stdio<span class="token punctuation">,</span> self<span class="token punctuation">.</span>write <span class="token operator">=</span> stdio_transport</span>
<span class="">    self<span class="token punctuation">.</span>session <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>exit_stack<span class="token punctuation">.</span>enter_async_context<span class="token punctuation">(</span>ClientSession<span class="token punctuation">(</span>self<span class="token punctuation">.</span>stdio<span class="token punctuation">,</span> self<span class="token punctuation">.</span>write<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">await</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>initialize<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token comment"># List available tools</span></span>
<span class="">    response <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>list_tools<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    tools <span class="token operator">=</span> response<span class="token punctuation">.</span>tools</span>
<span class="">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\nConnected to server with tools:&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>tool<span class="token punctuation">.</span>name <span class="token keyword">for</span> tool <span class="token keyword">in</span> tools<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="query-processing-logic"><div class="absolute"><a href="#query-processing-logic" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Query Processing Logic</span></h3><p>Now let’s add the core functionality for processing queries and handling tool calls:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">process_query</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> query<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token triple-quoted-string string">&quot;&quot;&quot;Process a query using Claude and available tools&quot;&quot;&quot;</span></span>
<span class="">    messages <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="">        <span class="token punctuation">{</span></span>
<span class="">            <span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span></span>
<span class="">            <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> query</span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">]</span></span>
<!-- -->
<span class="">    response <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>list_tools<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    available_tools <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span></span>
<span class="">        <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> tool<span class="token punctuation">.</span>name<span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;description&quot;</span><span class="token punctuation">:</span> tool<span class="token punctuation">.</span>description<span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;input_schema&quot;</span><span class="token punctuation">:</span> tool<span class="token punctuation">.</span>inputSchema</span>
<span class="">    <span class="token punctuation">}</span> <span class="token keyword">for</span> tool <span class="token keyword">in</span> response<span class="token punctuation">.</span>tools<span class="token punctuation">]</span></span>
<!-- -->
<span class="">    <span class="token comment"># Initial Claude API call</span></span>
<span class="">    response <span class="token operator">=</span> self<span class="token punctuation">.</span>anthropic<span class="token punctuation">.</span>messages<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="">        model<span class="token operator">=</span><span class="token string">&quot;claude-3-5-sonnet-20241022&quot;</span><span class="token punctuation">,</span></span>
<span class="">        max_tokens<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="">        messages<span class="token operator">=</span>messages<span class="token punctuation">,</span></span>
<span class="">        tools<span class="token operator">=</span>available_tools</span>
<span class="">    <span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token comment"># Process response and handle tool calls</span></span>
<span class="">    final_text <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<!-- -->
<span class="">    assistant_message_content <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="">    <span class="token keyword">for</span> content <span class="token keyword">in</span> response<span class="token punctuation">.</span>content<span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">if</span> content<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> <span class="token string">&#x27;text&#x27;</span><span class="token punctuation">:</span></span>
<span class="">            final_text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>content<span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<span class="">            assistant_message_content<span class="token punctuation">.</span>append<span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="">        <span class="token keyword">elif</span> content<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> <span class="token string">&#x27;tool_use&#x27;</span><span class="token punctuation">:</span></span>
<span class="">            tool_name <span class="token operator">=</span> content<span class="token punctuation">.</span>name</span>
<span class="">            tool_args <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token builtin">input</span></span>
<!-- -->
<span class="">            <span class="token comment"># Execute tool call</span></span>
<span class="">            result <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>session<span class="token punctuation">.</span>call_tool<span class="token punctuation">(</span>tool_name<span class="token punctuation">,</span> tool_args<span class="token punctuation">)</span></span>
<span class="">            final_text<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[Calling tool </span><span class="token interpolation"><span class="token punctuation">{</span>tool_name<span class="token punctuation">}</span></span><span class="token string"> with args </span><span class="token interpolation"><span class="token punctuation">{</span>tool_args<span class="token punctuation">}</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">            assistant_message_content<span class="token punctuation">.</span>append<span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="">            messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">                <span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;assistant&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> assistant_message_content</span>
<span class="">            <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="">            messages<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">                <span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span></span>
<span class="">                <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="">                    <span class="token punctuation">{</span></span>
<span class="">                        <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;tool_result&quot;</span><span class="token punctuation">,</span></span>
<span class="">                        <span class="token string">&quot;tool_use_id&quot;</span><span class="token punctuation">:</span> content<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">,</span></span>
<span class="">                        <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> result<span class="token punctuation">.</span>content</span>
<span class="">                    <span class="token punctuation">}</span></span>
<span class="">                <span class="token punctuation">]</span></span>
<span class="">            <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">            <span class="token comment"># Get next response from Claude</span></span>
<span class="">            response <span class="token operator">=</span> self<span class="token punctuation">.</span>anthropic<span class="token punctuation">.</span>messages<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="">                model<span class="token operator">=</span><span class="token string">&quot;claude-3-5-sonnet-20241022&quot;</span><span class="token punctuation">,</span></span>
<span class="">                max_tokens<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="">                messages<span class="token operator">=</span>messages<span class="token punctuation">,</span></span>
<span class="">                tools<span class="token operator">=</span>available_tools</span>
<span class="">            <span class="token punctuation">)</span></span>
<!-- -->
<span class="">            final_text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">return</span> <span class="token string">&quot;\n&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>final_text<span class="token punctuation">)</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="interactive-chat-interface"><div class="absolute"><a href="#interactive-chat-interface" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Interactive Chat Interface</span></h3><p>Now we’ll add the chat loop and cleanup functionality:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">chat_loop</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token triple-quoted-string string">&quot;&quot;&quot;Run an interactive chat loop&quot;&quot;&quot;</span></span>
<span class="">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\nMCP Client Started!&quot;</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Type your queries or &#x27;quit&#x27; to exit.&quot;</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="">            query <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\nQuery: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">            <span class="token keyword">if</span> query<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#x27;quit&#x27;</span><span class="token punctuation">:</span></span>
<span class="">                <span class="token keyword">break</span></span>
<!-- -->
<span class="">            response <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>process_query<span class="token punctuation">(</span>query<span class="token punctuation">)</span></span>
<span class="">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\n&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">)</span></span>
<!-- -->
<span class="">        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;\nError: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<!-- -->
<span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">cleanup</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token triple-quoted-string string">&quot;&quot;&quot;Clean up resources&quot;&quot;&quot;</span></span>
<span class="">    <span class="token keyword">await</span> self<span class="token punctuation">.</span>exit_stack<span class="token punctuation">.</span>aclose<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="main-entry-point"><div class="absolute"><a href="#main-entry-point" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Main Entry Point</span></h3><p>Finally, we’ll add the main execution logic:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-python"><code class="language-python"><span class=""><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Usage: python client.py &lt;path_to_server_script&gt;&quot;</span><span class="token punctuation">)</span></span>
<span class="">        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    client <span class="token operator">=</span> MCPClient<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">await</span> client<span class="token punctuation">.</span>connect_to_server<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token keyword">await</span> client<span class="token punctuation">.</span>chat_loop<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="">        <span class="token keyword">await</span> client<span class="token punctuation">.</span>cleanup<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<!-- -->
<span class=""><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span></span>
<span class="">    <span class="token keyword">import</span> sys</span>
<span class="">    asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
</code></pre></div></div></div><p>You can find the complete <code>client.py</code> file <a href="https://gist.github.com/zckly/f3f28ea731e096e53b39b47bf0a2d4b1" target="_blank" rel="noreferrer" class="link">here.</a></p><h2 class="flex whitespace-pre-wrap group font-semibold" id="key-components-explained"><div class="absolute"><a href="#key-components-explained" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Key Components Explained</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="1-client-initialization"><div class="absolute"><a href="#1-client-initialization" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">1. Client Initialization</span></h3><ul>
<li>The <code>MCPClient</code> class initializes with session management and API clients</li>
<li>Uses <code>AsyncExitStack</code> for proper resource management</li>
<li>Configures the Anthropic client for Claude interactions</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="2-server-connection"><div class="absolute"><a href="#2-server-connection" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">2. Server Connection</span></h3><ul>
<li>Supports both Python and Node.js servers</li>
<li>Validates server script type</li>
<li>Sets up proper communication channels</li>
<li>Initializes the session and lists available tools</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="3-query-processing"><div class="absolute"><a href="#3-query-processing" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">3. Query Processing</span></h3><ul>
<li>Maintains conversation context</li>
<li>Handles Claude’s responses and tool calls</li>
<li>Manages the message flow between Claude and tools</li>
<li>Combines results into a coherent response</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="4-interactive-interface"><div class="absolute"><a href="#4-interactive-interface" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">4. Interactive Interface</span></h3><ul>
<li>Provides a simple command-line interface</li>
<li>Handles user input and displays responses</li>
<li>Includes basic error handling</li>
<li>Allows graceful exit</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="5-resource-management"><div class="absolute"><a href="#5-resource-management" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">5. Resource Management</span></h3><ul>
<li>Proper cleanup of resources</li>
<li>Error handling for connection issues</li>
<li>Graceful shutdown procedures</li>
</ul><h2 class="flex whitespace-pre-wrap group font-semibold" id="common-customization-points"><div class="absolute"><a href="#common-customization-points" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Common Customization Points</span></h2><ol>
<li>
<p><strong>Tool Handling</strong></p>
<ul>
<li>Modify <code>process_query()</code> to handle specific tool types</li>
<li>Add custom error handling for tool calls</li>
<li>Implement tool-specific response formatting</li>
</ul>
</li>
<li>
<p><strong>Response Processing</strong></p>
<ul>
<li>Customize how tool results are formatted</li>
<li>Add response filtering or transformation</li>
<li>Implement custom logging</li>
</ul>
</li>
<li>
<p><strong>User Interface</strong></p>
<ul>
<li>Add a GUI or web interface</li>
<li>Implement rich console output</li>
<li>Add command history or auto-completion</li>
</ul>
</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="running-the-client"><div class="absolute"><a href="#running-the-client" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Running the Client</span></h2><p>To run your client with any MCP server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">uv run client.py path/to/server.py <span class="token comment"># python server</span></span>
<span class="">uv run client.py path/to/build/index.js <span class="token comment"># node server</span></span>
</code></pre></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: <code>python client.py .../quickstart-resources/weather-server-python/weather.py</code></p></div></div><p>The client will:</p><ol>
<li>Connect to the specified server</li>
<li>List available tools</li>
<li>Start an interactive chat session where you can:<!-- -->
<ul>
<li>Enter queries</li>
<li>See tool executions</li>
<li>Get responses from Claude</li>
</ul>
</li>
</ol><p>Here’s an example of what it should look like if connected to the weather server from the server quickstart:</p><div><div data-name="frame" class="frame p-2 not-prose relative bg-gray-50/50 rounded-2xl overflow-hidden dark:bg-gray-800/25"><div style="background-position:10px 10px" class="absolute inset-0 bg-grid-neutral-200/20 [mask-image:linear-gradient(0deg,#fff,rgba(255,255,255,0.6))] dark:bg-grid-white/5 dark:[mask-image:linear-gradient(0deg,rgba(255,255,255,0.1),rgba(255,255,255,0.5))]"></div><div class="relative rounded-xl overflow-hidden flex justify-center"></div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-2xl dark:border-white/5"></div></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="how-it-works"><div class="absolute"><a href="#how-it-works" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">How It Works</span></h2><p>When you submit a query:</p><ol>
<li>The client gets the list of available tools from the server</li>
<li>Your query is sent to Claude along with tool descriptions</li>
<li>Claude decides which tools (if any) to use</li>
<li>The client executes any requested tool calls through the server</li>
<li>Results are sent back to Claude</li>
<li>Claude provides a natural language response</li>
<li>The response is displayed to you</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="best-practices"><div class="absolute"><a href="#best-practices" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Best practices</span></h2><ol>
<li>
<p><strong>Error Handling</strong></p>
<ul>
<li>Always wrap tool calls in try-catch blocks</li>
<li>Provide meaningful error messages</li>
<li>Gracefully handle connection issues</li>
</ul>
</li>
<li>
<p><strong>Resource Management</strong></p>
<ul>
<li>Use <code>AsyncExitStack</code> for proper cleanup</li>
<li>Close connections when done</li>
<li>Handle server disconnections</li>
</ul>
</li>
<li>
<p><strong>Security</strong></p>
<ul>
<li>Store API keys securely in <code>.env</code></li>
<li>Validate server responses</li>
<li>Be cautious with tool permissions</li>
</ul>
</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="troubleshooting"><div class="absolute"><a href="#troubleshooting" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Troubleshooting</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="server-path-issues"><div class="absolute"><a href="#server-path-issues" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Server Path Issues</span></h3><ul>
<li>Double-check the path to your server script is correct</li>
<li>Use the absolute path if the relative path isn’t working</li>
<li>For Windows users, make sure to use forward slashes (/) or escaped backslashes (\) in the path</li>
<li>Verify the server file has the correct extension (.py for Python or .js for Node.js)</li>
</ul><p>Example of correct path usage:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Relative path</span></span>
<span class="">uv run client.py ./server/weather.py</span>
<!-- -->
<span class=""><span class="token comment"># Absolute path</span></span>
<span class="">uv run client.py /Users/username/projects/mcp-server/weather.py</span>
<!-- -->
<span class=""><span class="token comment"># Windows path (either format works)</span></span>
<span class="">uv run client.py C:/projects/mcp-server/weather.py</span>
<span class="">uv run client.py C:<span class="token punctuation">\</span><span class="token punctuation">\</span>projects<span class="token punctuation">\</span><span class="token punctuation">\</span>mcp-server<span class="token punctuation">\</span><span class="token punctuation">\</span>weather.py</span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="response-timing"><div class="absolute"><a href="#response-timing" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Response Timing</span></h3><ul>
<li>The first response might take up to 30 seconds to return</li>
<li>This is normal and happens while:<!-- -->
<ul>
<li>The server initializes</li>
<li>Claude processes the query</li>
<li>Tools are being executed</li>
</ul>
</li>
<li>Subsequent responses are typically faster</li>
<li>Don’t interrupt the process during this initial waiting period</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="common-error-messages"><div class="absolute"><a href="#common-error-messages" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Common Error Messages</span></h3><p>If you see:</p><ul>
<li><code>FileNotFoundError</code>: Check your server path</li>
<li><code>Connection refused</code>: Ensure the server is running and the path is correct</li>
<li><code>Tool execution failed</code>: Verify the tool’s required environment variables are set</li>
<li><code>Timeout error</code>: Consider increasing the timeout in your client configuration</li>
</ul></div><div><p><a href="https://github.com/modelcontextprotocol/quickstart-resources/tree/main/mcp-client-typescript" target="_blank" rel="noreferrer" class="link">You can find the complete code for this tutorial here.</a></p><h2 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements-2"><div class="absolute"><a href="#system-requirements-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System Requirements</span></h2><p>Before starting, ensure your system meets these requirements:</p><ul>
<li>Mac or Windows computer</li>
<li>Node.js 17 or higher installed</li>
<li>Latest version of <code>npm</code> installed</li>
<li>Anthropic API key (Claude)</li>
</ul><h2 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-your-environment-2"><div class="absolute"><a href="#setting-up-your-environment-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting Up Your Environment</span></h2><p>First, let’s create and set up our project:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:R2m3lmpakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">MacOS/Linux</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R4m3lmpakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">Windows</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:Rq3lmpakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Create project directory</span></span>
<span class=""><span class="token function">mkdir</span> mcp-client-typescript</span>
<span class=""><span class="token builtin class-name">cd</span> mcp-client-typescript</span>
<!-- -->
<span class=""><span class="token comment"># Initialize npm project</span></span>
<span class=""><span class="token function">npm</span> init <span class="token parameter variable">-y</span></span>
<!-- -->
<span class=""><span class="token comment"># Install dependencies</span></span>
<span class=""><span class="token function">npm</span> <span class="token function">install</span> @anthropic-ai/sdk @modelcontextprotocol/sdk dotenv</span>
<!-- -->
<span class=""><span class="token comment"># Install dev dependencies</span></span>
<span class=""><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> @types/node typescript</span>
<!-- -->
<span class=""><span class="token comment"># Create source file</span></span>
<span class=""><span class="token function">touch</span> index.ts</span>
</code></pre></div></div><span id="headlessui-tabs-panel-:R1a3lmpakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>Update your <code>package.json</code> to set <code>type: &quot;module&quot;</code> and a build script:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">package.json</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;module&quot;</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tsc &amp;&amp; chmod 755 build/index.js&quot;</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><p>Create a <code>tsconfig.json</code> in the root of your project:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="flex rounded-t-2xl text-gray-400 text-xs leading-6 border-b font-medium bg-black/40 border-gray-900/80" data-component-part="code-block-tab-bar"><div class="flex-none border-b px-4 pt-2.5 pb-2 flex items-center text-primary-light border-primary-light" data-component-part="code-block-tab-bar-filename">tsconfig.json</div><div class="flex-1 mr-4 flex items-center justify-end"></div></div><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ES2022&quot;</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node16&quot;</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node16&quot;</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./build&quot;</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;rootDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;skipLibCheck&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token property">&quot;forceConsistentCasingInFileNames&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;index.ts&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token property">&quot;exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">]</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-your-api-key-2"><div class="absolute"><a href="#setting-up-your-api-key-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting Up Your API Key</span></h2><p>You’ll need an Anthropic API key from the <a href="https://console.anthropic.com/settings/keys" target="_blank" rel="noreferrer" class="link">Anthropic Console</a>.</p><p>Create a <code>.env</code> file to store it:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token builtin class-name">echo</span> <span class="token string">&quot;ANTHROPIC_API_KEY=&lt;your key here&gt;&quot;</span> <span class="token operator">&gt;</span> .env</span>
</code></pre></div></div></div><p>Add <code>.env</code> to your <code>.gitignore</code>:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token builtin class-name">echo</span> <span class="token string">&quot;.env&quot;</span> <span class="token operator">&gt;&gt;</span> .gitignore</span>
</code></pre></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-amber-500/20 bg-amber-50/50 dark:border-amber-500/30 dark:bg-amber-500/10" data-callout-type="warning"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg class="flex-none w-5 h-5 text-amber-400 dark:text-amber-300/80" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" aria-label="Warning"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-amber-900 dark:text-amber-200" data-component-part="callout-content"><p>Make sure you keep your <code>ANTHROPIC_API_KEY</code> secure!</p></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="creating-the-client-2"><div class="absolute"><a href="#creating-the-client-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Creating the Client</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="basic-client-structure-2"><div class="absolute"><a href="#basic-client-structure-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Basic Client Structure</span></h3><p>First, let’s set up our imports and create the basic client class in <code>index.ts</code>:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-typescript"><code class="language-typescript"><span class=""><span class="token keyword">import</span> <span class="token punctuation">{</span> Anthropic <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@anthropic-ai/sdk&quot;</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">import</span> <span class="token punctuation">{</span></span>
<span class="">  MessageParam<span class="token punctuation">,</span></span>
<span class="">  Tool<span class="token punctuation">,</span></span>
<span class=""><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@anthropic-ai/sdk/resources/messages/messages.mjs&quot;</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">import</span> <span class="token punctuation">{</span> Client <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@modelcontextprotocol/sdk/client/index.js&quot;</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">import</span> <span class="token punctuation">{</span> StdioClientTransport <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@modelcontextprotocol/sdk/client/stdio.js&quot;</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">import</span> readline <span class="token keyword">from</span> <span class="token string">&quot;readline/promises&quot;</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">import</span> dotenv <span class="token keyword">from</span> <span class="token string">&quot;dotenv&quot;</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">dotenv<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token keyword">const</span> <span class="token constant">ANTHROPIC_API_KEY</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">ANTHROPIC_API_KEY</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">ANTHROPIC_API_KEY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;ANTHROPIC_API_KEY is not set&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token keyword">class</span> <span class="token class-name">MCPClient</span> <span class="token punctuation">{</span></span>
<span class="">  <span class="token keyword">private</span> mcp<span class="token operator">:</span> Client<span class="token punctuation">;</span></span>
<span class="">  <span class="token keyword">private</span> anthropic<span class="token operator">:</span> Anthropic<span class="token punctuation">;</span></span>
<span class="">  <span class="token keyword">private</span> transport<span class="token operator">:</span> StdioClientTransport <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token keyword">private</span> tools<span class="token operator">:</span> Tool<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">this</span><span class="token punctuation">.</span>anthropic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Anthropic</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">      apiKey<span class="token operator">:</span> <span class="token constant">ANTHROPIC_API_KEY</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">this</span><span class="token punctuation">.</span>mcp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;mcp-client-cli&quot;</span><span class="token punctuation">,</span> version<span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<span class="">  <span class="token comment">// methods will go here</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="server-connection-management-2"><div class="absolute"><a href="#server-connection-management-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Server Connection Management</span></h3><p>Next, we’ll implement the method to connect to an MCP server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-typescript"><code class="language-typescript"><span class=""><span class="token keyword">async</span> <span class="token function">connectToServer</span><span class="token punctuation">(</span>serverScriptPath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">const</span> isJs <span class="token operator">=</span> serverScriptPath<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">const</span> isPy <span class="token operator">=</span> serverScriptPath<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.py&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJs <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isPy<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Server script must be a .js or .py file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">    <span class="token keyword">const</span> command <span class="token operator">=</span> isPy</span>
<span class="">      <span class="token operator">?</span> process<span class="token punctuation">.</span>platform <span class="token operator">===</span> <span class="token string">&quot;win32&quot;</span></span>
<span class="">        <span class="token operator">?</span> <span class="token string">&quot;python&quot;</span></span>
<span class="">        <span class="token operator">:</span> <span class="token string">&quot;python3&quot;</span></span>
<span class="">      <span class="token operator">:</span> process<span class="token punctuation">.</span>execPath<span class="token punctuation">;</span></span>
<!-- -->
<span class="">    <span class="token keyword">this</span><span class="token punctuation">.</span>transport <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StdioClientTransport</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">      command<span class="token punctuation">,</span></span>
<span class="">      args<span class="token operator">:</span> <span class="token punctuation">[</span>serverScriptPath<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">this</span><span class="token punctuation">.</span>mcp<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>transport<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">    <span class="token keyword">const</span> toolsResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mcp<span class="token punctuation">.</span><span class="token function">listTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">this</span><span class="token punctuation">.</span>tools <span class="token operator">=</span> toolsResult<span class="token punctuation">.</span>tools<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tool<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="">        name<span class="token operator">:</span> tool<span class="token punctuation">.</span>name<span class="token punctuation">,</span></span>
<span class="">        description<span class="token operator">:</span> tool<span class="token punctuation">.</span>description<span class="token punctuation">,</span></span>
<span class="">        input_schema<span class="token operator">:</span> tool<span class="token punctuation">.</span>inputSchema<span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span></span>
<span class="">      <span class="token string">&quot;Connected to server with tools:&quot;</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token keyword">this</span><span class="token punctuation">.</span>tools<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name<span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to connect to MCP server: &quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">throw</span> e<span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="query-processing-logic-2"><div class="absolute"><a href="#query-processing-logic-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Query Processing Logic</span></h3><p>Now let’s add the core functionality for processing queries and handling tool calls:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-typescript"><code class="language-typescript"><span class=""><span class="token keyword">async</span> <span class="token function">processQuery</span><span class="token punctuation">(</span>query<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">  <span class="token keyword">const</span> messages<span class="token operator">:</span> MessageParam<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="">    <span class="token punctuation">{</span></span>
<span class="">      role<span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span></span>
<span class="">      content<span class="token operator">:</span> query<span class="token punctuation">,</span></span>
<span class="">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="">  <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>anthropic<span class="token punctuation">.</span>messages<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">    model<span class="token operator">:</span> <span class="token string">&quot;claude-3-5-sonnet-20241022&quot;</span><span class="token punctuation">,</span></span>
<span class="">    max_tokens<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="">    messages<span class="token punctuation">,</span></span>
<span class="">    tools<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tools<span class="token punctuation">,</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">  <span class="token keyword">const</span> finalText <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token keyword">const</span> toolResults <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> content <span class="token keyword">of</span> response<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      finalText<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&quot;tool_use&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token keyword">const</span> toolName <span class="token operator">=</span> content<span class="token punctuation">.</span>name<span class="token punctuation">;</span></span>
<span class="">      <span class="token keyword">const</span> toolArgs <span class="token operator">=</span> content<span class="token punctuation">.</span>input <span class="token keyword">as</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">unknown</span> <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mcp<span class="token punctuation">.</span><span class="token function">callTool</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">        name<span class="token operator">:</span> toolName<span class="token punctuation">,</span></span>
<span class="">        arguments<span class="token operator">:</span> toolArgs<span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">      toolResults<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">      finalText<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span></span>
<span class="">        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[Calling tool </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>toolName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> with args </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>toolArgs<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">`</span></span></span>
<span class="">      <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">      messages<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">        role<span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span></span>
<span class="">        content<span class="token operator">:</span> result<span class="token punctuation">.</span>content <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>anthropic<span class="token punctuation">.</span>messages<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">        model<span class="token operator">:</span> <span class="token string">&quot;claude-3-5-sonnet-20241022&quot;</span><span class="token punctuation">,</span></span>
<span class="">        max_tokens<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="">        messages<span class="token punctuation">,</span></span>
<span class="">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">      finalText<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span></span>
<span class="">        response<span class="token punctuation">.</span>content<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&quot;text&quot;</span> <span class="token operator">?</span> response<span class="token punctuation">.</span>content<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">:</span> <span class="token string">&quot;&quot;</span></span>
<span class="">      <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<!-- -->
<span class="">  <span class="token keyword">return</span> finalText<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="interactive-chat-interface-2"><div class="absolute"><a href="#interactive-chat-interface-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Interactive Chat Interface</span></h3><p>Now we’ll add the chat loop and cleanup functionality:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-typescript"><code class="language-typescript"><span class=""><span class="token keyword">async</span> <span class="token function">chatLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">  <span class="token keyword">const</span> rl <span class="token operator">=</span> readline<span class="token punctuation">.</span><span class="token function">createInterface</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="">    input<span class="token operator">:</span> process<span class="token punctuation">.</span>stdin<span class="token punctuation">,</span></span>
<span class="">    output<span class="token operator">:</span> process<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span></span>
<span class="">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\nMCP Client Started!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Type your queries or &#x27;quit&#x27; to exit.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token keyword">await</span> rl<span class="token punctuation">.</span><span class="token function">question</span><span class="token punctuation">(</span><span class="token string">&quot;\nQuery: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">      <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;quit&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="">      <span class="token punctuation">}</span></span>
<span class="">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">processQuery</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\n&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="">    rl<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token keyword">async</span> <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">  <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mcp<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="main-entry-point-2"><div class="absolute"><a href="#main-entry-point-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Main Entry Point</span></h3><p>Finally, we’ll add the main execution logic:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-typescript"><code class="language-typescript"><span class=""><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Usage: node index.ts &lt;path_to_server_script&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<span class="">  <span class="token keyword">const</span> mcpClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MCPClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">await</span> mcpClient<span class="token punctuation">.</span><span class="token function">connectToServer</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token keyword">await</span> mcpClient<span class="token punctuation">.</span><span class="token function">chatLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">await</span> mcpClient<span class="token punctuation">.</span><span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
</code></pre></div></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="running-the-client-2"><div class="absolute"><a href="#running-the-client-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Running the Client</span></h2><p>To run your client with any MCP server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Build TypeScript</span></span>
<span class=""><span class="token function">npm</span> run build</span>
<!-- -->
<span class=""><span class="token comment"># Run the client</span></span>
<span class=""><span class="token function">node</span> build/index.js path/to/server.py <span class="token comment"># python server</span></span>
<span class=""><span class="token function">node</span> build/index.js path/to/build/index.js <span class="token comment"># node server</span></span>
</code></pre></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: <code>node build/index.js .../quickstart-resources/weather-server-typescript/build/index.js</code></p></div></div><p><strong>The client will:</strong></p><ol>
<li>Connect to the specified server</li>
<li>List available tools</li>
<li>Start an interactive chat session where you can:<!-- -->
<ul>
<li>Enter queries</li>
<li>See tool executions</li>
<li>Get responses from Claude</li>
</ul>
</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="how-it-works-2"><div class="absolute"><a href="#how-it-works-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">How It Works</span></h2><p>When you submit a query:</p><ol>
<li>The client gets the list of available tools from the server</li>
<li>Your query is sent to Claude along with tool descriptions</li>
<li>Claude decides which tools (if any) to use</li>
<li>The client executes any requested tool calls through the server</li>
<li>Results are sent back to Claude</li>
<li>Claude provides a natural language response</li>
<li>The response is displayed to you</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="best-practices-2"><div class="absolute"><a href="#best-practices-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Best practices</span></h2><ol>
<li>
<p><strong>Error Handling</strong></p>
<ul>
<li>Use TypeScript’s type system for better error detection</li>
<li>Wrap tool calls in try-catch blocks</li>
<li>Provide meaningful error messages</li>
<li>Gracefully handle connection issues</li>
</ul>
</li>
<li>
<p><strong>Security</strong></p>
<ul>
<li>Store API keys securely in <code>.env</code></li>
<li>Validate server responses</li>
<li>Be cautious with tool permissions</li>
</ul>
</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="troubleshooting-2"><div class="absolute"><a href="#troubleshooting-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Troubleshooting</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="server-path-issues-2"><div class="absolute"><a href="#server-path-issues-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Server Path Issues</span></h3><ul>
<li>Double-check the path to your server script is correct</li>
<li>Use the absolute path if the relative path isn’t working</li>
<li>For Windows users, make sure to use forward slashes (/) or escaped backslashes (\) in the path</li>
<li>Verify the server file has the correct extension (.js for Node.js or .py for Python)</li>
</ul><p>Example of correct path usage:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Relative path</span></span>
<span class=""><span class="token function">node</span> build/index.js ./server/build/index.js</span>
<!-- -->
<span class=""><span class="token comment"># Absolute path</span></span>
<span class=""><span class="token function">node</span> build/index.js /Users/username/projects/mcp-server/build/index.js</span>
<!-- -->
<span class=""><span class="token comment"># Windows path (either format works)</span></span>
<span class=""><span class="token function">node</span> build/index.js C:/projects/mcp-server/build/index.js</span>
<span class=""><span class="token function">node</span> build/index.js C:<span class="token punctuation">\</span><span class="token punctuation">\</span>projects<span class="token punctuation">\</span><span class="token punctuation">\</span>mcp-server<span class="token punctuation">\</span><span class="token punctuation">\</span>build<span class="token punctuation">\</span><span class="token punctuation">\</span>index.js</span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="response-timing-2"><div class="absolute"><a href="#response-timing-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Response Timing</span></h3><ul>
<li>The first response might take up to 30 seconds to return</li>
<li>This is normal and happens while:<!-- -->
<ul>
<li>The server initializes</li>
<li>Claude processes the query</li>
<li>Tools are being executed</li>
</ul>
</li>
<li>Subsequent responses are typically faster</li>
<li>Don’t interrupt the process during this initial waiting period</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="common-error-messages-2"><div class="absolute"><a href="#common-error-messages-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Common Error Messages</span></h3><p>If you see:</p><ul>
<li><code>Error: Cannot find module</code>: Check your build folder and ensure TypeScript compilation succeeded</li>
<li><code>Connection refused</code>: Ensure the server is running and the path is correct</li>
<li><code>Tool execution failed</code>: Verify the tool’s required environment variables are set</li>
<li><code>ANTHROPIC_API_KEY is not set</code>: Check your .env file and environment variables</li>
<li><code>TypeError</code>: Ensure you’re using the correct types for tool arguments</li>
</ul></div><div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>This is a quickstart demo based on Spring AI MCP auto-configuration and boot starters.
To learn how to create sync and async MCP Clients manually, consult the <a class="link" href="/sdk/java/mcp-client">Java SDK Client</a> documentation</p></div></div><p>This example demonstrates how to build an interactive chatbot that combines Spring AI’s Model Context Protocol (MCP) with the <a href="https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search" target="_blank" rel="noreferrer" class="link">Brave Search MCP Server</a>. The application creates a conversational interface powered by Anthropic’s Claude AI model that can perform internet searches through Brave Search, enabling natural language interactions with real-time web data.
<a href="https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/web-search/brave-chatbot" target="_blank" rel="noreferrer" class="link">You can find the complete code for this tutorial here.</a></p><h2 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements-3"><div class="absolute"><a href="#system-requirements-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System Requirements</span></h2><p>Before starting, ensure your system meets these requirements:</p><ul>
<li>Java 17 or higher</li>
<li>Maven 3.6+</li>
<li>npx package manager</li>
<li>Anthropic API key (Claude)</li>
<li>Brave Search API key</li>
</ul><h2 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-your-environment-3"><div class="absolute"><a href="#setting-up-your-environment-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting Up Your Environment</span></h2><ol>
<li>
<p>Install npx (Node Package eXecute):
First, make sure to install <a href="https://docs.npmjs.com/downloading-and-installing-node-js-and-npm" target="_blank" rel="noreferrer" class="link">npm</a>
and then run:</p>
<div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> npx</span>
</code></pre></div></div></div>
</li>
<li>
<p>Clone the repository:</p>
<div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token function">git</span> clone https://github.com/spring-projects/spring-ai-examples.git</span>
<span class=""><span class="token builtin class-name">cd</span> model-context-protocol/brave-chatbot</span>
</code></pre></div></div></div>
</li>
<li>
<p>Set up your API keys:</p>
<div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token builtin class-name">export</span> <span class="token assign-left variable">ANTHROPIC_API_KEY</span><span class="token operator">=</span><span class="token string">&#x27;your-anthropic-api-key-here&#x27;</span></span>
<span class=""><span class="token builtin class-name">export</span> <span class="token assign-left variable">BRAVE_API_KEY</span><span class="token operator">=</span><span class="token string">&#x27;your-brave-api-key-here&#x27;</span></span>
</code></pre></div></div></div>
</li>
<li>
<p>Build the application:</p>
<div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">./mvnw clean <span class="token function">install</span></span>
</code></pre></div></div></div>
</li>
<li>
<p>Run the application using Maven:</p>
<div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">./mvnw spring-boot:run</span>
</code></pre></div></div></div>
</li>
</ol><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-amber-500/20 bg-amber-50/50 dark:border-amber-500/30 dark:bg-amber-500/10" data-callout-type="warning"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg class="flex-none w-5 h-5 text-amber-400 dark:text-amber-300/80" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" aria-label="Warning"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-amber-900 dark:text-amber-200" data-component-part="callout-content"><p>Make sure you keep your <code>ANTHROPIC_API_KEY</code> and <code>BRAVE_API_KEY</code> keys secure!</p></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="how-it-works-3"><div class="absolute"><a href="#how-it-works-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">How it Works</span></h2><p>The application integrates Spring AI with the Brave Search MCP server through several components:</p><h3 class="flex whitespace-pre-wrap group font-semibold" id="mcp-client-configuration"><div class="absolute"><a href="#mcp-client-configuration" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">MCP Client Configuration</span></h3><ol>
<li>Required dependencies in pom.xml:</li>
</ol><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-xml"><code class="language-xml"><span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.ai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-ai-starter-mcp-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.ai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-ai-starter-model-anthropic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
</code></pre></div></div></div><ol start="2">
<li>Application properties (application.yml):</li>
</ol><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-yml"><code class="language-yml"><span class="">spring<span class="token punctuation">:</span></span>
<span class="">  ai<span class="token punctuation">:</span></span>
<span class="">    mcp<span class="token punctuation">:</span></span>
<span class="">      client<span class="token punctuation">:</span></span>
<span class="">        <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="">        <span class="token key atrule">name</span><span class="token punctuation">:</span> brave<span class="token punctuation">-</span>search<span class="token punctuation">-</span>client</span>
<span class="">        <span class="token key atrule">version</span><span class="token punctuation">:</span> 1.0.0</span>
<span class="">        <span class="token key atrule">type</span><span class="token punctuation">:</span> SYNC</span>
<span class="">        <span class="token key atrule">request-timeout</span><span class="token punctuation">:</span> 20s</span>
<span class="">        stdio<span class="token punctuation">:</span></span>
<span class="">          <span class="token key atrule">root-change-notification</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="">          <span class="token key atrule">servers-configuration</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>/mcp<span class="token punctuation">-</span>servers<span class="token punctuation">-</span>config.json</span>
<span class="">        toolcallback<span class="token punctuation">:</span></span>
<span class="">          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="">    anthropic<span class="token punctuation">:</span></span>
<span class="">      <span class="token key atrule">api-key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>ANTHROPIC_API_KEY<span class="token punctuation">}</span></span>
</code></pre></div></div></div><p>This activates the <code>spring-ai-starter-mcp-client</code> to create one or more <code>McpClient</code>s based on the provided server configuration.
The <code>spring.ai.mcp.client.toolcallback.enabled=true</code> property enables the tool callback mechanism, that automatically registers all MCP tool as spring ai tools.
It is disabled by default.</p><ol start="3">
<li>MCP Server Configuration (<code>mcp-servers-config.json</code>):</li>
</ol><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-json"><code class="language-json"><span class=""><span class="token punctuation">{</span></span>
<span class="">  <span class="token property">&quot;mcpServers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token property">&quot;brave-search&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">      <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npx&quot;</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="">        <span class="token string">&quot;-y&quot;</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token string">&quot;@modelcontextprotocol/server-brave-search&quot;</span></span>
<span class="">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="">      <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token property">&quot;BRAVE_API_KEY&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;PUT YOUR BRAVE API KEY&gt;&quot;</span></span>
<span class="">      <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">  <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="chat-implementation"><div class="absolute"><a href="#chat-implementation" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Chat Implementation</span></h3><p>The chatbot is implemented using Spring AI’s ChatClient with MCP tool integration:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-java"><code class="language-java"><span class=""><span class="token keyword">var</span> chatClient <span class="token operator">=</span> chatClientBuilder</span>
<span class="">    <span class="token punctuation">.</span><span class="token function">defaultSystem</span><span class="token punctuation">(</span><span class="token string">&quot;You are useful assistant, expert in AI and Java.&quot;</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">.</span><span class="token function">defaultToolCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> mcpToolAdapter<span class="token punctuation">.</span><span class="token function">toolCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">.</span><span class="token function">defaultAdvisors</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageChatMemoryAdvisor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InMemoryChatMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
</code></pre></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-amber-500/20 bg-amber-50/50 dark:border-amber-500/30 dark:bg-amber-500/10" data-callout-type="warning"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg class="flex-none w-5 h-5 text-amber-400 dark:text-amber-300/80" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" aria-label="Warning"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-amber-900 dark:text-amber-200" data-component-part="callout-content"><p>Breaking change: From SpringAI 1.0.0-M8 onwards, use <code>.defaultToolCallbacks(...)</code> instead of <code>.defaultTool(...)</code> to register MCP tools.</p></div></div><p>Key features:</p><ul>
<li>Uses Claude AI model for natural language understanding</li>
<li>Integrates Brave Search through MCP for real-time web search capabilities</li>
<li>Maintains conversation memory using InMemoryChatMemory</li>
<li>Runs as an interactive command-line application</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="build-and-run"><div class="absolute"><a href="#build-and-run" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Build and run</span></h3><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">./mvnw clean <span class="token function">install</span></span>
<span class=""><span class="token function">java</span> <span class="token parameter variable">-jar</span> ./target/ai-mcp-brave-chatbot-0.0.1-SNAPSHOT.jar</span>
</code></pre></div></div></div><p>or</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">./mvnw spring-boot:run</span>
</code></pre></div></div></div><p>The application will start an interactive chat session where you can ask questions. The chatbot will use Brave Search when it needs to find information from the internet to answer your queries.</p><p>The chatbot can:</p><ul>
<li>Answer questions using its built-in knowledge</li>
<li>Perform web searches when needed using Brave Search</li>
<li>Remember context from previous messages in the conversation</li>
<li>Combine information from multiple sources to provide comprehensive answers</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="advanced-configuration"><div class="absolute"><a href="#advanced-configuration" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Advanced Configuration</span></h3><p>The MCP client supports additional configuration options:</p><ul>
<li>Client customization through <code>McpSyncClientCustomizer</code> or <code>McpAsyncClientCustomizer</code></li>
<li>Multiple clients with multiple transport types: <code>STDIO</code> and <code>SSE</code> (Server-Sent Events)</li>
<li>Integration with Spring AI’s tool execution framework</li>
<li>Automatic client initialization and lifecycle management</li>
</ul><p>For WebFlux-based applications, you can use the WebFlux starter instead:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-xml"><code class="language-xml"><span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.ai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-ai-mcp-client-webflux-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class=""><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
</code></pre></div></div></div><p>This provides similar functionality but uses a WebFlux-based SSE transport implementation, recommended for production deployments.</p></div><div><p><a href="https://github.com/modelcontextprotocol/kotlin-sdk/tree/main/samples/kotlin-mcp-client" target="_blank" rel="noreferrer" class="link">You can find the complete code for this tutorial here.</a></p><h2 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements-4"><div class="absolute"><a href="#system-requirements-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System Requirements</span></h2><p>Before starting, ensure your system meets these requirements:</p><ul>
<li>Java 17 or higher</li>
<li>Anthropic API key (Claude)</li>
</ul><h2 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-your-environment-4"><div class="absolute"><a href="#setting-up-your-environment-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting up your environment</span></h2><p>First, let’s install <code>java</code> and <code>gradle</code> if you haven’t already.
You can download <code>java</code> from <a href="https://www.oracle.com/java/technologies/downloads/" target="_blank" rel="noreferrer" class="link">official Oracle JDK website</a>.
Verify your <code>java</code> installation:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token function">java</span> <span class="token parameter variable">--version</span></span>
</code></pre></div></div></div><p>Now, let’s create and set up your project:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:R2m4pmpakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">MacOS/Linux</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R4m4pmpakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">Windows</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:Rq4pmpakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Create a new directory for our project</span></span>
<span class=""><span class="token function">mkdir</span> kotlin-mcp-client</span>
<span class=""><span class="token builtin class-name">cd</span> kotlin-mcp-client</span>
<!-- -->
<span class=""><span class="token comment"># Initialize a new kotlin project</span></span>
<span class="">gradle init</span>
</code></pre></div></div><span id="headlessui-tabs-panel-:R1a4pmpakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>After running <code>gradle init</code>, you will be presented with options for creating your project.
Select <strong>Application</strong> as the project type, <strong>Kotlin</strong> as the programming language, and <strong>Java 17</strong> as the Java version.</p><p>Alternatively, you can create a Kotlin application using the <a href="https://kotlinlang.org/docs/jvm-get-started.html" target="_blank" rel="noreferrer" class="link">IntelliJ IDEA project wizard</a>.</p><p>After creating the project, add the following dependencies:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:R2m6pmpakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">build.gradle.kts</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R4m6pmpakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">build.gradle</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:Rq6pmpakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token keyword">val</span> mcpVersion <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;0.4.0&quot;</span></span></span>
<span class=""><span class="token keyword">val</span> slf4jVersion <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;2.0.9&quot;</span></span></span>
<span class=""><span class="token keyword">val</span> anthropicVersion <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;0.8.0&quot;</span></span></span>
<!-- -->
<span class="">dependencies <span class="token punctuation">{</span></span>
<span class="">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;io.modelcontextprotocol:kotlin-sdk:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">mcpVersion</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.slf4j:slf4j-nop:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">slf4jVersion</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.anthropic:anthropic-java:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">anthropicVersion</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div><span id="headlessui-tabs-panel-:R1a6pmpakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><p>Also, add the following plugins to your build script:</p><button type="button" aria-hidden="true" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></button><div id="code-group" class="code-group mt-5 mb-8 flex flex-col not-prose relative overflow-hidden rounded-2xl dark:border-gray-800/50 bg-[#0F1117] border border-transparent dark:bg-codeblock text-gray-50 codeblock-dark"><div class="relative border-b border-gray-900/80 bg-[#0F1117] dark:bg-codeblock" data-component-part="code-group-tab-bar"><div class="text-xs leading-6 rounded-t-xl flex overflow-x-auto overflow-y-hidden mr-12 scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25" role="tablist" aria-orientation="horizontal"><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-primary-light" id="headlessui-tabs-tab-:R2m7pmpakql6:" role="tab" type="button" aria-selected="true" tabindex="0" data-headlessui-state="selected"><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">build.gradle.kts</div><div class="absolute inset-0 border-b pointer-events-none border-primary dark:border-primary-light"></div></button><button class="group flex items-center relative px-2 pt-2.5 pb-2 outline-none whitespace-nowrap font-medium text-gray-400" id="headlessui-tabs-tab-:R4m7pmpakql6:" role="tab" type="button" aria-selected="false" tabindex="-1" data-headlessui-state=""><div class="px-2 rounded-lg z-10 group-hover:bg-gray-700/70 group-hover:text-primary-light">build.gradle</div></button></div><div class="flex h-full absolute top-0 pr-4 right-0 rounded-tr z-10"><div class="flex items-center justify-center h-[42px]"></div></div></div><div class="flex flex-1 overflow-hidden"><div class="relative min-w-full w-full transition-[height] duration-300 ease-in-out" style="font-variant-ligatures:none;height:auto" id="headlessui-tabs-panel-:Rq7pmpakql6:" role="tabpanel" tabindex="0" data-headlessui-state="selected"><div class="flex-none p-5 overflow-x-auto text-sm h-full scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25 leading-6" data-component-part="code-group-tab-content"><pre class="language-kotlin"><code class="language-kotlin"><span class="">plugins <span class="token punctuation">{</span></span>
<span class="">    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.github.johnrengelman.shadow&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;8.1.1&quot;</span></span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div><span id="headlessui-tabs-panel-:R1a7pmpakql6:" role="tabpanel" tabindex="-1" style="position:fixed;top:1px;left:1px;width:1px;height:0;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0"></span></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-your-api-key-3"><div class="absolute"><a href="#setting-up-your-api-key-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting up your API key</span></h2><p>You’ll need an Anthropic API key from the <a href="https://console.anthropic.com/settings/keys" target="_blank" rel="noreferrer" class="link">Anthropic Console</a>.</p><p>Set up your API key:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token builtin class-name">export</span> <span class="token assign-left variable">ANTHROPIC_API_KEY</span><span class="token operator">=</span><span class="token string">&#x27;your-anthropic-api-key-here&#x27;</span></span>
</code></pre></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-amber-500/20 bg-amber-50/50 dark:border-amber-500/30 dark:bg-amber-500/10" data-callout-type="warning"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg class="flex-none w-5 h-5 text-amber-400 dark:text-amber-300/80" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" aria-label="Warning"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-amber-900 dark:text-amber-200" data-component-part="callout-content"><p>Make sure your keep your <code>ANTHROPIC_API_KEY</code> secure!</p></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="creating-the-client-3"><div class="absolute"><a href="#creating-the-client-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Creating the Client</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="basic-client-structure-3"><div class="absolute"><a href="#basic-client-structure-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Basic Client Structure</span></h3><p>First, let’s create the basic client class:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token keyword">class</span> MCPClient <span class="token operator">:</span> AutoCloseable <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">private</span> <span class="token keyword">val</span> anthropic <span class="token operator">=</span> AnthropicOkHttpClient<span class="token punctuation">.</span><span class="token function">fromEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">private</span> <span class="token keyword">val</span> mcp<span class="token operator">:</span> Client <span class="token operator">=</span> <span class="token function">Client</span><span class="token punctuation">(</span>clientInfo <span class="token operator">=</span> <span class="token function">Implementation</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;mcp-client-cli&quot;</span></span><span class="token punctuation">,</span> version <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;1.0.0&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> tools<span class="token operator">:</span> List<span class="token operator">&lt;</span>ToolUnion<span class="token operator">&gt;</span></span>
<!-- -->
<span class="">    <span class="token comment">// methods will go here</span></span>
<!-- -->
<span class="">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">        runBlocking <span class="token punctuation">{</span></span>
<span class="">            mcp<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">            anthropic<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="server-connection-management-3"><div class="absolute"><a href="#server-connection-management-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Server connection management</span></h3><p>Next, we’ll implement the method to connect to an MCP server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">connectToServer</span><span class="token punctuation">(</span>serverScriptPath<span class="token operator">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token keyword">val</span> command <span class="token operator">=</span> buildList <span class="token punctuation">{</span></span>
<span class="">            <span class="token keyword">when</span> <span class="token punctuation">(</span>serverScriptPath<span class="token punctuation">.</span><span class="token function">substringAfterLast</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;.&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">                <span class="token string-literal singleline"><span class="token string">&quot;js&quot;</span></span> <span class="token operator">-&gt;</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;node&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">                <span class="token string-literal singleline"><span class="token string">&quot;py&quot;</span></span> <span class="token operator">-&gt;</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;os.name&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lowercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;win&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token string-literal singleline"><span class="token string">&quot;python&quot;</span></span> <span class="token keyword">else</span> <span class="token string-literal singleline"><span class="token string">&quot;python3&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">                <span class="token string-literal singleline"><span class="token string">&quot;jar&quot;</span></span> <span class="token operator">-&gt;</span> <span class="token function">addAll</span><span class="token punctuation">(</span><span class="token function">listOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;java&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;-jar&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">                <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token keyword">throw</span> <span class="token function">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Server script must be a .js, .py or .jar file&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">            <span class="token punctuation">}</span></span>
<span class="">            <span class="token function">add</span><span class="token punctuation">(</span>serverScriptPath<span class="token punctuation">)</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<!-- -->
<span class="">        <span class="token keyword">val</span> process <span class="token operator">=</span> <span class="token function">ProcessBuilder</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token keyword">val</span> transport <span class="token operator">=</span> <span class="token function">StdioClientTransport</span><span class="token punctuation">(</span></span>
<span class="">            input <span class="token operator">=</span> process<span class="token punctuation">.</span>inputStream<span class="token punctuation">.</span><span class="token function">asSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">buffered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">            output <span class="token operator">=</span> process<span class="token punctuation">.</span>outputStream<span class="token punctuation">.</span><span class="token function">asSink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">buffered</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token punctuation">)</span></span>
<!-- -->
<span class="">        mcp<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>transport<span class="token punctuation">)</span></span>
<!-- -->
<span class="">        <span class="token keyword">val</span> toolsResult <span class="token operator">=</span> mcp<span class="token punctuation">.</span><span class="token function">listTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">        tools <span class="token operator">=</span> toolsResult<span class="token operator">?</span><span class="token punctuation">.</span>tools<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">map</span> <span class="token punctuation">{</span> tool <span class="token operator">-&gt;</span></span>
<span class="">            ToolUnion<span class="token punctuation">.</span><span class="token function">ofTool</span><span class="token punctuation">(</span></span>
<span class="">                Tool<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">                    <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span>tool<span class="token punctuation">.</span>name<span class="token punctuation">)</span></span>
<span class="">                    <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span>tool<span class="token punctuation">.</span>description <span class="token operator">?:</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">                    <span class="token punctuation">.</span><span class="token function">inputSchema</span><span class="token punctuation">(</span></span>
<span class="">                        Tool<span class="token punctuation">.</span>InputSchema<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">                            <span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>JsonValue<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>tool<span class="token punctuation">.</span>inputSchema<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">                            <span class="token punctuation">.</span><span class="token function">properties</span><span class="token punctuation">(</span>tool<span class="token punctuation">.</span>inputSchema<span class="token punctuation">.</span>properties<span class="token punctuation">.</span><span class="token function">toJsonValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">                            <span class="token punctuation">.</span><span class="token function">putAdditionalProperty</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;required&quot;</span></span><span class="token punctuation">,</span> JsonValue<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>tool<span class="token punctuation">.</span>inputSchema<span class="token punctuation">.</span>required<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">                            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">                    <span class="token punctuation">)</span></span>
<span class="">                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">            <span class="token punctuation">)</span></span>
<span class="">        <span class="token punctuation">}</span> <span class="token operator">?:</span> <span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">        <span class="token function">println</span><span class="token punctuation">(</span>&quot;Connected <span class="token keyword">to</span> server with tools<span class="token operator">:</span> $<span class="token punctuation">{</span>tools<span class="token punctuation">.</span><span class="token function">joinToString</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;, &quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span><span class="token function">tool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>&quot;<span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> Exception<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Failed to connect to MCP server: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">e</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">        <span class="token keyword">throw</span> e</span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><p>Also create a helper function to convert from <code>JsonObject</code> to <code>JsonValue</code> for Anthropic:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token keyword">private</span> <span class="token keyword">fun</span> JsonObject<span class="token punctuation">.</span><span class="token function">toJsonValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> JsonValue <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">val</span> mapper <span class="token operator">=</span> <span class="token function">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">val</span> node <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">readTree</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">return</span> JsonValue<span class="token punctuation">.</span><span class="token function">fromJsonNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="query-processing-logic-3"><div class="absolute"><a href="#query-processing-logic-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Query processing logic</span></h3><p>Now let’s add the core functionality for processing queries and handling tool calls:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token keyword">private</span> <span class="token keyword">val</span> messageParamsBuilder<span class="token operator">:</span> MessageCreateParams<span class="token punctuation">.</span>Builder <span class="token operator">=</span> MessageCreateParams<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span>Model<span class="token punctuation">.</span>CLAUDE_3_5_SONNET_20241022<span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">.</span><span class="token function">maxTokens</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></span>
<!-- -->
<span class=""><span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">processQuery</span><span class="token punctuation">(</span>query<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token operator">:</span> String <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">val</span> messages <span class="token operator">=</span> <span class="token function">mutableListOf</span><span class="token punctuation">(</span></span>
<span class="">        MessageParam<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">            <span class="token punctuation">.</span><span class="token function">role</span><span class="token punctuation">(</span>MessageParam<span class="token punctuation">.</span>Role<span class="token punctuation">.</span>USER<span class="token punctuation">)</span></span>
<span class="">            <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span></span>
<span class="">            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">val</span> response <span class="token operator">=</span> anthropic<span class="token punctuation">.</span><span class="token function">messages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span></span>
<span class="">        messageParamsBuilder</span>
<span class="">            <span class="token punctuation">.</span><span class="token function">messages</span><span class="token punctuation">(</span>messages<span class="token punctuation">)</span></span>
<span class="">            <span class="token punctuation">.</span><span class="token function">tools</span><span class="token punctuation">(</span>tools<span class="token punctuation">)</span></span>
<span class="">            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">val</span> finalText <span class="token operator">=</span> mutableListOf<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    response<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span> content <span class="token operator">-&gt;</span></span>
<span class="">        <span class="token keyword">when</span> <span class="token punctuation">{</span></span>
<span class="">            content<span class="token punctuation">.</span><span class="token function">isText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> finalText<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?:</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">            content<span class="token punctuation">.</span><span class="token function">isToolUse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="">                <span class="token keyword">val</span> toolName <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">toolUse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">                <span class="token keyword">val</span> toolArgs <span class="token operator">=</span></span>
<span class="">                    content<span class="token punctuation">.</span><span class="token function">toolUse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">_input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span><span class="token keyword">object</span> <span class="token operator">:</span> TypeReference<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> JsonValue<span class="token operator">&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">                <span class="token keyword">val</span> result <span class="token operator">=</span> mcp<span class="token punctuation">.</span><span class="token function">callTool</span><span class="token punctuation">(</span></span>
<span class="">                    name <span class="token operator">=</span> toolName<span class="token punctuation">,</span></span>
<span class="">                    arguments <span class="token operator">=</span> toolArgs <span class="token operator">?:</span> <span class="token function">emptyMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">                <span class="token punctuation">)</span></span>
<span class="">                finalText<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;[Calling tool </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">toolName</span></span><span class="token string"> with args </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">toolArgs</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">                messages<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="">                    MessageParam<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">                        <span class="token punctuation">.</span><span class="token function">role</span><span class="token punctuation">(</span>MessageParam<span class="token punctuation">.</span>Role<span class="token punctuation">.</span>USER<span class="token punctuation">)</span></span>
<span class="">                        <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span></span>
<span class="">                            <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>&quot;</span>
<span class="">                                <span class="token string-literal singleline"><span class="token string">&quot;type&quot;</span></span><span class="token operator">:</span> <span class="token string-literal singleline"><span class="token string">&quot;tool_result&quot;</span></span><span class="token punctuation">,</span></span>
<span class="">                                <span class="token string-literal singleline"><span class="token string">&quot;tool_name&quot;</span></span><span class="token operator">:</span> $toolName<span class="token punctuation">,</span></span>
<span class="">                                <span class="token string-literal singleline"><span class="token string">&quot;result&quot;</span></span><span class="token operator">:</span> $<span class="token punctuation">{</span>result<span class="token operator">?</span><span class="token punctuation">.</span>content<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">joinToString</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\n&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>it <span class="token keyword">as</span> TextContent<span class="token punctuation">)</span><span class="token punctuation">.</span>text <span class="token operator">?:</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="">                            <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span>&quot;<span class="token punctuation">.</span><span class="token function">trimIndent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">                        <span class="token punctuation">)</span></span>
<span class="">                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">                <span class="token punctuation">)</span></span>
<!-- -->
<span class="">                <span class="token keyword">val</span> aiResponse <span class="token operator">=</span> anthropic<span class="token punctuation">.</span><span class="token function">messages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span></span>
<span class="">                    messageParamsBuilder</span>
<span class="">                        <span class="token punctuation">.</span><span class="token function">messages</span><span class="token punctuation">(</span>messages<span class="token punctuation">)</span></span>
<span class="">                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">                <span class="token punctuation">)</span></span>
<!-- -->
<span class="">                finalText<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>aiResponse<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?:</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">            <span class="token punctuation">}</span></span>
<span class="">        <span class="token punctuation">}</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<!-- -->
<span class="">    <span class="token keyword">return</span> finalText<span class="token punctuation">.</span><span class="token function">joinToString</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\n&quot;</span></span><span class="token punctuation">,</span> prefix <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">,</span> postfix <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="interactive-chat"><div class="absolute"><a href="#interactive-chat" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Interactive chat</span></h3><p>We’ll add the chat loop:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">chatLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\nMCP Client Started!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Type your queries or &#x27;quit&#x27; to exit.&quot;</span></span><span class="token punctuation">)</span></span>
<!-- -->
<span class="">    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\nQuery: &quot;</span></span><span class="token punctuation">)</span></span>
<span class="">        <span class="token keyword">val</span> message <span class="token operator">=</span> <span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?:</span> <span class="token keyword">break</span></span>
<span class="">        <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">lowercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string-literal singleline"><span class="token string">&quot;quit&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">break</span></span>
<span class="">        <span class="token keyword">val</span> response <span class="token operator">=</span> <span class="token function">processQuery</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="">        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">response</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="main-entry-point-3"><div class="absolute"><a href="#main-entry-point-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Main entry point</span></h3><p>Finally, we’ll add the main execution function:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-kotlin"><code class="language-kotlin"><span class=""><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=</span> runBlocking <span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token function">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Usage: java -jar &lt;your_path&gt;/build/libs/kotlin-mcp-client-0.1.0-all.jar &lt;path_to_server_script&gt;&quot;</span></span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">val</span> serverPath <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token keyword">val</span> client <span class="token operator">=</span> <span class="token function">MCPClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    client<span class="token punctuation">.</span><span class="token function">use</span> <span class="token punctuation">{</span></span>
<span class="">        client<span class="token punctuation">.</span><span class="token function">connectToServer</span><span class="token punctuation">(</span>serverPath<span class="token punctuation">)</span></span>
<span class="">        client<span class="token punctuation">.</span><span class="token function">chatLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="running-the-client-3"><div class="absolute"><a href="#running-the-client-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Running the client</span></h2><p>To run your client with any MCP server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">./gradlew build</span>
<!-- -->
<span class=""><span class="token comment"># Run the client</span></span>
<span class=""><span class="token function">java</span> <span class="token parameter variable">-jar</span> build/libs/<span class="token operator">&lt;</span>your-jar-name<span class="token operator">&gt;</span>.jar path/to/server.jar <span class="token comment"># jvm server</span></span>
<span class=""><span class="token function">java</span> <span class="token parameter variable">-jar</span> build/libs/<span class="token operator">&lt;</span>your-jar-name<span class="token operator">&gt;</span>.jar path/to/server.py <span class="token comment"># python server</span></span>
<span class=""><span class="token function">java</span> <span class="token parameter variable">-jar</span> build/libs/<span class="token operator">&lt;</span>your-jar-name<span class="token operator">&gt;</span>.jar path/to/build/index.js <span class="token comment"># node server</span></span>
</code></pre></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: <code>java -jar build/libs/kotlin-mcp-client-0.1.0-all.jar .../samples/weather-stdio-server/build/libs/weather-stdio-server-0.1.0-all.jar</code></p></div></div><p><strong>The client will:</strong></p><ol>
<li>Connect to the specified server</li>
<li>List available tools</li>
<li>Start an interactive chat session where you can:<!-- -->
<ul>
<li>Enter queries</li>
<li>See tool executions</li>
<li>Get responses from Claude</li>
</ul>
</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="how-it-works-4"><div class="absolute"><a href="#how-it-works-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">How it works</span></h2><p>Here’s a high-level workflow schema:</p><p>When you submit a query:</p><ol>
<li>The client gets the list of available tools from the server</li>
<li>Your query is sent to Claude along with tool descriptions</li>
<li>Claude decides which tools (if any) to use</li>
<li>The client executes any requested tool calls through the server</li>
<li>Results are sent back to Claude</li>
<li>Claude provides a natural language response</li>
<li>The response is displayed to you</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="best-practices-3"><div class="absolute"><a href="#best-practices-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Best practices</span></h2><ol>
<li>
<p><strong>Error Handling</strong></p>
<ul>
<li>Leverage Kotlin’s type system to model errors explicitly</li>
<li>Wrap external tool and API calls in <code>try-catch</code> blocks when exceptions are possible</li>
<li>Provide clear and meaningful error messages</li>
<li>Handle network timeouts and connection issues gracefully</li>
</ul>
</li>
<li>
<p><strong>Security</strong></p>
<ul>
<li>Store API keys and secrets securely in <code>local.properties</code>, environment variables, or secret managers</li>
<li>Validate all external responses to avoid unexpected or unsafe data usage</li>
<li>Be cautious with permissions and trust boundaries when using tools</li>
</ul>
</li>
</ol><h2 class="flex whitespace-pre-wrap group font-semibold" id="troubleshooting-3"><div class="absolute"><a href="#troubleshooting-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Troubleshooting</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="server-path-issues-3"><div class="absolute"><a href="#server-path-issues-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Server Path Issues</span></h3><ul>
<li>Double-check the path to your server script is correct</li>
<li>Use the absolute path if the relative path isn’t working</li>
<li>For Windows users, make sure to use forward slashes (/) or escaped backslashes (\) in the path</li>
<li>Make sure that the required runtime is installed (java for Java, npm for Node.js, or uv for Python)</li>
<li>Verify the server file has the correct extension (.jar for Java, .js for Node.js or .py for Python)</li>
</ul><p>Example of correct path usage:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class=""><span class="token comment"># Relative path</span></span>
<span class=""><span class="token function">java</span> <span class="token parameter variable">-jar</span> build/libs/client.jar ./server/build/libs/server.jar</span>
<!-- -->
<span class=""><span class="token comment"># Absolute path</span></span>
<span class=""><span class="token function">java</span> <span class="token parameter variable">-jar</span> build/libs/client.jar /Users/username/projects/mcp-server/build/libs/server.jar</span>
<!-- -->
<span class=""><span class="token comment"># Windows path (either format works)</span></span>
<span class=""><span class="token function">java</span> <span class="token parameter variable">-jar</span> build/libs/client.jar C:/projects/mcp-server/build/libs/server.jar</span>
<span class=""><span class="token function">java</span> <span class="token parameter variable">-jar</span> build/libs/client.jar C:<span class="token punctuation">\</span><span class="token punctuation">\</span>projects<span class="token punctuation">\</span><span class="token punctuation">\</span>mcp-server<span class="token punctuation">\</span><span class="token punctuation">\</span>build<span class="token punctuation">\</span><span class="token punctuation">\</span>libs<span class="token punctuation">\</span><span class="token punctuation">\</span>server.jar</span>
</code></pre></div></div></div><h3 class="flex whitespace-pre-wrap group font-semibold" id="response-timing-3"><div class="absolute"><a href="#response-timing-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Response Timing</span></h3><ul>
<li>The first response might take up to 30 seconds to return</li>
<li>This is normal and happens while:<!-- -->
<ul>
<li>The server initializes</li>
<li>Claude processes the query</li>
<li>Tools are being executed</li>
</ul>
</li>
<li>Subsequent responses are typically faster</li>
<li>Don’t interrupt the process during this initial waiting period</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="common-error-messages-3"><div class="absolute"><a href="#common-error-messages-3" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Common Error Messages</span></h3><p>If you see:</p><ul>
<li><code>Connection refused</code>: Ensure the server is running and the path is correct</li>
<li><code>Tool execution failed</code>: Verify the tool’s required environment variables are set</li>
<li><code>ANTHROPIC_API_KEY is not set</code>: Check your environment variables</li>
</ul></div><div><p><a href="https://github.com/modelcontextprotocol/csharp-sdk/tree/main/samples/QuickstartClient" target="_blank" rel="noreferrer" class="link">You can find the complete code for this tutorial here.</a></p><h2 class="flex whitespace-pre-wrap group font-semibold" id="system-requirements-5"><div class="absolute"><a href="#system-requirements-5" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">System Requirements</span></h2><p>Before starting, ensure your system meets these requirements:</p><ul>
<li>.NET 8.0 or higher</li>
<li>Anthropic API key (Claude)</li>
<li>Windows, Linux, or MacOS</li>
</ul><h2 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-your-environment-5"><div class="absolute"><a href="#setting-up-your-environment-5" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting up your environment</span></h2><p>First, create a new .NET project:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">dotnet new console <span class="token parameter variable">-n</span> QuickstartClient</span>
<span class=""><span class="token builtin class-name">cd</span> QuickstartClient</span>
</code></pre></div></div></div><p>Then, add the required dependencies to your project:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">dotnet <span class="token function">add</span> package ModelContextProtocol <span class="token parameter variable">--prerelease</span></span>
<span class="">dotnet <span class="token function">add</span> package Anthropic.SDK</span>
<span class="">dotnet <span class="token function">add</span> package Microsoft.Extensions.Hosting</span>
</code></pre></div></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="setting-up-your-api-key-4"><div class="absolute"><a href="#setting-up-your-api-key-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Setting up your API key</span></h2><p>You’ll need an Anthropic API key from the <a href="https://console.anthropic.com/settings/keys" target="_blank" rel="noreferrer" class="link">Anthropic Console</a>.</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">dotnet user-secrets init</span>
<span class="">dotnet user-secrets <span class="token builtin class-name">set</span> <span class="token string">&quot;ANTHROPIC_API_KEY&quot;</span> <span class="token string">&quot;&lt;your key here&gt;&quot;</span></span>
</code></pre></div></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="creating-the-client-4"><div class="absolute"><a href="#creating-the-client-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Creating the Client</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="basic-client-structure-4"><div class="absolute"><a href="#basic-client-structure-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Basic Client Structure</span></h3><p>First, let’s setup the basic client class in the file <code>Program.cs</code>:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-csharp"><code class="language-csharp"><span class=""><span class="token keyword">using</span> <span class="token namespace">Anthropic<span class="token punctuation">.</span>SDK</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>AI</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>Configuration</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>Hosting</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">using</span> <span class="token namespace">ModelContextProtocol<span class="token punctuation">.</span>Client</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">using</span> <span class="token namespace">ModelContextProtocol<span class="token punctuation">.</span>Protocol<span class="token punctuation">.</span>Transport</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> Host<span class="token punctuation">.</span><span class="token function">CreateApplicationBuilder</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">builder<span class="token punctuation">.</span>Configuration</span>
<span class="">    <span class="token punctuation">.</span><span class="token function">AddEnvironmentVariables</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddUserSecrets</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Program<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
</code></pre></div></div></div><p>This creates the beginnings of a .NET console application that can read the API key from user secrets.</p><p>Next, we’ll setup the MCP Client:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-csharp"><code class="language-csharp"><span class=""><span class="token keyword">var</span> <span class="token punctuation">(</span>command<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">GetCommandAndArguments</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token class-name"><span class="token keyword">var</span></span> clientTransport <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StdioClientTransport</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">{</span></span>
<span class="">    Name <span class="token operator">=</span> <span class="token string">&quot;Demo Server&quot;</span><span class="token punctuation">,</span></span>
<span class="">    Command <span class="token operator">=</span> command<span class="token punctuation">,</span></span>
<span class="">    Arguments <span class="token operator">=</span> arguments<span class="token punctuation">,</span></span>
<span class=""><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token keyword">await</span> <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> mcpClient <span class="token operator">=</span> <span class="token keyword">await</span> McpClientFactory<span class="token punctuation">.</span><span class="token function">CreateAsync</span><span class="token punctuation">(</span>clientTransport<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token class-name"><span class="token keyword">var</span></span> tools <span class="token operator">=</span> <span class="token keyword">await</span> mcpClient<span class="token punctuation">.</span><span class="token function">ListToolsAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> tool <span class="token keyword">in</span> tools<span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">{</span></span>
<span class="">    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Connected to server with tools: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">tool<span class="token punctuation">.</span>Name</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><p>Add this function at the end of the <code>Program.cs</code> file:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-csharp"><code class="language-csharp"><span class=""><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token punctuation">(</span><span class="token keyword">string</span> command<span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arguments<span class="token punctuation">)</span></span> <span class="token function">GetCommandAndArguments</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">return</span> args <span class="token keyword">switch</span></span>
<span class="">    <span class="token punctuation">{</span></span>
<span class="">        <span class="token punctuation">[</span><span class="token class-name"><span class="token keyword">var</span></span> script<span class="token punctuation">]</span> <span class="token keyword">when</span> script<span class="token punctuation">.</span><span class="token function">EndsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.py&quot;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">[</span><span class="token class-name"><span class="token keyword">var</span></span> script<span class="token punctuation">]</span> <span class="token keyword">when</span> script<span class="token punctuation">.</span><span class="token function">EndsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.js&quot;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">        <span class="token punctuation">[</span><span class="token class-name"><span class="token keyword">var</span></span> script<span class="token punctuation">]</span> <span class="token keyword">when</span> Directory<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>File<span class="token punctuation">.</span><span class="token function">Exists</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> script<span class="token punctuation">.</span><span class="token function">EndsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.csproj&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token string">&quot;dotnet&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--project&quot;</span><span class="token punctuation">,</span> script<span class="token punctuation">,</span> <span class="token string">&quot;--no-build&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="">        _ <span class="token operator">=&gt;</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NotSupportedException</span><span class="token punctuation">(</span><span class="token string">&quot;An unsupported server script was provided. Supported scripts are .py, .js, or .csproj&quot;</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><p>This creates a MCP client that will connect to a server that is provided as a command line argument. It then lists the available tools from the connected server.</p><h3 class="flex whitespace-pre-wrap group font-semibold" id="query-processing-logic-4"><div class="absolute"><a href="#query-processing-logic-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Query processing logic</span></h3><p>Now let’s add the core functionality for processing queries and handling tool calls:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-csharp"><code class="language-csharp"><span class=""><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> anthropicClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AnthropicClient</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">APIAuthentication</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>Configuration<span class="token punctuation">[</span><span class="token string">&quot;ANTHROPIC_API_KEY&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">.</span>Messages</span>
<span class="">    <span class="token punctuation">.</span><span class="token function">AsBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">.</span><span class="token function">UseFunctionInvocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token class-name"><span class="token keyword">var</span></span> options <span class="token operator">=</span> <span class="token keyword">new</span> ChatOptions</span>
<span class=""><span class="token punctuation">{</span></span>
<span class="">    MaxOutputTokens <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="">    ModelId <span class="token operator">=</span> <span class="token string">&quot;claude-3-5-sonnet-20241022&quot;</span><span class="token punctuation">,</span></span>
<span class="">    Tools <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token range operator">..</span> tools<span class="token punctuation">]</span></span>
<span class=""><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">Console<span class="token punctuation">.</span>ForegroundColor <span class="token operator">=</span> ConsoleColor<span class="token punctuation">.</span>Green<span class="token punctuation">;</span></span>
<span class="">Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;MCP Client Started!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">Console<span class="token punctuation">.</span><span class="token function">ResetColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class=""><span class="token function">PromptForInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class=""><span class="token keyword">while</span><span class="token punctuation">(</span>Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token class-name"><span class="token keyword">string</span></span> query <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">&quot;exit&quot;</span><span class="token punctuation">.</span><span class="token function">Equals</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> StringComparison<span class="token punctuation">.</span>OrdinalIgnoreCase<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">{</span></span>
<span class="">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">{</span></span>
<span class="">        <span class="token function">PromptForInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">        <span class="token keyword">continue</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<!-- -->
<span class="">    <span class="token keyword">await</span> <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> message <span class="token keyword">in</span> anthropicClient<span class="token punctuation">.</span><span class="token function">GetStreamingResponseAsync</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="">    <span class="token punctuation">{</span></span>
<span class="">        Console<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    <span class="token punctuation">}</span></span>
<span class="">    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<!-- -->
<span class="">    <span class="token function">PromptForInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
<!-- -->
<span class=""><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">PromptForInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class=""><span class="token punctuation">{</span></span>
<span class="">    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Enter a command (or &#x27;exit&#x27; to quit):&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    Console<span class="token punctuation">.</span>ForegroundColor <span class="token operator">=</span> ConsoleColor<span class="token punctuation">.</span>Cyan<span class="token punctuation">;</span></span>
<span class="">    Console<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token string">&quot;&gt; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="">    Console<span class="token punctuation">.</span><span class="token function">ResetColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class=""><span class="token punctuation">}</span></span>
</code></pre></div></div></div><h2 class="flex whitespace-pre-wrap group font-semibold" id="key-components-explained-2"><div class="absolute"><a href="#key-components-explained-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Key Components Explained</span></h2><h3 class="flex whitespace-pre-wrap group font-semibold" id="1-client-initialization-2"><div class="absolute"><a href="#1-client-initialization-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">1. Client Initialization</span></h3><ul>
<li>The client is initialized using <code>McpClientFactory.CreateAsync()</code>, which sets up the transport type and command to run the server.</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="2-server-connection-2"><div class="absolute"><a href="#2-server-connection-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">2. Server Connection</span></h3><ul>
<li>Supports Python, Node.js, and .NET servers.</li>
<li>The server is started using the command specified in the arguments.</li>
<li>Configures to use stdio for communication with the server.</li>
<li>Initializes the session and available tools.</li>
</ul><h3 class="flex whitespace-pre-wrap group font-semibold" id="3-query-processing-2"><div class="absolute"><a href="#3-query-processing-2" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">3. Query Processing</span></h3><ul>
<li>Leverages <a href="https://learn.microsoft.com/dotnet/ai/ai-extensions" target="_blank" rel="noreferrer" class="link">Microsoft.Extensions.AI</a> for the chat client.</li>
<li>Configures the <code>IChatClient</code> to use automatic tool (function) invocation.</li>
<li>The client reads user input and sends it to the server.</li>
<li>The server processes the query and returns a response.</li>
<li>The response is displayed to the user.</li>
</ul><h2 class="flex whitespace-pre-wrap group font-semibold" id="running-the-client-4"><div class="absolute"><a href="#running-the-client-4" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Running the Client</span></h2><p>To run your client with any MCP server:</p><div class="code-block mt-5 mb-8 not-prose rounded-2xl relative group text-gray-50 bg-[#0F1117] dark:bg-codeblock ring-1 ring-transparent dark:ring-gray-800/50 codeblock-dark"><div class="min-w-full relative text-sm leading-6 children:!my-0 children:!shadow-none children:!bg-transparent transition-[height] duration-300 ease-in-out" data-component-part="code-block-root" style="font-variant-ligatures:none;height:auto"><div class="overflow-x-auto h-full p-5 [&amp;&gt;pre&gt;code]:pr-[3rem] [&amp;&gt;pre&gt;code&gt;span.line-highlight]:min-w-[calc(100%+3rem)] overflow-y-hidden scrollbar-thin scrollbar-thumb-rounded scrollbar-thumb-white/20 dark:scrollbar-thumb-white/20 hover:scrollbar-thumb-white/25 dark:hover:scrollbar-thumb-white/25 active:scrollbar-thumb-white/25 dark:active:scrollbar-thumb-white/25"><pre class="language-bash"><code class="language-bash"><span class="">dotnet run -- path/to/server.csproj <span class="token comment"># dotnet server</span></span>
<span class="">dotnet run -- path/to/server.py <span class="token comment"># python server</span></span>
<span class="">dotnet run -- path/to/server.js <span class="token comment"># node server</span></span>
</code></pre></div></div></div><div class="callout my-4 px-5 py-4 overflow-hidden rounded-2xl flex gap-3 border border-sky-500/20 bg-sky-50/50 dark:border-sky-500/30 dark:bg-sky-500/10" data-callout-type="note"><div class="mt-0.5 w-4" data-component-part="callout-icon"><svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-sky-500" aria-label="Note"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 1.3C10.14 1.3 12.7 3.86 12.7 7C12.7 10.14 10.14 12.7 7 12.7C5.48908 12.6974 4.0408 12.096 2.97241 11.0276C1.90403 9.9592 1.30264 8.51092 1.3 7C1.3 3.86 3.86 1.3 7 1.3ZM7 0C3.14 0 0 3.14 0 7C0 10.86 3.14 14 7 14C10.86 14 14 10.86 14 7C14 3.14 10.86 0 7 0ZM8 3H6V8H8V3ZM8 9H6V11H8V9Z"></path></svg></div><div class="text-sm prose min-w-0 w-full text-sky-900 dark:text-sky-200" data-component-part="callout-content"><p>If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: <code>dotnet run -- path/to/QuickstartWeatherServer</code>.</p></div></div><p>The client will:</p><ol>
<li>Connect to the specified server</li>
<li>List available tools</li>
<li>Start an interactive chat session where you can:<!-- -->
<ul>
<li>Enter queries</li>
<li>See tool executions</li>
<li>Get responses from Claude</li>
</ul>
</li>
<li>Exit the session when done</li>
</ol><p>Here’s an example of what it should look like it connected to a weather server quickstart:</p><div><div data-name="frame" class="frame p-2 not-prose relative bg-gray-50/50 rounded-2xl overflow-hidden dark:bg-gray-800/25"><div style="background-position:10px 10px" class="absolute inset-0 bg-grid-neutral-200/20 [mask-image:linear-gradient(0deg,#fff,rgba(255,255,255,0.6))] dark:bg-grid-white/5 dark:[mask-image:linear-gradient(0deg,rgba(255,255,255,0.1),rgba(255,255,255,0.5))]"></div><div class="relative rounded-xl overflow-hidden flex justify-center"></div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-2xl dark:border-white/5"></div></div></div></div></div></div>
<h2 class="flex whitespace-pre-wrap group font-semibold" id="next-steps"><div class="absolute"><a href="#next-steps" class="-ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Navigate to header">​<div class="w-6 h-6 rounded-md flex items-center justify-center shadow-sm text-gray-400 dark:text-white/50 dark:bg-background-dark dark:brightness-[1.35] dark:ring-1 dark:hover:brightness-150 bg-white ring-1 ring-gray-400/30 dark:ring-gray-700/25 hover:ring-gray-400/60 dark:hover:ring-white/20"><svg xmlns="http://www.w3.org/2000/svg" fill="gray" height="12px" viewBox="0 0 576 512"><path d="M0 256C0 167.6 71.6 96 160 96h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C98.1 144 48 194.1 48 256s50.1 112 112 112h72c13.3 0 24 10.7 24 24s-10.7 24-24 24H160C71.6 416 0 344.4 0 256zm576 0c0 88.4-71.6 160-160 160H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c61.9 0 112-50.1 112-112s-50.1-112-112-112H344c-13.3 0-24-10.7-24-24s10.7-24 24-24h72c88.4 0 160 71.6 160 160zM184 232H392c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"></path></svg></div></a></div><span class="cursor-pointer">Next steps</span></h2>
<div class="card-group not-prose grid gap-x-4 sm:grid-cols-2"><a class="card block font-normal group relative my-2 ring-2 ring-transparent rounded-2xl bg-white dark:bg-background-dark border border-gray-950/10 dark:border-white/10 overflow-hidden w-full cursor-pointer hover:!border-primary dark:hover:!border-primary-light" href="/examples"><div class="px-6 py-5 relative" data-component-part="card-content-container"><div id="card-link-arrow-icon" class="absolute text-gray-400 dark:text-gray-500 group-hover:text-primary dark:group-hover:text-primary-light top-5 right-5 hidden"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-up-right w-4 h-4"><path d="M7 7h10v10"></path><path d="M7 17 17 7"></path></svg></div><div class="h-6 w-6 fill-gray-800 dark:fill-gray-100 text-gray-800 dark:text-gray-100" data-component-part="card-icon"><svg class="h-6 w-6 bg-primary dark:bg-primary-light" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/grid.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/grid.svg);mask-repeat:no-repeat;mask-position:center"></svg></div><div><h2 class="not-prose font-semibold text-base text-gray-800 dark:text-white mt-4" contenteditable="false" data-component-part="card-title">Example servers</h2><div class="prose mt-1 font-normal text-sm leading-6 text-gray-600 dark:text-gray-400" data-component-part="card-content"><p>Check out our gallery of official MCP servers and implementations</p></div></div></div></a><a class="card block font-normal group relative my-2 ring-2 ring-transparent rounded-2xl bg-white dark:bg-background-dark border border-gray-950/10 dark:border-white/10 overflow-hidden w-full cursor-pointer hover:!border-primary dark:hover:!border-primary-light" href="/clients"><div class="px-6 py-5 relative" data-component-part="card-content-container"><div id="card-link-arrow-icon" class="absolute text-gray-400 dark:text-gray-500 group-hover:text-primary dark:group-hover:text-primary-light top-5 right-5 hidden"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-up-right w-4 h-4"><path d="M7 7h10v10"></path><path d="M7 17 17 7"></path></svg></div><div class="h-6 w-6 fill-gray-800 dark:fill-gray-100 text-gray-800 dark:text-gray-100" data-component-part="card-icon"><svg class="h-6 w-6 bg-primary dark:bg-primary-light" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/cubes.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/cubes.svg);mask-repeat:no-repeat;mask-position:center"></svg></div><div><h2 class="not-prose font-semibold text-base text-gray-800 dark:text-white mt-4" contenteditable="false" data-component-part="card-title">Clients</h2><div class="prose mt-1 font-normal text-sm leading-6 text-gray-600 dark:text-gray-400" data-component-part="card-content"><p>View the list of clients that support MCP integrations</p></div></div></div></a><a class="card block font-normal group relative my-2 ring-2 ring-transparent rounded-2xl bg-white dark:bg-background-dark border border-gray-950/10 dark:border-white/10 overflow-hidden w-full cursor-pointer hover:!border-primary dark:hover:!border-primary-light" href="/tutorials/building-mcp-with-llms"><div class="px-6 py-5 relative" data-component-part="card-content-container"><div id="card-link-arrow-icon" class="absolute text-gray-400 dark:text-gray-500 group-hover:text-primary dark:group-hover:text-primary-light top-5 right-5 hidden"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-up-right w-4 h-4"><path d="M7 7h10v10"></path><path d="M7 17 17 7"></path></svg></div><div class="h-6 w-6 fill-gray-800 dark:fill-gray-100 text-gray-800 dark:text-gray-100" data-component-part="card-icon"><svg class="h-6 w-6 bg-primary dark:bg-primary-light" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/comments.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/comments.svg);mask-repeat:no-repeat;mask-position:center"></svg></div><div><h2 class="not-prose font-semibold text-base text-gray-800 dark:text-white mt-4" contenteditable="false" data-component-part="card-title">Building MCP with LLMs</h2><div class="prose mt-1 font-normal text-sm leading-6 text-gray-600 dark:text-gray-400" data-component-part="card-content"><p>Learn how to use LLMs like Claude to speed up your MCP development</p></div></div></div></a><a class="card block font-normal group relative my-2 ring-2 ring-transparent rounded-2xl bg-white dark:bg-background-dark border border-gray-950/10 dark:border-white/10 overflow-hidden w-full cursor-pointer hover:!border-primary dark:hover:!border-primary-light" href="/docs/concepts/architecture"><div class="px-6 py-5 relative" data-component-part="card-content-container"><div id="card-link-arrow-icon" class="absolute text-gray-400 dark:text-gray-500 group-hover:text-primary dark:group-hover:text-primary-light top-5 right-5 hidden"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-up-right w-4 h-4"><path d="M7 7h10v10"></path><path d="M7 17 17 7"></path></svg></div><div class="h-6 w-6 fill-gray-800 dark:fill-gray-100 text-gray-800 dark:text-gray-100" data-component-part="card-icon"><svg class="h-6 w-6 bg-primary dark:bg-primary-light" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/sitemap.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/regular/sitemap.svg);mask-repeat:no-repeat;mask-position:center"></svg></div><div><h2 class="not-prose font-semibold text-base text-gray-800 dark:text-white mt-4" contenteditable="false" data-component-part="card-title">Core architecture</h2><div class="prose mt-1 font-normal text-sm leading-6 text-gray-600 dark:text-gray-400" data-component-part="card-content"><p>Understand how MCP connects clients, servers, and LLMs</p></div></div></div></a></div></div><div class="leading-6 mt-14"><div class="feedback-toolbar pb-16 w-full"><div class="flex flex-col gap-y-4 xl:flex-col xl:gap-6 min-[1400px]:flex-row md:flex-row md:justify-end"><div class="flex flex-row gap-5 items-center grow justify-between md:justify-start xl:justify-between min-[1400px]:justify-start"><p class="text-sm text-gray-600 dark:text-gray-400">Was this page helpful?</p><div class="flex flex-row gap-3 items-center"><button class="px-3.5 py-2 flex flex-row gap-3 items-center border-standard rounded-xl text-gray-600 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 bg-white/50 dark:bg-codeblock/50 hover:border-gray-500 hover:dark:border-gray-500"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" class="fill-current"><path d="M10.1187 1.08741C8.925 0.746789 7.67813 1.43741 7.3375 2.63116L7.15938 3.25616C7.04375 3.66241 6.83438 4.03741 6.55 4.34991L4.94688 6.11241C4.66875 6.41866 4.69062 6.89366 4.99687 7.17179C5.30312 7.44991 5.77813 7.42804 6.05625 7.12179L7.65938 5.35929C8.1 4.87491 8.42188 4.29679 8.6 3.66866L8.77812 3.04366C8.89062 2.64679 9.30625 2.41554 9.70625 2.52804C10.1063 2.64054 10.3344 3.05616 10.2219 3.45616L10.0437 4.08116C9.86562 4.70304 9.58437 5.29054 9.2125 5.81554C9.05 6.04366 9.03125 6.34366 9.15938 6.59366C9.2875 6.84366 9.54375 6.99991 9.825 6.99991H14C14.275 6.99991 14.5 7.22491 14.5 7.49991C14.5 7.71241 14.3656 7.89679 14.175 7.96866C13.9438 8.05616 13.7688 8.24992 13.7094 8.49054C13.65 8.73117 13.7125 8.98429 13.875 9.16866C13.9531 9.25616 14 9.37179 14 9.49991C14 9.74366 13.825 9.94679 13.5938 9.99054C13.3375 10.0405 13.1219 10.2187 13.0312 10.4624C12.9406 10.7062 12.9813 10.9843 13.1438 11.1905C13.2094 11.2749 13.25 11.3812 13.25 11.4999C13.25 11.7093 13.1187 11.8937 12.9312 11.9655C12.5719 12.1062 12.3781 12.4937 12.4812 12.8655C12.4937 12.9062 12.5 12.953 12.5 12.9999C12.5 13.2749 12.275 13.4999 12 13.4999H8.95312C8.55937 13.4999 8.17188 13.3843 7.84375 13.1655L5.91563 11.8812C5.57188 11.6499 5.10625 11.7437 4.875 12.0905C4.64375 12.4374 4.7375 12.8999 5.08437 13.1312L7.0125 14.4155C7.5875 14.7999 8.2625 15.003 8.95312 15.003H12C13.0844 15.003 13.9656 14.1405 14 13.0655C14.4563 12.6999 14.75 12.1374 14.75 11.503C14.75 11.3624 14.7344 11.228 14.7094 11.0968C15.1906 10.7312 15.5 10.153 15.5 9.50304C15.5 9.29991 15.4688 9.10304 15.4125 8.91866C15.775 8.55304 16 8.05304 16 7.49991C16 6.39679 15.1063 5.49991 14 5.49991H11.1156C11.2625 5.17491 11.3875 4.83741 11.4844 4.49366L11.6625 3.86866C12.0031 2.67491 11.3125 1.42804 10.1187 1.08741ZM1 5.99991C0.446875 5.99991 0 6.44679 0 6.99991V13.9999C0 14.553 0.446875 14.9999 1 14.9999H3C3.55313 14.9999 4 14.553 4 13.9999V6.99991C4 6.44679 3.55313 5.99991 3 5.99991H1Z"></path></svg><small class="text-sm font-normal leading-4 ">Yes</small></button><button class="px-3.5 py-2 flex flex-row gap-3 items-center border-standard rounded-xl text-gray-600 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 bg-white/50 dark:bg-codeblock/50 hover:border-gray-500 hover:dark:border-gray-500"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" class="fill-current"><path d="M10.1187 14.9124C8.925 15.253 7.67813 14.5624 7.3375 13.3687L7.15938 12.7437C7.04375 12.3374 6.83438 11.9624 6.55 11.6499L4.94688 9.8874C4.66875 9.58115 4.69062 9.10615 4.99687 8.82803C5.30312 8.5499 5.77813 8.57178 6.05625 8.87803L7.65938 10.6405C8.1 11.1249 8.42188 11.703 8.6 12.3312L8.77812 12.9562C8.89062 13.353 9.30625 13.5843 9.70625 13.4718C10.1063 13.3593 10.3344 12.9437 10.2219 12.5437L10.0437 11.9187C9.86562 11.2968 9.58437 10.7093 9.2125 10.1843C9.05 9.95615 9.03125 9.65615 9.15938 9.40615C9.2875 9.15615 9.54375 8.9999 9.825 8.9999H14C14.275 8.9999 14.5 8.7749 14.5 8.4999C14.5 8.2874 14.3656 8.10303 14.175 8.03115C13.9438 7.94365 13.7688 7.7499 13.7094 7.50928C13.65 7.26865 13.7125 7.01553 13.875 6.83115C13.9531 6.74365 14 6.62803 14 6.4999C14 6.25615 13.825 6.05303 13.5938 6.00928C13.3375 5.95928 13.1219 5.78115 13.0312 5.53428C12.9406 5.2874 12.9813 5.0124 13.1438 4.80615C13.2094 4.72178 13.25 4.61553 13.25 4.49678C13.25 4.2874 13.1187 4.10303 12.9312 4.03115C12.5719 3.89053 12.3781 3.50303 12.4812 3.13115C12.4937 3.09053 12.5 3.04365 12.5 2.99678C12.5 2.72178 12.275 2.49678 12 2.49678H8.95312C8.55937 2.49678 8.17188 2.6124 7.84375 2.83115L5.91563 4.11553C5.57188 4.34678 5.10625 4.25303 4.875 3.90615C4.64375 3.55928 4.7375 3.09678 5.08437 2.86553L7.0125 1.58115C7.5875 1.19678 8.2625 0.993652 8.95312 0.993652H12C13.0844 0.993652 13.9656 1.85615 14 2.93115C14.4563 3.29678 14.75 3.85928 14.75 4.49365C14.75 4.63428 14.7344 4.76865 14.7094 4.8999C15.1906 5.26553 15.5 5.84365 15.5 6.49365C15.5 6.69678 15.4688 6.89365 15.4125 7.07803C15.775 7.44678 16 7.94678 16 8.4999C16 9.60303 15.1063 10.4999 14 10.4999H11.1156C11.2625 10.8249 11.3875 11.1624 11.4844 11.5062L11.6625 12.1312C12.0031 13.3249 11.3125 14.5718 10.1187 14.9124ZM1 11.9999C0.446875 11.9999 0 11.553 0 10.9999V3.9999C0 3.44678 0.446875 2.9999 1 2.9999H3C3.55313 2.9999 4 3.44678 4 3.9999V10.9999C4 11.553 3.55313 11.9999 3 11.9999H1Z"></path></svg><small class="text-sm font-normal leading-4 ">No</small></button></div></div><div class="flex flex-row gap-3 justify-end"></div></div></div><div id="pagination" class="mb-12 px-0.5 flex items-center text-sm font-semibold text-gray-700 dark:text-gray-200"><a class="flex items-center space-x-3 group" href="/quickstart/server"><svg viewBox="0 0 3 6" class="h-1.5 stroke-gray-400 overflow-visible group-hover:stroke-gray-600 dark:group-hover:stroke-gray-300"><path d="M3 0L0 3L3 6" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="group-hover:text-gray-900 dark:group-hover:text-white">For Server Developers</span></a><a class="flex items-center ml-auto space-x-3 group" href="/quickstart/user"><span class="group-hover:text-gray-900 dark:group-hover:text-white">For Claude Desktop Users</span><svg viewBox="0 0 3 6" class="rotate-180 h-1.5 stroke-gray-400 overflow-visible group-hover:stroke-gray-600 dark:group-hover:stroke-gray-300"><path d="M3 0L0 3L3 6" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></a></div></div><footer id="footer" class="flex gap-12 justify-between pt-10 border-t border-gray-100 sm:flex dark:border-gray-800/50 pb-28"><div class="flex gap-6 flex-wrap"><a href="https://github.com/modelcontextprotocol" target="_blank"><span class="sr-only">github</span><svg class="w-5 h-5 bg-gray-400 dark:bg-gray-500 hover:bg-gray-500 dark:hover:bg-gray-400" style="-webkit-mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/github.svg);-webkit-mask-repeat:no-repeat;-webkit-mask-position:center;mask-image:url(https://mintlify.b-cdn.net/v6.6.0/brands/github.svg);mask-repeat:no-repeat;mask-position:center"></svg></a></div></footer></div><div class="hidden xl:flex self-start sticky xl:flex-col max-w-[28rem] h-[calc(100vh-6rem)] top-[5.5rem]" id="content-side-layout"><div class="z-10 hidden xl:flex pl-10 box-border w-[19rem] max-h-full" id="table-of-contents-layout"><div class="text-gray-600 text-sm leading-6 w-[16.5rem] overflow-y-auto space-y-2 pb-4 -mt-10 pt-10" id="table-of-contents"><div class="text-gray-700 dark:text-gray-300 font-medium flex items-center space-x-2"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" stroke="currentColor" stroke-width="2" xmlns="http://www.w3.org/2000/svg" class="h-3 w-3"><path d="M2.44434 12.6665H13.5554" stroke-linecap="round" stroke-linejoin="round"></path><path d="M2.44434 3.3335H13.5554" stroke-linecap="round" stroke-linejoin="round"></path><path d="M2.44434 8H7.33323" stroke-linecap="round" stroke-linejoin="round"></path></svg><span>On this page</span></div><ul id="table-of-contents-content" class="toc"><li class="toc-item relative" data-depth="0"><a href="#next-steps" class="py-1 block hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300">Next steps</a></li></ul></div></div></div></div></div></div></main></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"mdxSource":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Card, CardGroup, CodeBlock, CodeGroup, Frame, Heading, Mermaid, Note, Tab, Tabs, Warning, ZoomImage} = _components;\n  if (!Card) _missingMdxReference(\"Card\", true);\n  if (!CardGroup) _missingMdxReference(\"CardGroup\", true);\n  if (!CodeBlock) _missingMdxReference(\"CodeBlock\", true);\n  if (!CodeGroup) _missingMdxReference(\"CodeGroup\", true);\n  if (!Frame) _missingMdxReference(\"Frame\", true);\n  if (!Heading) _missingMdxReference(\"Heading\", true);\n  if (!Mermaid) _missingMdxReference(\"Mermaid\", true);\n  if (!Note) _missingMdxReference(\"Note\", true);\n  if (!Tab) _missingMdxReference(\"Tab\", true);\n  if (!Tabs) _missingMdxReference(\"Tabs\", true);\n  if (!Warning) _missingMdxReference(\"Warning\", true);\n  if (!ZoomImage) _missingMdxReference(\"ZoomImage\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"In this tutorial, you’ll learn how to build a LLM-powered chatbot client that connects to MCP servers. It helps to have gone through the \", _jsx(_components.a, {\n        href: \"/quickstart/server\",\n        children: \"Server quickstart\"\n      }), \" that guides you through the basic of building your first server.\"]\n    }), \"\\n\", _jsxs(Tabs, {\n      children: [_jsxs(Tab, {\n        title: \"Python\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/quickstart-resources/tree/main/mcp-client-python\",\n            children: \"You can find the complete code for this tutorial here.\"\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"system-requirements\",\n          isAtRootLevel: \"false\",\n          children: \"System Requirements\"\n        }), _jsx(_components.p, {\n          children: \"Before starting, ensure your system meets these requirements:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Mac or Windows computer\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Latest Python version installed\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Latest version of \", _jsx(_components.code, {\n              children: \"uv\"\n            }), \" installed\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-environment\",\n          isAtRootLevel: \"false\",\n          children: \"Setting Up Your Environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, create a new Python project with \", _jsx(_components.code, {\n            children: \"uv\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Create project directory\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"uv init mcp-client\"\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"cd\"\n                }), \" mcp-client\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Create virtual environment\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"uv venv\"\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Activate virtual environment\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# On Windows:\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\".venv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"Scripts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"activate\"]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# On Unix or MacOS:\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"source\"\n                }), \" .venv/bin/activate\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Install required packages\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"uv \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" mcp anthropic python-dotenv\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Remove boilerplate files\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# On Windows:\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"del main.py\"\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# On Unix or MacOS:\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"rm\"\n                }), \" main.py\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Create our main file\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"touch\"\n                }), \" client.py\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-api-key\",\n          isAtRootLevel: \"false\",\n          children: \"Setting Up Your API Key\"\n        }), _jsxs(_components.p, {\n          children: [\"You’ll need an Anthropic API key from the \", _jsx(_components.a, {\n            href: \"https://console.anthropic.com/settings/keys\",\n            children: \"Anthropic Console\"\n          }), \".\"]\n        }), _jsxs(_components.p, {\n          children: [\"Create a \", _jsx(_components.code, {\n            children: \".env\"\n          }), \" file to store it:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Create .env file\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"touch\"\n                }), \" .env\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Add your key to the \", _jsx(_components.code, {\n            children: \".env\"\n          }), \" file:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token assign-left variable\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"your key here\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Add \", _jsx(_components.code, {\n            children: \".env\"\n          }), \" to your \", _jsx(_components.code, {\n            children: \".gitignore\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"echo\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".env\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\u003e\"\n                }), \" .gitignore\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"Make sure you keep your \", _jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY\"\n            }), \" secure!\"]\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"creating-the-client\",\n          isAtRootLevel: \"false\",\n          children: \"Creating the Client\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"basic-client-structure\",\n          isAtRootLevel: \"false\",\n          children: \"Basic Client Structure\"\n        }), _jsx(_components.p, {\n          children: \"First, let’s set up our imports and create the basic client class:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" asyncio\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" typing \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" Optional\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" contextlib \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" AsyncExitStack\"]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" mcp \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" ClientSession\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" StdioServerParameters\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"stdio \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" stdio_client\"]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" anthropic \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" Anthropic\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" dotenv \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" load_dotenv\"]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"load_dotenv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \"  \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# load environment variables from .env\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"MCPClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"__init__\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Initialize session and client objects\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" Optional\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"ClientSession\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"None\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"exit_stack \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" AsyncExitStack\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" Anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# methods will go here\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-connection-management\",\n          isAtRootLevel: \"false\",\n          children: \"Server Connection Management\"\n        }), _jsx(_components.p, {\n          children: \"Next, we’ll implement the method to connect to an MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connect_to_server\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" server_script_path\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"Connect to an MCP server\"]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        server_script_path\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" Path to the server script \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"py \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"or\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"js\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    is_python \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" server_script_path\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"endswith\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'.py'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    is_js \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" server_script_path\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"endswith\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'.js'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"is_python \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"or\"\n                }), \" is_js\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"raise\"\n                }), \" ValueError\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Server script must be a .py or .js file\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    command \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"python\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" is_python \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"else\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"node\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    server_params \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" StdioServerParameters\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        command\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"command\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        args\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"server_script_path\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        env\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"None\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    stdio_transport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"exit_stack\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"enter_async_context\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"stdio_client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"server_params\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"stdio\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"write \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" stdio_transport\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"exit_stack\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"enter_async_context\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"ClientSession\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"stdio\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"write\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"initialize\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# List available tools\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"list_tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\nConnected to server with tools:\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" tool \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"query-processing-logic\",\n          isAtRootLevel: \"false\",\n          children: \"Query Processing Logic\"\n        }), _jsx(_components.p, {\n          children: \"Now let’s add the core functionality for processing queries and handling tool calls:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"process_query\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token triple-quoted-string string\",\n                  children: \"\\\"\\\"\\\"Process a query using Claude and available tools\\\"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    messages \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"role\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"user\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"content\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" query\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"list_tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    available_tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"name\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"description\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"description\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"input_schema\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputSchema\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" tool \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Initial Claude API call\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"create\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        model\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"claude-3-5-sonnet-20241022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        max_tokens\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1000\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        messages\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"available_tools\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Process response and handle tool calls\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    final_text \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    assistant_message_content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" content \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"type\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'text'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            final_text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            assistant_message_content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"elif\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"type\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'tool_use'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            tool_name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            tool_args \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"input\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Execute tool call\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            result \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"call_tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool_name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" tool_args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            final_text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"[Calling tool \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"tool_name\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \" with args \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"tool_args\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"]\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            assistant_message_content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"role\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"assistant\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"content\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" assistant_message_content\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"role\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"user\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"content\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"type\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"tool_result\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"tool_use_id\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"id\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"content\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" result\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Get next response from Claude\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"create\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                model\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"claude-3-5-sonnet-20241022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                max_tokens\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1000\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                messages\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"available_tools\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            final_text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"join\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"final_text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"interactive-chat-interface\",\n          isAtRootLevel: \"false\",\n          children: \"Interactive Chat Interface\"\n        }), _jsx(_components.p, {\n          children: \"Now we’ll add the chat loop and cleanup functionality:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"chat_loop\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token triple-quoted-string string\",\n                  children: \"\\\"\\\"\\\"Run an interactive chat loop\\\"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\nMCP Client Started!\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Type your queries or 'quit' to exit.\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"while\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"True\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            query \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"input\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\nQuery: \\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"strip\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"lower\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'quit'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"break\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"process_query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"+\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"except\"\n                }), \" Exception \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"\\\\nError: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), _jsx(_components.span, {\n                      className: \"token builtin\",\n                      children: \"str\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), \"e\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"cleanup\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token triple-quoted-string string\",\n                  children: \"\\\"\\\"\\\"Clean up resources\\\"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"exit_stack\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"aclose\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"main-entry-point\",\n          isAtRootLevel: \"false\",\n          children: \"Main Entry Point\"\n        }), _jsx(_components.p, {\n          children: \"Finally, we’ll add the main execution logic:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"len\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"sys\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"argv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"2\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Usage: python client.py \u003cpath_to_server_script\u003e\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        sys\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"exit\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    client \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" MCPClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"connect_to_server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"sys\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"argv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"chat_loop\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"finally\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"cleanup\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" __name__ \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"__main__\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" sys\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    asyncio\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"run\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"main\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"You can find the complete \", _jsx(_components.code, {\n            children: \"client.py\"\n          }), \" file \", _jsx(_components.a, {\n            href: \"https://gist.github.com/zckly/f3f28ea731e096e53b39b47bf0a2d4b1\",\n            children: \"here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"key-components-explained\",\n          isAtRootLevel: \"false\",\n          children: \"Key Components Explained\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"1-client-initialization\",\n          isAtRootLevel: \"false\",\n          children: \"1. Client Initialization\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"The \", _jsx(_components.code, {\n              children: \"MCPClient\"\n            }), \" class initializes with session management and API clients\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Uses \", _jsx(_components.code, {\n              children: \"AsyncExitStack\"\n            }), \" for proper resource management\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Configures the Anthropic client for Claude interactions\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"2-server-connection\",\n          isAtRootLevel: \"false\",\n          children: \"2. Server Connection\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Supports both Python and Node.js servers\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Validates server script type\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Sets up proper communication channels\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Initializes the session and lists available tools\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"3-query-processing\",\n          isAtRootLevel: \"false\",\n          children: \"3. Query Processing\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Maintains conversation context\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Handles Claude’s responses and tool calls\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Manages the message flow between Claude and tools\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Combines results into a coherent response\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"4-interactive-interface\",\n          isAtRootLevel: \"false\",\n          children: \"4. Interactive Interface\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Provides a simple command-line interface\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Handles user input and displays responses\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Includes basic error handling\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Allows graceful exit\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"5-resource-management\",\n          isAtRootLevel: \"false\",\n          children: \"5. Resource Management\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Proper cleanup of resources\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Error handling for connection issues\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Graceful shutdown procedures\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"common-customization-points\",\n          isAtRootLevel: \"false\",\n          children: \"Common Customization Points\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Tool Handling\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Modify \", _jsx(_components.code, {\n                  children: \"process_query()\"\n                }), \" to handle specific tool types\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Add custom error handling for tool calls\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Implement tool-specific response formatting\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Response Processing\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Customize how tool results are formatted\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Add response filtering or transformation\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Implement custom logging\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"User Interface\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Add a GUI or web interface\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Implement rich console output\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Add command history or auto-completion\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"running-the-client\",\n          isAtRootLevel: \"false\",\n          children: \"Running the Client\"\n        }), _jsx(_components.p, {\n          children: \"To run your client with any MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"uv run client.py path/to/server.py \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# python server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"uv run client.py path/to/build/index.js \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# node server\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: \", _jsx(_components.code, {\n              children: \"python client.py .../quickstart-resources/weather-server-python/weather.py\"\n            })]\n          })\n        }), _jsx(_components.p, {\n          children: \"The client will:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Connect to the specified server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"List available tools\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Start an interactive chat session where you can:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Enter queries\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"See tool executions\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Get responses from Claude\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Here’s an example of what it should look like if connected to the weather server from the server quickstart:\"\n        }), _jsx(Frame, {\n          children: _jsx(ZoomImage, {\n            children: _jsx(\"img\", {\n              src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/client-claude-cli-python.png\"\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"how-it-works\",\n          isAtRootLevel: \"false\",\n          children: \"How It Works\"\n        }), _jsx(_components.p, {\n          children: \"When you submit a query:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The client gets the list of available tools from the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Your query is sent to Claude along with tool descriptions\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude decides which tools (if any) to use\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The client executes any requested tool calls through the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Results are sent back to Claude\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude provides a natural language response\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The response is displayed to you\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"best-practices\",\n          isAtRootLevel: \"false\",\n          children: \"Best practices\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Error Handling\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Always wrap tool calls in try-catch blocks\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Provide meaningful error messages\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Gracefully handle connection issues\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Resource Management\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Use \", _jsx(_components.code, {\n                  children: \"AsyncExitStack\"\n                }), \" for proper cleanup\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Close connections when done\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Handle server disconnections\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Security\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Store API keys securely in \", _jsx(_components.code, {\n                  children: \".env\"\n                })]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Validate server responses\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Be cautious with tool permissions\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"troubleshooting\",\n          isAtRootLevel: \"false\",\n          children: \"Troubleshooting\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-path-issues\",\n          isAtRootLevel: \"false\",\n          children: \"Server Path Issues\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Double-check the path to your server script is correct\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Use the absolute path if the relative path isn’t working\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"For Windows users, make sure to use forward slashes (/) or escaped backslashes (\\\\) in the path\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Verify the server file has the correct extension (.py for Python or .js for Node.js)\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Example of correct path usage:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Relative path\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"uv run client.py ./server/weather.py\"\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Absolute path\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"uv run client.py /Users/username/projects/mcp-server/weather.py\"\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Windows path (either format works)\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"uv run client.py C:/projects/mcp-server/weather.py\"\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"uv run client.py C:\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"projects\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"mcp-server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"weather.py\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"response-timing\",\n          isAtRootLevel: \"false\",\n          children: \"Response Timing\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The first response might take up to 30 seconds to return\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"This is normal and happens while:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"The server initializes\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Claude processes the query\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Tools are being executed\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Subsequent responses are typically faster\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Don’t interrupt the process during this initial waiting period\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"common-error-messages\",\n          isAtRootLevel: \"false\",\n          children: \"Common Error Messages\"\n        }), _jsx(_components.p, {\n          children: \"If you see:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"FileNotFoundError\"\n            }), \": Check your server path\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Connection refused\"\n            }), \": Ensure the server is running and the path is correct\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Tool execution failed\"\n            }), \": Verify the tool’s required environment variables are set\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Timeout error\"\n            }), \": Consider increasing the timeout in your client configuration\"]\n          }), \"\\n\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"Node\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/quickstart-resources/tree/main/mcp-client-typescript\",\n            children: \"You can find the complete code for this tutorial here.\"\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"system-requirements-2\",\n          isAtRootLevel: \"false\",\n          children: \"System Requirements\"\n        }), _jsx(_components.p, {\n          children: \"Before starting, ensure your system meets these requirements:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Mac or Windows computer\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Node.js 17 or higher installed\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Latest version of \", _jsx(_components.code, {\n              children: \"npm\"\n            }), \" installed\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Anthropic API key (Claude)\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-environment-2\",\n          isAtRootLevel: \"false\",\n          children: \"Setting Up Your Environment\"\n        }), _jsx(_components.p, {\n          children: \"First, let’s create and set up our project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create project directory\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" mcp-client-typescript\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" mcp-client-typescript\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize npm project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" init \", _jsx(_components.span, {\n                    className: \"token parameter variable\",\n                    children: \"-y\"\n                  })]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"install\"\n                  }), \" @anthropic-ai/sdk @modelcontextprotocol/sdk dotenv\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dev dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"install\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token parameter variable\",\n                    children: \"-D\"\n                  }), \" @types/node typescript\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create source file\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"touch\"\n                  }), \" index.ts\"]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create project directory\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"md mcp-client-typescript\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd mcp-client-typescript\"\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize npm project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"npm init \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"y\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"npm install @anthropic-ai/sdk @modelcontextprotocol/sdk dotenv\"\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dev dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"npm install \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"D @types/node typescript\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create source file\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"new-item\"\n                  }), \" index\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"ts\"]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"Update your \", _jsx(_components.code, {\n            children: \"package.json\"\n          }), \" to set \", _jsx(_components.code, {\n            children: \"type: \\\"module\\\"\"\n          }), \" and a build script:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"package.json\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-json\",\n            children: _jsxs(_components.code, {\n              className: \"language-json\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"type\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"module\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"scripts\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"build\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"tsc \u0026\u0026 chmod 755 build/index.js\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Create a \", _jsx(_components.code, {\n            children: \"tsconfig.json\"\n          }), \" in the root of your project:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"tsconfig.json\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-json\",\n            children: _jsxs(_components.code, {\n              className: \"language-json\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"compilerOptions\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"target\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ES2022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"module\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Node16\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"moduleResolution\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Node16\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"outDir\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"./build\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"rootDir\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"./\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"strict\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"esModuleInterop\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"skipLibCheck\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"forceConsistentCasingInFileNames\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"include\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"index.ts\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"exclude\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"node_modules\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-api-key-2\",\n          isAtRootLevel: \"false\",\n          children: \"Setting Up Your API Key\"\n        }), _jsxs(_components.p, {\n          children: [\"You’ll need an Anthropic API key from the \", _jsx(_components.a, {\n            href: \"https://console.anthropic.com/settings/keys\",\n            children: \"Anthropic Console\"\n          }), \".\"]\n        }), _jsxs(_components.p, {\n          children: [\"Create a \", _jsx(_components.code, {\n            children: \".env\"\n          }), \" file to store it:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"echo\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ANTHROPIC_API_KEY=\u003cyour key here\u003e\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" .env\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Add \", _jsx(_components.code, {\n            children: \".env\"\n          }), \" to your \", _jsx(_components.code, {\n            children: \".gitignore\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"echo\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".env\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\u003e\"\n                }), \" .gitignore\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"Make sure you keep your \", _jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY\"\n            }), \" secure!\"]\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"creating-the-client-2\",\n          isAtRootLevel: \"false\",\n          children: \"Creating the Client\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"basic-client-structure-2\",\n          isAtRootLevel: \"false\",\n          children: \"Basic Client Structure\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s set up our imports and create the basic client class in \", _jsx(_components.code, {\n            children: \"index.ts\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" Anthropic \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@anthropic-ai/sdk\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@anthropic-ai/sdk/resources/messages/messages.mjs\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" Client \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@modelcontextprotocol/sdk/client/index.js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" StdioClientTransport \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@modelcontextprotocol/sdk/client/stdio.js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" readline \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"readline/promises\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" dotenv \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"dotenv\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotenv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"config\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"env\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ANTHROPIC_API_KEY is not set\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"MCPClient\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" anthropic\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" transport\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" StdioClientTransport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"|\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"constructor\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Anthropic\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      apiKey\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"mcp \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Client\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"mcp-client-cli\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" version\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"1.0.0\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// methods will go here\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-connection-management-2\",\n          isAtRootLevel: \"false\",\n          children: \"Server Connection Management\"\n        }), _jsx(_components.p, {\n          children: \"Next, we’ll implement the method to connect to an MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connectToServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"serverScriptPath\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" isJs \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" serverScriptPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"endsWith\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" isPy \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" serverScriptPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"endsWith\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".py\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"isJs \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u0026\u0026\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"isPy\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Server script must be a .js or .py file\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" command \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" isPy\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"platform \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"win32\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"python\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"python3\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"execPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"transport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"StdioClientTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      command\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      args\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"serverScriptPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connect\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"transport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" toolsResult \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listTools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" toolsResult\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        description\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"description\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        input_schema\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputSchema\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Connected to server with tools:\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" name \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"catch\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Failed to connect to MCP server: \\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"query-processing-logic-2\",\n          isAtRootLevel: \"false\",\n          children: \"Query Processing Logic\"\n        }), _jsx(_components.p, {\n          children: \"Now let’s add the core functionality for processing queries and handling tool calls:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"processQuery\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" messages\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      role\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"user\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"create\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    model\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"claude-3-5-sonnet-20241022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    max_tokens\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1000\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" finalText \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" toolResults \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" content \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"of\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"type \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"push\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"else\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"type \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"tool_use\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" toolName \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" toolArgs \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"input \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"x\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"unknown\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"|\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"undefined\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" result \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"callTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" toolName\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        arguments\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" toolArgs\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      toolResults\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"push\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"result\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"push\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"[Calling tool \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"toolName\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \" with args \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"JSON\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"stringify\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), \"toolArgs\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"]\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"push\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        role\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"user\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" result\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"create\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        model\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"claude-3-5-sonnet-20241022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        max_tokens\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1000\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"push\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"type \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"text \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"interactive-chat-interface-2\",\n          isAtRootLevel: \"false\",\n          children: \"Interactive Chat Interface\"\n        }), _jsx(_components.p, {\n          children: \"Now we’ll add the chat loop and cleanup functionality:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"chatLoop\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" rl \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" readline\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"createInterface\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    input\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"stdin\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    output\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"stdout\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\nMCP Client Started!\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Type your queries or 'quit' to exit.\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"while\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" message \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" rl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"question\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\nQuery: \\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"message\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toLowerCase\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"quit\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"break\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"processQuery\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"message\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"+\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"finally\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    rl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"close\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"cleanup\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"close\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"main-entry-point-2\",\n          isAtRootLevel: \"false\",\n          children: \"Main Entry Point\"\n        }), _jsx(_components.p, {\n          children: \"Finally, we’ll add the main execution logic:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"function\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"argv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"length \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"3\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Usage: node index.ts \u003cpath_to_server_script\u003e\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" mcpClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"MCPClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connectToServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"argv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"2\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"chatLoop\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"finally\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"cleanup\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"exit\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"running-the-client-2\",\n          isAtRootLevel: \"false\",\n          children: \"Running the Client\"\n        }), _jsx(_components.p, {\n          children: \"To run your client with any MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Build TypeScript\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"npm\"\n                }), \" run build\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Run the client\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js path/to/server.py \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# python server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js path/to/build/index.js \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# node server\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: \", _jsx(_components.code, {\n              children: \"node build/index.js .../quickstart-resources/weather-server-typescript/build/index.js\"\n            })]\n          })\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"The client will:\"\n          })\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Connect to the specified server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"List available tools\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Start an interactive chat session where you can:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Enter queries\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"See tool executions\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Get responses from Claude\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"how-it-works-2\",\n          isAtRootLevel: \"false\",\n          children: \"How It Works\"\n        }), _jsx(_components.p, {\n          children: \"When you submit a query:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The client gets the list of available tools from the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Your query is sent to Claude along with tool descriptions\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude decides which tools (if any) to use\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The client executes any requested tool calls through the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Results are sent back to Claude\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude provides a natural language response\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The response is displayed to you\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"best-practices-2\",\n          isAtRootLevel: \"false\",\n          children: \"Best practices\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Error Handling\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Use TypeScript’s type system for better error detection\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Wrap tool calls in try-catch blocks\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Provide meaningful error messages\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Gracefully handle connection issues\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Security\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Store API keys securely in \", _jsx(_components.code, {\n                  children: \".env\"\n                })]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Validate server responses\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Be cautious with tool permissions\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"troubleshooting-2\",\n          isAtRootLevel: \"false\",\n          children: \"Troubleshooting\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-path-issues-2\",\n          isAtRootLevel: \"false\",\n          children: \"Server Path Issues\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Double-check the path to your server script is correct\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Use the absolute path if the relative path isn’t working\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"For Windows users, make sure to use forward slashes (/) or escaped backslashes (\\\\) in the path\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Verify the server file has the correct extension (.js for Node.js or .py for Python)\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Example of correct path usage:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Relative path\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js ./server/build/index.js\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Absolute path\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js /Users/username/projects/mcp-server/build/index.js\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Windows path (either format works)\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js C:/projects/mcp-server/build/index.js\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js C:\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"projects\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"mcp-server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"build\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"index.js\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"response-timing-2\",\n          isAtRootLevel: \"false\",\n          children: \"Response Timing\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The first response might take up to 30 seconds to return\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"This is normal and happens while:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"The server initializes\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Claude processes the query\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Tools are being executed\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Subsequent responses are typically faster\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Don’t interrupt the process during this initial waiting period\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"common-error-messages-2\",\n          isAtRootLevel: \"false\",\n          children: \"Common Error Messages\"\n        }), _jsx(_components.p, {\n          children: \"If you see:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Error: Cannot find module\"\n            }), \": Check your build folder and ensure TypeScript compilation succeeded\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Connection refused\"\n            }), \": Ensure the server is running and the path is correct\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Tool execution failed\"\n            }), \": Verify the tool’s required environment variables are set\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY is not set\"\n            }), \": Check your .env file and environment variables\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"TypeError\"\n            }), \": Ensure you’re using the correct types for tool arguments\"]\n          }), \"\\n\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"Java\",\n        children: [_jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"This is a quickstart demo based on Spring AI MCP auto-configuration and boot starters.\\nTo learn how to create sync and async MCP Clients manually, consult the \", _jsx(_components.a, {\n              href: \"/sdk/java/mcp-client\",\n              children: \"Java SDK Client\"\n            }), \" documentation\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"This example demonstrates how to build an interactive chatbot that combines Spring AI’s Model Context Protocol (MCP) with the \", _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search\",\n            children: \"Brave Search MCP Server\"\n          }), \". The application creates a conversational interface powered by Anthropic’s Claude AI model that can perform internet searches through Brave Search, enabling natural language interactions with real-time web data.\\n\", _jsx(_components.a, {\n            href: \"https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/web-search/brave-chatbot\",\n            children: \"You can find the complete code for this tutorial here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"system-requirements-3\",\n          isAtRootLevel: \"false\",\n          children: \"System Requirements\"\n        }), _jsx(_components.p, {\n          children: \"Before starting, ensure your system meets these requirements:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Java 17 or higher\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Maven 3.6+\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"npx package manager\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Anthropic API key (Claude)\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Brave Search API key\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-environment-3\",\n          isAtRootLevel: \"false\",\n          children: \"Setting Up Your Environment\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsxs(_components.p, {\n              children: [\"Install npx (Node Package eXecute):\\nFirst, make sure to install \", _jsx(_components.a, {\n                href: \"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm\",\n                children: \"npm\"\n              }), \"\\nand then run:\"]\n            }), \"\\n\", _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [_jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"npm\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"install\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token parameter variable\",\n                      children: \"-g\"\n                    }), \" npx\"]\n                  }), \"\\n\"]\n                })\n              })\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: \"Clone the repository:\"\n            }), \"\\n\", _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [_jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"git\"\n                    }), \" clone https://github.com/spring-projects/spring-ai-examples.git\"]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [_jsx(_components.span, {\n                      className: \"token builtin class-name\",\n                      children: \"cd\"\n                    }), \" model-context-protocol/brave-chatbot\"]\n                  }), \"\\n\"]\n                })\n              })\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: \"Set up your API keys:\"\n            }), \"\\n\", _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [_jsx(_components.span, {\n                      className: \"token builtin class-name\",\n                      children: \"export\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token assign-left variable\",\n                      children: \"ANTHROPIC_API_KEY\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"=\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"'your-anthropic-api-key-here'\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [_jsx(_components.span, {\n                      className: \"token builtin class-name\",\n                      children: \"export\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token assign-left variable\",\n                      children: \"BRAVE_API_KEY\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"=\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"'your-brave-api-key-here'\"\n                    })]\n                  }), \"\\n\"]\n                })\n              })\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: \"Build the application:\"\n            }), \"\\n\", _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"./mvnw clean \", _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"install\"\n                    })]\n                  }), \"\\n\"]\n                })\n              })\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: \"Run the application using Maven:\"\n            }), \"\\n\", _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: \"./mvnw spring-boot:run\"\n                  }), \"\\n\"]\n                })\n              })\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"Make sure you keep your \", _jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"BRAVE_API_KEY\"\n            }), \" keys secure!\"]\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"how-it-works-3\",\n          isAtRootLevel: \"false\",\n          children: \"How it Works\"\n        }), _jsx(_components.p, {\n          children: \"The application integrates Spring AI with the Brave Search MCP server through several components:\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"mcp-client-configuration\",\n          isAtRootLevel: \"false\",\n          children: \"MCP Client Configuration\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Required dependencies in pom.xml:\"\n          }), \"\\n\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-xml\",\n            children: _jsxs(_components.code, {\n              className: \"language-xml\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"org.springframework.ai\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"spring-ai-starter-mcp-client\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"org.springframework.ai\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"spring-ai-starter-model-anthropic\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.ol, {\n          start: \"2\",\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Application properties (application.yml):\"\n          }), \"\\n\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-yml\",\n            children: _jsxs(_components.code, {\n              className: \"language-yml\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"spring\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  ai\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"enabled\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean important\",\n                  children: \"true\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"name\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" brave\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"-\"\n                }), \"search\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"-\"\n                }), \"client\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"version\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" 1.0.0\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"type\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" SYNC\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"request-timeout\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" 20s\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        stdio\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"root-change-notification\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean important\",\n                  children: \"true\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"servers-configuration\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" classpath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \"/mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"-\"\n                }), \"servers\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"-\"\n                }), \"config.json\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        toolcallback\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"enabled\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean important\",\n                  children: \"true\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"api-key\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"ANTHROPIC_API_KEY\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"This activates the \", _jsx(_components.code, {\n            children: \"spring-ai-starter-mcp-client\"\n          }), \" to create one or more \", _jsx(_components.code, {\n            children: \"McpClient\"\n          }), \"s based on the provided server configuration.\\nThe \", _jsx(_components.code, {\n            children: \"spring.ai.mcp.client.toolcallback.enabled=true\"\n          }), \" property enables the tool callback mechanism, that automatically registers all MCP tool as spring ai tools.\\nIt is disabled by default.\"]\n        }), _jsxs(_components.ol, {\n          start: \"3\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"MCP Server Configuration (\", _jsx(_components.code, {\n              children: \"mcp-servers-config.json\"\n            }), \"):\"]\n          }), \"\\n\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-json\",\n            children: _jsxs(_components.code, {\n              className: \"language-json\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"mcpServers\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"brave-search\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"command\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"npx\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"args\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"-y\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@modelcontextprotocol/server-brave-search\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"env\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"BRAVE_API_KEY\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\u003cPUT YOUR BRAVE API KEY\u003e\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"chat-implementation\",\n          isAtRootLevel: \"false\",\n          children: \"Chat Implementation\"\n        }), _jsx(_components.p, {\n          children: \"The chatbot is implemented using Spring AI’s ChatClient with MCP tool integration:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-java\",\n            children: _jsxs(_components.code, {\n              className: \"language-java\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" chatClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" chatClientBuilder\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"defaultSystem\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"You are useful assistant, expert in AI and Java.\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"defaultToolCallbacks\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Object\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" mcpToolAdapter\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toolCallbacks\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"defaultAdvisors\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"MessageChatMemoryAdvisor\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"InMemoryChatMemory\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"Breaking change: From SpringAI 1.0.0-M8 onwards, use \", _jsx(_components.code, {\n              children: \".defaultToolCallbacks(...)\"\n            }), \" instead of \", _jsx(_components.code, {\n              children: \".defaultTool(...)\"\n            }), \" to register MCP tools.\"]\n          })\n        }), _jsx(_components.p, {\n          children: \"Key features:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Uses Claude AI model for natural language understanding\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Integrates Brave Search through MCP for real-time web search capabilities\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Maintains conversation memory using InMemoryChatMemory\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Runs as an interactive command-line application\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"build-and-run\",\n          isAtRootLevel: \"false\",\n          children: \"Build and run\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"./mvnw clean \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"install\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" ./target/ai-mcp-brave-chatbot-0.0.1-SNAPSHOT.jar\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"or\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: \"./mvnw spring-boot:run\"\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"The application will start an interactive chat session where you can ask questions. The chatbot will use Brave Search when it needs to find information from the internet to answer your queries.\"\n        }), _jsx(_components.p, {\n          children: \"The chatbot can:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Answer questions using its built-in knowledge\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Perform web searches when needed using Brave Search\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Remember context from previous messages in the conversation\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Combine information from multiple sources to provide comprehensive answers\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"advanced-configuration\",\n          isAtRootLevel: \"false\",\n          children: \"Advanced Configuration\"\n        }), _jsx(_components.p, {\n          children: \"The MCP client supports additional configuration options:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"Client customization through \", _jsx(_components.code, {\n              children: \"McpSyncClientCustomizer\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"McpAsyncClientCustomizer\"\n            })]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Multiple clients with multiple transport types: \", _jsx(_components.code, {\n              children: \"STDIO\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"SSE\"\n            }), \" (Server-Sent Events)\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Integration with Spring AI’s tool execution framework\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Automatic client initialization and lifecycle management\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"For WebFlux-based applications, you can use the WebFlux starter instead:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-xml\",\n            children: _jsxs(_components.code, {\n              className: \"language-xml\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"org.springframework.ai\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"spring-ai-mcp-client-webflux-spring-boot-starter\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"This provides similar functionality but uses a WebFlux-based SSE transport implementation, recommended for production deployments.\"\n        })]\n      }), _jsxs(Tab, {\n        title: \"Kotlin\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/kotlin-sdk/tree/main/samples/kotlin-mcp-client\",\n            children: \"You can find the complete code for this tutorial here.\"\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"system-requirements-4\",\n          isAtRootLevel: \"false\",\n          children: \"System Requirements\"\n        }), _jsx(_components.p, {\n          children: \"Before starting, ensure your system meets these requirements:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Java 17 or higher\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Anthropic API key (Claude)\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-environment-4\",\n          isAtRootLevel: \"false\",\n          children: \"Setting up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s install \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" and \", _jsx(_components.code, {\n            children: \"gradle\"\n          }), \" if you haven’t already.\\nYou can download \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" from \", _jsx(_components.a, {\n            href: \"https://www.oracle.com/java/technologies/downloads/\",\n            children: \"official Oracle JDK website\"\n          }), \".\\nVerify your \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" installation:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--version\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Now, let’s create and set up your project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" kotlin-mcp-client\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" kotlin-mcp-client\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new kotlin project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"gradle init\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"md kotlin-mcp-client\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd kotlin-mcp-client\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new kotlin project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"gradle init\"\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"After running \", _jsx(_components.code, {\n            children: \"gradle init\"\n          }), \", you will be presented with options for creating your project.\\nSelect \", _jsx(_components.strong, {\n            children: \"Application\"\n          }), \" as the project type, \", _jsx(_components.strong, {\n            children: \"Kotlin\"\n          }), \" as the programming language, and \", _jsx(_components.strong, {\n            children: \"Java 17\"\n          }), \" as the Java version.\"]\n        }), _jsxs(_components.p, {\n          children: [\"Alternatively, you can create a Kotlin application using the \", _jsx(_components.a, {\n            href: \"https://kotlinlang.org/docs/jvm-get-started.html\",\n            children: \"IntelliJ IDEA project wizard\"\n          }), \".\"]\n        }), _jsx(_components.p, {\n          children: \"After creating the project, add the following dependencies:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"build.gradle.kts\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-kotlin\",\n              children: _jsxs(_components.code, {\n                className: \"language-kotlin\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" mcpVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"0.4.0\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" slf4jVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"2.0.9\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" anthropicVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"0.8.0\\\"\"\n                    })\n                  })]\n                }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"dependencies \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.modelcontextprotocol:kotlin-sdk:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"mcpVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"org.slf4j:slf4j-nop:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"slf4jVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"com.anthropic:anthropic-java:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"anthropicVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"build.gradle\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-groovy\",\n              children: _jsxs(_components.code, {\n                className: \"language-groovy\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" mcpVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'0.3.0'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" slf4jVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'2.0.9'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" anthropicVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'0.8.0'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"dependencies \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.modelcontextprotocol:kotlin-sdk:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"mcpVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"org.slf4j:slf4j-nop:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"slf4jVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"com.anthropic:anthropic-java:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"anthropicVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Also, add the following plugins to your build script:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"build.gradle.kts\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-kotlin\",\n              children: _jsxs(_components.code, {\n                className: \"language-kotlin\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"plugins \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"id\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"com.github.johnrengelman.shadow\\\"\"\n                    })\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"8.1.1\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"build.gradle\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-groovy\",\n              children: _jsxs(_components.code, {\n                className: \"language-groovy\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"plugins \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    id \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'com.github.johnrengelman.shadow'\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'8.1.1'\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-api-key-3\",\n          isAtRootLevel: \"false\",\n          children: \"Setting up your API key\"\n        }), _jsxs(_components.p, {\n          children: [\"You’ll need an Anthropic API key from the \", _jsx(_components.a, {\n            href: \"https://console.anthropic.com/settings/keys\",\n            children: \"Anthropic Console\"\n          }), \".\"]\n        }), _jsx(_components.p, {\n          children: \"Set up your API key:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"export\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token assign-left variable\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'your-anthropic-api-key-here'\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"Make sure your keep your \", _jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY\"\n            }), \" secure!\"]\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"creating-the-client-3\",\n          isAtRootLevel: \"false\",\n          children: \"Creating the Client\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"basic-client-structure-3\",\n          isAtRootLevel: \"false\",\n          children: \"Basic Client Structure\"\n        }), _jsx(_components.p, {\n          children: \"First, let’s create the basic client class:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" MCPClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" AutoCloseable \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" anthropic \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" AnthropicOkHttpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"fromEnv\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Client \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Client\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"clientInfo \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Implementation\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"mcp-client-cli\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" version \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"1.0.0\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"lateinit\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" List\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"ToolUnion\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// methods will go here\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"override\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"close\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        runBlocking \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"close\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"close\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-connection-management-3\",\n          isAtRootLevel: \"false\",\n          children: \"Server connection management\"\n        }), _jsx(_components.p, {\n          children: \"Next, we’ll implement the method to connect to an MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"suspend\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connectToServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"serverScriptPath\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" command \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" buildList \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"when\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"serverScriptPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"substringAfterLast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\".\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"js\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"node\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"py\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"System\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"os.name\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"lowercase\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"contains\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"win\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"python\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"else\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"python3\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"jar\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"addAll\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"java\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"-jar\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"else\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"IllegalArgumentException\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Server script must be a .js, .py or .jar file\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"serverScriptPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" process \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ProcessBuilder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"command\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"start\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" transport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"StdioClientTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            input \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputStream\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"asSource\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"buffered\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            output \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"outputStream\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"asSink\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"buffered\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connect\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"transport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" toolsResult \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listTools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" toolsResult\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" tool \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            ToolUnion\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ofTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"name\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"description\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"inputSchema\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"InputSchema\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"type\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"JsonValue\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"from\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputSchema\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"type\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"properties\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputSchema\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toJsonValue\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"putAdditionalProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"required\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" JsonValue\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"from\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputSchema\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"required\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"emptyList\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"println\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"\\\"Connected \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"to\"\n                }), \" server with tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"joinToString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\", \\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" it\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"tool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"name\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"catch\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"e\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Exception\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"println\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Failed to connect to MCP server: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"e\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" e\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Also create a helper function to convert from \", _jsx(_components.code, {\n            children: \"JsonObject\"\n          }), \" to \", _jsx(_components.code, {\n            children: \"JsonValue\"\n          }), \" for Anthropic:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" JsonObject\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toJsonValue\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" JsonValue \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" mapper \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ObjectMapper\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" node \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mapper\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"readTree\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" JsonValue\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"fromJsonNode\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"node\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"query-processing-logic-3\",\n          isAtRootLevel: \"false\",\n          children: \"Query processing logic\"\n        }), _jsx(_components.p, {\n          children: \"Now let’s add the core functionality for processing queries and handling tool calls:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" messageParamsBuilder\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" MessageCreateParams\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Builder \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" MessageCreateParams\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"model\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"Model\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"CLAUDE_3_5_SONNET_20241022\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"maxTokens\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1024\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"suspend\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"processQuery\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" messages \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"mutableListOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"role\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Role\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"USER\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"content\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"messages\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"create\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"        messageParamsBuilder\"\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"messages\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"tools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" finalText \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mutableListOf\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"String\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"content\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"forEach\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"when\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"isText\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"text\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getOrNull\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"text\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"isToolUse\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" toolName \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toolUse\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"name\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" toolArgs \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toolUse\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"_input\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"convert\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"object\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" TypeReference\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Map\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" JsonValue\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" result \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"callTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" toolName\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    arguments \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" toolArgs \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"emptyMap\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"[Calling tool \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"toolName\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \" with args \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"toolArgs\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"]\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"role\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Role\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"USER\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"content\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"type\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"tool_result\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"tool_name\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $toolName\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"result\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"result\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"joinToString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\\n\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"it \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" TextContent\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"text \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"trimIndent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" aiResponse \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"messages\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"create\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"                    messageParamsBuilder\"\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"messages\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"aiResponse\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"content\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"first\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"text\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getOrNull\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"text\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"joinToString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\\n\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" prefix \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" postfix \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"interactive-chat\",\n          isAtRootLevel: \"false\",\n          children: \"Interactive chat\"\n        }), _jsx(_components.p, {\n          children: \"We’ll add the chat loop:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"suspend\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"chatLoop\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"println\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\\nMCP Client Started!\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"println\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Type your queries or 'quit' to exit.\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"while\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\\nQuery: \\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" message \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"readLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"break\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"message\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"lowercase\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"quit\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"break\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"processQuery\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"message\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"println\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\\n\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"response\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"main-entry-point-3\",\n          isAtRootLevel: \"false\",\n          children: \"Main entry point\"\n        }), _jsx(_components.p, {\n          children: \"Finally, we’ll add the main execution function:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"args\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Array\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"String\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" runBlocking \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"isEmpty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"IllegalArgumentException\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Usage: java -jar \u003cyour_path\u003e/build/libs/kotlin-mcp-client-0.1.0-all.jar \u003cpath_to_server_script\u003e\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" serverPath \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"first\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" client \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"MCPClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"use\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connectToServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"serverPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"chatLoop\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"running-the-client-3\",\n          isAtRootLevel: \"false\",\n          children: \"Running the client\"\n        }), _jsx(_components.p, {\n          children: \"To run your client with any MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: \"./gradlew build\"\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Run the client\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"your-jar-name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \".jar path/to/server.jar \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# jvm server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"your-jar-name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \".jar path/to/server.py \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# python server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"your-jar-name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \".jar path/to/build/index.js \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# node server\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: \", _jsx(_components.code, {\n              children: \"java -jar build/libs/kotlin-mcp-client-0.1.0-all.jar .../samples/weather-stdio-server/build/libs/weather-stdio-server-0.1.0-all.jar\"\n            })]\n          })\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"The client will:\"\n          })\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Connect to the specified server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"List available tools\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Start an interactive chat session where you can:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Enter queries\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"See tool executions\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Get responses from Claude\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"how-it-works-4\",\n          isAtRootLevel: \"false\",\n          children: \"How it works\"\n        }), _jsx(_components.p, {\n          children: \"Here’s a high-level workflow schema:\"\n        }), _jsx(Mermaid, {\n          chart: `---\nconfig:\n    theme: neutral\n---\nsequenceDiagram\n    actor User\n    participant Client\n    participant Claude\n    participant MCP_Server as MCP Server\n    participant Tools\n\n    User-\u003e\u003eClient: Send query\n    Client\u003c\u003c-\u003e\u003eMCP_Server: Get available tools\n    Client-\u003e\u003eClaude: Send query with tool descriptions\n    Claude--\u003e\u003eClient: Decide tool execution\n    Client-\u003e\u003eMCP_Server: Request tool execution\n    MCP_Server-\u003e\u003eTools: Execute chosen tools\n    Tools--\u003e\u003eMCP_Server: Return results\n    MCP_Server--\u003e\u003eClient: Send results\n    Client-\u003e\u003eClaude: Send tool results\n    Claude--\u003e\u003eClient: Provide final response\n    Client--\u003e\u003eUser: Display response`\n        }), _jsx(_components.p, {\n          children: \"When you submit a query:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The client gets the list of available tools from the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Your query is sent to Claude along with tool descriptions\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude decides which tools (if any) to use\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The client executes any requested tool calls through the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Results are sent back to Claude\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude provides a natural language response\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The response is displayed to you\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"best-practices-3\",\n          isAtRootLevel: \"false\",\n          children: \"Best practices\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Error Handling\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Leverage Kotlin’s type system to model errors explicitly\"\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"Wrap external tool and API calls in \", _jsx(_components.code, {\n                  children: \"try-catch\"\n                }), \" blocks when exceptions are possible\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Provide clear and meaningful error messages\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Handle network timeouts and connection issues gracefully\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Security\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Store API keys and secrets securely in \", _jsx(_components.code, {\n                  children: \"local.properties\"\n                }), \", environment variables, or secret managers\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Validate all external responses to avoid unexpected or unsafe data usage\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Be cautious with permissions and trust boundaries when using tools\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"troubleshooting-3\",\n          isAtRootLevel: \"false\",\n          children: \"Troubleshooting\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-path-issues-3\",\n          isAtRootLevel: \"false\",\n          children: \"Server Path Issues\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Double-check the path to your server script is correct\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Use the absolute path if the relative path isn’t working\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"For Windows users, make sure to use forward slashes (/) or escaped backslashes (\\\\) in the path\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Make sure that the required runtime is installed (java for Java, npm for Node.js, or uv for Python)\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Verify the server file has the correct extension (.jar for Java, .js for Node.js or .py for Python)\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Example of correct path usage:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Relative path\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/client.jar ./server/build/libs/server.jar\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Absolute path\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/client.jar /Users/username/projects/mcp-server/build/libs/server.jar\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Windows path (either format works)\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/client.jar C:/projects/mcp-server/build/libs/server.jar\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/client.jar C:\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"projects\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"mcp-server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"build\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"libs\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"server.jar\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"response-timing-3\",\n          isAtRootLevel: \"false\",\n          children: \"Response Timing\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The first response might take up to 30 seconds to return\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"This is normal and happens while:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"The server initializes\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Claude processes the query\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Tools are being executed\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Subsequent responses are typically faster\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Don’t interrupt the process during this initial waiting period\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"common-error-messages-3\",\n          isAtRootLevel: \"false\",\n          children: \"Common Error Messages\"\n        }), _jsx(_components.p, {\n          children: \"If you see:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Connection refused\"\n            }), \": Ensure the server is running and the path is correct\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Tool execution failed\"\n            }), \": Verify the tool’s required environment variables are set\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY is not set\"\n            }), \": Check your environment variables\"]\n          }), \"\\n\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"C#\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/csharp-sdk/tree/main/samples/QuickstartClient\",\n            children: \"You can find the complete code for this tutorial here.\"\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"system-requirements-5\",\n          isAtRootLevel: \"false\",\n          children: \"System Requirements\"\n        }), _jsx(_components.p, {\n          children: \"Before starting, ensure your system meets these requirements:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \".NET 8.0 or higher\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Anthropic API key (Claude)\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Windows, Linux, or MacOS\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-environment-5\",\n          isAtRootLevel: \"false\",\n          children: \"Setting up your environment\"\n        }), _jsx(_components.p, {\n          children: \"First, create a new .NET project:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet new console \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-n\"\n                }), \" QuickstartClient\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"cd\"\n                }), \" QuickstartClient\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Then, add the required dependencies to your project:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" package ModelContextProtocol \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--prerelease\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" package Anthropic.SDK\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" package Microsoft.Extensions.Hosting\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-api-key-4\",\n          isAtRootLevel: \"false\",\n          children: \"Setting up your API key\"\n        }), _jsxs(_components.p, {\n          children: [\"You’ll need an Anthropic API key from the \", _jsx(_components.a, {\n            href: \"https://console.anthropic.com/settings/keys\",\n            children: \"Anthropic Console\"\n          }), \".\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: \"dotnet user-secrets init\"\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet user-secrets \", _jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"set\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ANTHROPIC_API_KEY\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\u003cyour key here\u003e\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"creating-the-client-4\",\n          isAtRootLevel: \"false\",\n          children: \"Creating the Client\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"basic-client-structure-4\",\n          isAtRootLevel: \"false\",\n          children: \"Basic Client Structure\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s setup the basic client class in the file \", _jsx(_components.code, {\n            children: \"Program.cs\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Anthropic\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"SDK\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Microsoft\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Extensions\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"AI\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Microsoft\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Extensions\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Configuration\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Microsoft\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Extensions\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Hosting\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"ModelContextProtocol\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Client\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"ModelContextProtocol\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Protocol\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Transport\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" builder \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" Host\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CreateApplicationBuilder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"builder\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Configuration\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"AddEnvironmentVariables\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsxs(_components.span, {\n                  className: \"token generic-method\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"AddUserSecrets\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"Program\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"This creates the beginnings of a .NET console application that can read the API key from user secrets.\"\n        }), _jsx(_components.p, {\n          children: \"Next, we’ll setup the MCP Client:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"command\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" arguments\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetCommandAndArguments\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" clientTransport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"StdioClientTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Demo Server\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Command \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" command\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Arguments \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" arguments\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" mcpClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" McpClientFactory\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CreateAsync\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"clientTransport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ListToolsAsync\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"foreach\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" tool \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WriteLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token interpolation-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"$\\\"Connected to server with tools: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), _jsxs(_components.span, {\n                      className: \"token expression language-csharp\",\n                      children: [\"tool\", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \".\"\n                      }), \"Name\"]\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Add this function at the end of the \", _jsx(_components.code, {\n            children: \"Program.cs\"\n          }), \" file:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token return-type class-name\",\n                  children: [_jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  }), \" command\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"[\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"]\"\n                  }), \" arguments\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetCommandAndArguments\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token class-name\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"[\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"]\"\n                  })]\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" args \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"switch\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"when\"\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"EndsWith\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".py\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"python\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"when\"\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"EndsWith\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"node\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"when\"\n                }), \" Directory\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Exists\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"||\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"File\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Exists\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u0026\u0026\"\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"EndsWith\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".csproj\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"dotnet\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"run\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"--project\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"--no-build\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        _ \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"NotSupportedException\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"An unsupported server script was provided. Supported scripts are .py, .js, or .csproj\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"This creates a MCP client that will connect to a server that is provided as a command line argument. It then lists the available tools from the connected server.\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"query-processing-logic-4\",\n          isAtRootLevel: \"false\",\n          children: \"Query processing logic\"\n        }), _jsx(_components.p, {\n          children: \"Now let’s add the core functionality for processing queries and handling tool calls:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" anthropicClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"AnthropicClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"APIAuthentication\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"builder\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Configuration\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ANTHROPIC_API_KEY\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Messages\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"AsBuilder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"UseFunctionInvocation\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" options \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" ChatOptions\"]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    MaxOutputTokens \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1000\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    ModelId \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"claude-3-5-sonnet-20241022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token range operator\",\n                  children: \"..\"\n                }), \" tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"ForegroundColor \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" ConsoleColor\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Green\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WriteLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"MCP Client Started!\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ResetColor\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"PromptForInput\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"while\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ReadLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"is\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  })\n                }), \" query \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u0026\u0026\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"exit\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Equals\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" StringComparison\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"OrdinalIgnoreCase\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"IsNullOrWhiteSpace\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"PromptForInput\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"continue\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"foreach\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" message \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" anthropicClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetStreamingResponseAsync\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" options\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Write\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"message\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WriteLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"PromptForInput\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token return-type class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"void\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"PromptForInput\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WriteLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Enter a command (or 'exit' to quit):\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"ForegroundColor \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" ConsoleColor\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Cyan\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Write\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\u003e \\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ResetColor\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"key-components-explained-2\",\n          isAtRootLevel: \"false\",\n          children: \"Key Components Explained\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"1-client-initialization-2\",\n          isAtRootLevel: \"false\",\n          children: \"1. Client Initialization\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"The client is initialized using \", _jsx(_components.code, {\n              children: \"McpClientFactory.CreateAsync()\"\n            }), \", which sets up the transport type and command to run the server.\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"2-server-connection-2\",\n          isAtRootLevel: \"false\",\n          children: \"2. Server Connection\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Supports Python, Node.js, and .NET servers.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The server is started using the command specified in the arguments.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Configures to use stdio for communication with the server.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Initializes the session and available tools.\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"3-query-processing-2\",\n          isAtRootLevel: \"false\",\n          children: \"3. Query Processing\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"Leverages \", _jsx(_components.a, {\n              href: \"https://learn.microsoft.com/dotnet/ai/ai-extensions\",\n              children: \"Microsoft.Extensions.AI\"\n            }), \" for the chat client.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Configures the \", _jsx(_components.code, {\n              children: \"IChatClient\"\n            }), \" to use automatic tool (function) invocation.\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The client reads user input and sends it to the server.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The server processes the query and returns a response.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The response is displayed to the user.\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"running-the-client-4\",\n          isAtRootLevel: \"false\",\n          children: \"Running the Client\"\n        }), _jsx(_components.p, {\n          children: \"To run your client with any MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet run -- path/to/server.csproj \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# dotnet server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet run -- path/to/server.py \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# python server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet run -- path/to/server.js \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# node server\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: \", _jsx(_components.code, {\n              children: \"dotnet run -- path/to/QuickstartWeatherServer\"\n            }), \".\"]\n          })\n        }), _jsx(_components.p, {\n          children: \"The client will:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Connect to the specified server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"List available tools\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Start an interactive chat session where you can:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Enter queries\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"See tool executions\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Get responses from Claude\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Exit the session when done\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Here’s an example of what it should look like it connected to a weather server quickstart:\"\n        }), _jsx(Frame, {\n          children: _jsx(ZoomImage, {\n            children: _jsx(\"img\", {\n              src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/quickstart-dotnet-client.png\"\n            })\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(Heading, {\n      level: \"2\",\n      id: \"next-steps\",\n      isAtRootLevel: \"true\",\n      children: \"Next steps\"\n    }), \"\\n\", _jsxs(CardGroup, {\n      cols: 2,\n      children: [_jsx(Card, {\n        title: \"Example servers\",\n        icon: \"grid\",\n        href: \"/examples\",\n        children: _jsx(_components.p, {\n          children: \"Check out our gallery of official MCP servers and implementations\"\n        })\n      }), _jsx(Card, {\n        title: \"Clients\",\n        icon: \"cubes\",\n        href: \"/clients\",\n        children: _jsx(_components.p, {\n          children: \"View the list of clients that support MCP integrations\"\n        })\n      }), _jsx(Card, {\n        title: \"Building MCP with LLMs\",\n        icon: \"comments\",\n        href: \"/tutorials/building-mcp-with-llms\",\n        children: _jsx(_components.p, {\n          children: \"Learn how to use LLMs like Claude to speed up your MCP development\"\n        })\n      }), _jsx(Card, {\n        title: \"Core architecture\",\n        icon: \"sitemap\",\n        href: \"/docs/concepts/architecture\",\n        children: _jsx(_components.p, {\n          children: \"Understand how MCP connects clients, servers, and LLMs\"\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"config":{"theme":"willow","$schema":"https://mintlify.com/docs.json","name":"Model Context Protocol","colors":{"primary":"#09090b","light":"#FAFAFA","dark":"#09090b"},"logo":{"light":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg","dark":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg"},"favicon":"/favicon.svg","navbar":{"links":[],"primary":{"type":"button","label":"GitHub","href":"https://github.com/modelcontextprotocol"}},"navigation":{"global":{"anchors":[{"anchor":"Python SDK","icon":"python","href":"https://github.com/modelcontextprotocol/python-sdk"},{"anchor":"TypeScript SDK","icon":"square-js","href":"https://github.com/modelcontextprotocol/typescript-sdk"},{"anchor":"Java SDK","icon":"java","href":"https://github.com/modelcontextprotocol/java-sdk"},{"anchor":"Kotlin SDK","icon":"square-k","href":"https://github.com/modelcontextprotocol/kotlin-sdk"},{"anchor":"C# SDK","icon":"square-c","href":"https://github.com/modelcontextprotocol/csharp-sdk"},{"anchor":"Swift SDK","icon":"swift","href":"https://github.com/modelcontextprotocol/swift-sdk"}]},"tabs":[{"tab":"User Guide","groups":[{"group":"Get Started","pages":["introduction",{"group":"Quickstart","pages":["quickstart/server","quickstart/client","quickstart/user"]},"examples","clients","faqs"]},{"group":"Tutorials","pages":["tutorials/building-mcp-with-llms","docs/tools/debugging","docs/tools/inspector"]},{"group":"Concepts","pages":["docs/concepts/architecture","docs/concepts/resources","docs/concepts/prompts","docs/concepts/tools","docs/concepts/sampling","docs/concepts/roots","docs/concepts/transports"]},{"group":"Development","pages":["development/updates","development/roadmap","development/contributing"]}]},{"tab":"SDKs","icon":"book-open","groups":[{"group":"Java","pages":["sdk/java/mcp-overview","sdk/java/mcp-client","sdk/java/mcp-server"]}]},{"tab":"Specification","icon":"book","groups":[{"group":"2025-03-26 (Latest)","pages":["specification/2025-03-26/index","specification/2025-03-26/changelog","specification/2025-03-26/architecture/index",{"group":"Base Protocol","pages":["specification/2025-03-26/basic/index","specification/2025-03-26/basic/lifecycle","specification/2025-03-26/basic/transports","specification/2025-03-26/basic/authorization",{"group":"Utilities","pages":["specification/2025-03-26/basic/utilities/cancellation","specification/2025-03-26/basic/utilities/ping","specification/2025-03-26/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2025-03-26/client/roots","specification/2025-03-26/client/sampling"]},{"group":"Server Features","pages":["specification/2025-03-26/server/index","specification/2025-03-26/server/prompts","specification/2025-03-26/server/resources","specification/2025-03-26/server/tools",{"group":"Utilities","pages":["specification/2025-03-26/server/utilities/completion","specification/2025-03-26/server/utilities/logging","specification/2025-03-26/server/utilities/pagination"]}]}]},{"group":"2024-11-05","pages":["specification/2024-11-05/index","specification/2024-11-05/architecture/index",{"group":"Base Protocol","pages":["specification/2024-11-05/basic/index","specification/2024-11-05/basic/lifecycle","specification/2024-11-05/basic/messages","specification/2024-11-05/basic/transports",{"group":"Utilities","pages":["specification/2024-11-05/basic/utilities/cancellation","specification/2024-11-05/basic/utilities/ping","specification/2024-11-05/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2024-11-05/client/roots","specification/2024-11-05/client/sampling"]},{"group":"Server Features","pages":["specification/2024-11-05/server/index","specification/2024-11-05/server/prompts","specification/2024-11-05/server/resources","specification/2024-11-05/server/tools",{"group":"Utilities","pages":["specification/2024-11-05/server/utilities/completion","specification/2024-11-05/server/utilities/logging","specification/2024-11-05/server/utilities/pagination"]}]}]},{"group":"draft","pages":["specification/draft/index","specification/draft/changelog","specification/draft/architecture/index",{"group":"Base Protocol","pages":["specification/draft/basic/index","specification/draft/basic/lifecycle","specification/draft/basic/transports","specification/draft/basic/authorization","specification/draft/basic/security_best_practices",{"group":"Utilities","pages":["specification/draft/basic/utilities/cancellation","specification/draft/basic/utilities/ping","specification/draft/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/draft/client/roots","specification/draft/client/sampling"]},{"group":"Server Features","pages":["specification/draft/server/index","specification/draft/server/prompts","specification/draft/server/resources","specification/draft/server/tools",{"group":"Utilities","pages":["specification/draft/server/utilities/completion","specification/draft/server/utilities/logging","specification/draft/server/utilities/pagination"]}]}]},{"group":"Resources","pages":["specification/versioning","specification/contributing"]}]}]},"footer":{"socials":{"github":"https://github.com/modelcontextprotocol"}},"seo":{"metatags":{"og:image":"https://raw.githubusercontent.com/modelcontextprotocol/docs/2eb6171ddbfeefde349dc3b8d5e2b87414c26250/images/og-image.png"},"indexing":"navigable"},"redirects":[{"source":"/tutorials/building-a-client","destination":"/quickstart/client"},{"source":"/quickstart","destination":"/quickstart/server"},{"source":"/specification/latest","destination":"/specification/2025-03-26","permanent":false}],"contextual":{"options":["copy","view"]}},"pageMetadata":{"title":"For Client Developers","description":"Get started building your own client that can integrate with all MCP servers.","href":"/quickstart/client"}}},"mdxExtracts":{"tableOfContents":[{"title":"Next steps","slug":"next-steps","depth":2,"children":[]}],"codeExamples":{}},"description":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Get started building your own client that can integrate with all MCP servers.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"pageData":{"navWithMetadata":[{"group":"Get Started","pages":[{"title":"Introduction","description":"Get started with the Model Context Protocol (MCP)","href":"/introduction"},{"group":"Quickstart","pages":[{"title":"For Server Developers","description":"Get started building your own server to use in Claude for Desktop and other clients.","href":"/quickstart/server"},{"title":"For Client Developers","description":"Get started building your own client that can integrate with all MCP servers.","href":"/quickstart/client"},{"title":"For Claude Desktop Users","description":"Get started using pre-built servers in Claude for Desktop.","href":"/quickstart/user"}]},{"title":"Example Servers","description":"A list of example servers and implementations","href":"/examples"},{"title":"Example Clients","description":"A list of applications that support MCP integrations","href":"/clients"}]},{"group":"Tutorials","pages":[{"title":"Building MCP with LLMs","description":"Speed up your MCP development using LLMs such as Claude!","href":"/tutorials/building-mcp-with-llms"},{"title":"Debugging","description":"A comprehensive guide to debugging Model Context Protocol (MCP) integrations","href":"/docs/tools/debugging"},{"title":"Inspector","description":"In-depth guide to using the MCP Inspector for testing and debugging Model Context Protocol servers","href":"/docs/tools/inspector"}]},{"group":"Concepts","pages":[{"title":"Core architecture","description":"Understand how MCP connects clients, servers, and LLMs","href":"/docs/concepts/architecture"},{"title":"Resources","description":"Expose data and content from your servers to LLMs","href":"/docs/concepts/resources"},{"title":"Prompts","description":"Create reusable prompt templates and workflows","href":"/docs/concepts/prompts"},{"title":"Tools","description":"Enable LLMs to perform actions through your server","href":"/docs/concepts/tools"},{"title":"Sampling","description":"Let your servers request completions from LLMs","href":"/docs/concepts/sampling"},{"title":"Roots","description":"Understanding roots in MCP","href":"/docs/concepts/roots"},{"title":"Transports","description":"Learn about MCP's communication mechanisms","href":"/docs/concepts/transports"}]},{"group":"Development","pages":[{"title":"What's New","description":"The latest updates and improvements to MCP","href":"/development/updates"},{"title":"Roadmap","description":"Our plans for evolving Model Context Protocol (H1 2025)","href":"/development/roadmap"},{"title":"Contributing","description":"How to participate in Model Context Protocol development","href":"/development/contributing"}]}],"docsNavWithMetadata":{"global":{"anchors":[{"anchor":"Python SDK","icon":"python","href":"https://github.com/modelcontextprotocol/python-sdk"},{"anchor":"TypeScript SDK","icon":"square-js","href":"https://github.com/modelcontextprotocol/typescript-sdk"},{"anchor":"Java SDK","icon":"java","href":"https://github.com/modelcontextprotocol/java-sdk"},{"anchor":"Kotlin SDK","icon":"square-k","href":"https://github.com/modelcontextprotocol/kotlin-sdk"},{"anchor":"C# SDK","icon":"square-c","href":"https://github.com/modelcontextprotocol/csharp-sdk"},{"anchor":"Swift SDK","icon":"swift","href":"https://github.com/modelcontextprotocol/swift-sdk"}]},"tabs":[{"tab":"User Guide","groups":[{"group":"Get Started","pages":[{"title":"Introduction","description":"Get started with the Model Context Protocol (MCP)","href":"/introduction"},{"group":"Quickstart","pages":[{"title":"For Server Developers","description":"Get started building your own server to use in Claude for Desktop and other clients.","href":"/quickstart/server"},{"title":"For Client Developers","description":"Get started building your own client that can integrate with all MCP servers.","href":"/quickstart/client"},{"title":"For Claude Desktop Users","description":"Get started using pre-built servers in Claude for Desktop.","href":"/quickstart/user"}]},{"title":"Example Servers","description":"A list of example servers and implementations","href":"/examples"},{"title":"Example Clients","description":"A list of applications that support MCP integrations","href":"/clients"},{"title":"FAQs","description":"Explaining MCP and why it matters in simple terms","href":"/faqs"}]},{"group":"Tutorials","pages":[{"title":"Building MCP with LLMs","description":"Speed up your MCP development using LLMs such as Claude!","href":"/tutorials/building-mcp-with-llms"},{"title":"Debugging","description":"A comprehensive guide to debugging Model Context Protocol (MCP) integrations","href":"/docs/tools/debugging"},{"title":"Inspector","description":"In-depth guide to using the MCP Inspector for testing and debugging Model Context Protocol servers","href":"/docs/tools/inspector"}]},{"group":"Concepts","pages":[{"title":"Core architecture","description":"Understand how MCP connects clients, servers, and LLMs","href":"/docs/concepts/architecture"},{"title":"Resources","description":"Expose data and content from your servers to LLMs","href":"/docs/concepts/resources"},{"title":"Prompts","description":"Create reusable prompt templates and workflows","href":"/docs/concepts/prompts"},{"title":"Tools","description":"Enable LLMs to perform actions through your server","href":"/docs/concepts/tools"},{"title":"Sampling","description":"Let your servers request completions from LLMs","href":"/docs/concepts/sampling"},{"title":"Roots","description":"Understanding roots in MCP","href":"/docs/concepts/roots"},{"title":"Transports","description":"Learn about MCP's communication mechanisms","href":"/docs/concepts/transports"}]},{"group":"Development","pages":[{"title":"What's New","description":"The latest updates and improvements to MCP","href":"/development/updates"},{"title":"Roadmap","description":"Our plans for evolving Model Context Protocol","href":"/development/roadmap"},{"title":"Contributing","description":"How to participate in Model Context Protocol development","href":"/development/contributing"}]}]},{"tab":"SDKs","icon":"book-open","groups":[{"group":"Java","pages":[{"title":"Overview","description":"Introduction to the Model Context Protocol (MCP) Java SDK","href":"/sdk/java/mcp-overview"},{"title":"MCP Client","description":"Learn how to use the Model Context Protocol (MCP) client to interact with MCP servers","href":"/sdk/java/mcp-client"},{"title":"MCP Server","description":"Learn how to implement and configure a Model Context Protocol (MCP) server","href":"/sdk/java/mcp-server"}]}]},{"tab":"Specification","icon":"book","groups":[{"group":"2025-03-26 (Latest)","pages":[{"title":"Specification","description":null,"href":"/specification/2025-03-26"},{"title":"Key Changes","description":null,"href":"/specification/2025-03-26/changelog"},{"title":"Architecture","description":null,"href":"/specification/2025-03-26/architecture/index"},{"group":"Base Protocol","pages":[{"title":"Overview","description":null,"href":"/specification/2025-03-26/basic/index"},{"title":"Lifecycle","description":null,"href":"/specification/2025-03-26/basic/lifecycle"},{"title":"Transports","description":null,"href":"/specification/2025-03-26/basic/transports"},{"title":"Authorization","description":null,"href":"/specification/2025-03-26/basic/authorization"},{"group":"Utilities","pages":[{"title":"Cancellation","description":null,"href":"/specification/2025-03-26/basic/utilities/cancellation"},{"title":"Ping","description":null,"href":"/specification/2025-03-26/basic/utilities/ping"},{"title":"Progress","description":null,"href":"/specification/2025-03-26/basic/utilities/progress"}]}]},{"group":"Client Features","pages":[{"title":"Roots","description":null,"href":"/specification/2025-03-26/client/roots"},{"title":"Sampling","description":null,"href":"/specification/2025-03-26/client/sampling"}]},{"group":"Server Features","pages":[{"title":"Overview","description":null,"href":"/specification/2025-03-26/server/index"},{"title":"Prompts","description":null,"href":"/specification/2025-03-26/server/prompts"},{"title":"Resources","description":null,"href":"/specification/2025-03-26/server/resources"},{"title":"Tools","description":null,"href":"/specification/2025-03-26/server/tools"},{"group":"Utilities","pages":[{"title":"Completion","description":null,"href":"/specification/2025-03-26/server/utilities/completion"},{"title":"Logging","description":null,"href":"/specification/2025-03-26/server/utilities/logging"},{"title":"Pagination","description":null,"href":"/specification/2025-03-26/server/utilities/pagination"}]}]}]},{"group":"2024-11-05","pages":[{"title":"Specification","description":null,"href":"/specification/2024-11-05/index"},{"title":"Architecture","description":null,"href":"/specification/2024-11-05/architecture/index"},{"group":"Base Protocol","pages":[{"title":"Overview","description":null,"href":"/specification/2024-11-05/basic/index"},{"title":"Lifecycle","type":"docs","weight":30,"description":null,"href":"/specification/2024-11-05/basic/lifecycle"},{"title":"Messages","type":"docs","weight":20,"description":null,"href":"/specification/2024-11-05/basic/messages"},{"title":"Transports","type":"docs","weight":40,"description":null,"href":"/specification/2024-11-05/basic/transports"},{"group":"Utilities","pages":[{"title":"Cancellation","weight":10,"description":null,"href":"/specification/2024-11-05/basic/utilities/cancellation"},{"title":"Ping","weight":5,"description":null,"href":"/specification/2024-11-05/basic/utilities/ping"},{"title":"Progress","weight":30,"description":null,"href":"/specification/2024-11-05/basic/utilities/progress"}]}]},{"group":"Client Features","pages":[{"title":"Roots","type":"docs","weight":40,"description":null,"href":"/specification/2024-11-05/client/roots"},{"title":"Sampling","type":"docs","weight":40,"description":null,"href":"/specification/2024-11-05/client/sampling"}]},{"group":"Server Features","pages":[{"title":"Overview","description":null,"href":"/specification/2024-11-05/server/index"},{"title":"Prompts","weight":10,"description":null,"href":"/specification/2024-11-05/server/prompts"},{"title":"Resources","type":"docs","weight":20,"description":null,"href":"/specification/2024-11-05/server/resources"},{"title":"Tools","type":"docs","weight":40,"description":null,"href":"/specification/2024-11-05/server/tools"},{"group":"Utilities","pages":[{"title":"Completion","description":null,"href":"/specification/2024-11-05/server/utilities/completion"},{"title":"Logging","description":null,"href":"/specification/2024-11-05/server/utilities/logging"},{"title":"Pagination","description":null,"href":"/specification/2024-11-05/server/utilities/pagination"}]}]}]},{"group":"draft","pages":[{"title":"Specification","description":null,"href":"/specification/draft/index"},{"title":"Key Changes","description":null,"href":"/specification/draft/changelog"},{"title":"Architecture","description":null,"href":"/specification/draft/architecture/index"},{"group":"Base Protocol","pages":[{"title":"Overview","description":null,"href":"/specification/draft/basic/index"},{"title":"Lifecycle","description":null,"href":"/specification/draft/basic/lifecycle"},{"title":"Transports","description":null,"href":"/specification/draft/basic/transports"},{"title":"Authorization","description":null,"href":"/specification/draft/basic/authorization"},{"title":"Security Best Practices","description":null,"href":"/specification/draft/basic/security_best_practices"},{"group":"Utilities","pages":[{"title":"Cancellation","description":null,"href":"/specification/draft/basic/utilities/cancellation"},{"title":"Ping","description":null,"href":"/specification/draft/basic/utilities/ping"},{"title":"Progress","description":null,"href":"/specification/draft/basic/utilities/progress"}]}]},{"group":"Client Features","pages":[{"title":"Roots","description":null,"href":"/specification/draft/client/roots"},{"title":"Sampling","description":null,"href":"/specification/draft/client/sampling"}]},{"group":"Server Features","pages":[{"title":"Overview","description":null,"href":"/specification/draft/server/index"},{"title":"Prompts","description":null,"href":"/specification/draft/server/prompts"},{"title":"Resources","description":null,"href":"/specification/draft/server/resources"},{"title":"Tools","description":null,"href":"/specification/draft/server/tools"},{"group":"Utilities","pages":[{"title":"Completion","description":null,"href":"/specification/draft/server/utilities/completion"},{"title":"Logging","description":null,"href":"/specification/draft/server/utilities/logging"},{"title":"Pagination","description":null,"href":"/specification/draft/server/utilities/pagination"}]}]}]},{"group":"Resources","pages":[{"title":"Versioning","type":"docs","weight":10,"description":null,"href":"/specification/versioning"},{"title":"Contributions","weight":20,"cascade":{"type":"docs"},"breadcrumbs":false,"description":null,"href":"/specification/contributing"}]}]}]},"pageMetadata":{"title":"For Client Developers","description":"Get started building your own client that can integrate with all MCP servers.","href":"/quickstart/client"},"docsConfig":{"theme":"willow","$schema":"https://mintlify.com/docs.json","name":"Model Context Protocol","colors":{"primary":"#09090b","light":"#FAFAFA","dark":"#09090b"},"logo":{"light":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg","dark":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg"},"favicon":"/favicon.svg","navbar":{"links":[],"primary":{"type":"button","label":"GitHub","href":"https://github.com/modelcontextprotocol"}},"navigation":{"global":{"anchors":[{"anchor":"Python SDK","icon":"python","href":"https://github.com/modelcontextprotocol/python-sdk"},{"anchor":"TypeScript SDK","icon":"square-js","href":"https://github.com/modelcontextprotocol/typescript-sdk"},{"anchor":"Java SDK","icon":"java","href":"https://github.com/modelcontextprotocol/java-sdk"},{"anchor":"Kotlin SDK","icon":"square-k","href":"https://github.com/modelcontextprotocol/kotlin-sdk"},{"anchor":"C# SDK","icon":"square-c","href":"https://github.com/modelcontextprotocol/csharp-sdk"},{"anchor":"Swift SDK","icon":"swift","href":"https://github.com/modelcontextprotocol/swift-sdk"}]},"tabs":[{"tab":"User Guide","groups":[{"group":"Get Started","pages":["introduction",{"group":"Quickstart","pages":["quickstart/server","quickstart/client","quickstart/user"]},"examples","clients","faqs"]},{"group":"Tutorials","pages":["tutorials/building-mcp-with-llms","docs/tools/debugging","docs/tools/inspector"]},{"group":"Concepts","pages":["docs/concepts/architecture","docs/concepts/resources","docs/concepts/prompts","docs/concepts/tools","docs/concepts/sampling","docs/concepts/roots","docs/concepts/transports"]},{"group":"Development","pages":["development/updates","development/roadmap","development/contributing"]}]},{"tab":"SDKs","icon":"book-open","groups":[{"group":"Java","pages":["sdk/java/mcp-overview","sdk/java/mcp-client","sdk/java/mcp-server"]}]},{"tab":"Specification","icon":"book","groups":[{"group":"2025-03-26 (Latest)","pages":["specification/2025-03-26/index","specification/2025-03-26/changelog","specification/2025-03-26/architecture/index",{"group":"Base Protocol","pages":["specification/2025-03-26/basic/index","specification/2025-03-26/basic/lifecycle","specification/2025-03-26/basic/transports","specification/2025-03-26/basic/authorization",{"group":"Utilities","pages":["specification/2025-03-26/basic/utilities/cancellation","specification/2025-03-26/basic/utilities/ping","specification/2025-03-26/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2025-03-26/client/roots","specification/2025-03-26/client/sampling"]},{"group":"Server Features","pages":["specification/2025-03-26/server/index","specification/2025-03-26/server/prompts","specification/2025-03-26/server/resources","specification/2025-03-26/server/tools",{"group":"Utilities","pages":["specification/2025-03-26/server/utilities/completion","specification/2025-03-26/server/utilities/logging","specification/2025-03-26/server/utilities/pagination"]}]}]},{"group":"2024-11-05","pages":["specification/2024-11-05/index","specification/2024-11-05/architecture/index",{"group":"Base Protocol","pages":["specification/2024-11-05/basic/index","specification/2024-11-05/basic/lifecycle","specification/2024-11-05/basic/messages","specification/2024-11-05/basic/transports",{"group":"Utilities","pages":["specification/2024-11-05/basic/utilities/cancellation","specification/2024-11-05/basic/utilities/ping","specification/2024-11-05/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2024-11-05/client/roots","specification/2024-11-05/client/sampling"]},{"group":"Server Features","pages":["specification/2024-11-05/server/index","specification/2024-11-05/server/prompts","specification/2024-11-05/server/resources","specification/2024-11-05/server/tools",{"group":"Utilities","pages":["specification/2024-11-05/server/utilities/completion","specification/2024-11-05/server/utilities/logging","specification/2024-11-05/server/utilities/pagination"]}]}]},{"group":"draft","pages":["specification/draft/index","specification/draft/changelog","specification/draft/architecture/index",{"group":"Base Protocol","pages":["specification/draft/basic/index","specification/draft/basic/lifecycle","specification/draft/basic/transports","specification/draft/basic/authorization","specification/draft/basic/security_best_practices",{"group":"Utilities","pages":["specification/draft/basic/utilities/cancellation","specification/draft/basic/utilities/ping","specification/draft/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/draft/client/roots","specification/draft/client/sampling"]},{"group":"Server Features","pages":["specification/draft/server/index","specification/draft/server/prompts","specification/draft/server/resources","specification/draft/server/tools",{"group":"Utilities","pages":["specification/draft/server/utilities/completion","specification/draft/server/utilities/logging","specification/draft/server/utilities/pagination"]}]}]},{"group":"Resources","pages":["specification/versioning","specification/contributing"]}]}]},"footer":{"socials":{"github":"https://github.com/modelcontextprotocol"}},"seo":{"metatags":{"og:image":"https://raw.githubusercontent.com/modelcontextprotocol/docs/2eb6171ddbfeefde349dc3b8d5e2b87414c26250/images/og-image.png"},"indexing":"navigable"},"redirects":[{"source":"/tutorials/building-a-client","destination":"/quickstart/client"},{"source":"/quickstart","destination":"/quickstart/server"},{"source":"/specification/latest","destination":"/specification/2025-03-26","permanent":false}],"contextual":{"options":["copy","view"]}},"apiReferenceData":{}},"feedback":{"thumbs":true},"favicons":{"icons":[{"rel":"apple-touch-icon","sizes":"180x180","href":"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/apple-touch-icon.png?v=3","type":"image/png"},{"rel":"icon","sizes":"32x32","href":"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon-32x32.png?v=3","type":"image/png"},{"rel":"icon","sizes":"16x16","href":"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon-16x16.png?v=3","type":"image/png"},{"rel":"shortcut icon","href":"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/favicon.ico?v=3","type":"image/x-icon"}],"browserconfig":"https://mintlify.s3-us-west-1.amazonaws.com/mcp/_generated/favicon/browserconfig.xml?v=3"},"subdomain":"modelcontextprotocol.io","actualSubdomain":"mcp","internalAnalyticsWriteKey":"phc_TXdpocbGVeZVm5VJmAsHTMrCofBQu3e0kN8HGMNGTVW","trieve":{"datasetId":"c3022217-7d56-4a27-b404-9c5678730db6","chatEnabled":true},"shouldIndex":true,"org":{"plan":"enterprise","createdAt":"2023-12-21T01:33:54.763Z"},"cssFiles":[{"_id":"68221a4c777ecd398774eef7","filePath":"style.css","subdomain":"mcp","__v":0,"content":"\n#feature-support-matrix-wrapper {\n    overflow-x: auto;\n}\n\n#feature-support-matrix-wrapper table {\n    min-width: 800px;\n}\n"}],"jsFiles":[],"mdxSourceWithNoJs":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  }, {Card, CardGroup, CodeBlock, CodeGroup, Frame, Heading, Mermaid, Note, Tab, Tabs, Warning, ZoomImage} = _components;\n  if (!Card) _missingMdxReference(\"Card\", true);\n  if (!CardGroup) _missingMdxReference(\"CardGroup\", true);\n  if (!CodeBlock) _missingMdxReference(\"CodeBlock\", true);\n  if (!CodeGroup) _missingMdxReference(\"CodeGroup\", true);\n  if (!Frame) _missingMdxReference(\"Frame\", true);\n  if (!Heading) _missingMdxReference(\"Heading\", true);\n  if (!Mermaid) _missingMdxReference(\"Mermaid\", true);\n  if (!Note) _missingMdxReference(\"Note\", true);\n  if (!Tab) _missingMdxReference(\"Tab\", true);\n  if (!Tabs) _missingMdxReference(\"Tabs\", true);\n  if (!Warning) _missingMdxReference(\"Warning\", true);\n  if (!ZoomImage) _missingMdxReference(\"ZoomImage\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"In this tutorial, you’ll learn how to build a LLM-powered chatbot client that connects to MCP servers. It helps to have gone through the \", _jsx(_components.a, {\n        href: \"/quickstart/server\",\n        children: \"Server quickstart\"\n      }), \" that guides you through the basic of building your first server.\"]\n    }), \"\\n\", _jsxs(Tabs, {\n      children: [_jsxs(Tab, {\n        title: \"Python\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/quickstart-resources/tree/main/mcp-client-python\",\n            children: \"You can find the complete code for this tutorial here.\"\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"system-requirements\",\n          isAtRootLevel: \"false\",\n          children: \"System Requirements\"\n        }), _jsx(_components.p, {\n          children: \"Before starting, ensure your system meets these requirements:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Mac or Windows computer\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Latest Python version installed\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Latest version of \", _jsx(_components.code, {\n              children: \"uv\"\n            }), \" installed\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-environment\",\n          isAtRootLevel: \"false\",\n          children: \"Setting Up Your Environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, create a new Python project with \", _jsx(_components.code, {\n            children: \"uv\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Create project directory\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"uv init mcp-client\"\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"cd\"\n                }), \" mcp-client\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Create virtual environment\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"uv venv\"\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Activate virtual environment\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# On Windows:\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\".venv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"Scripts\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"activate\"]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# On Unix or MacOS:\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"source\"\n                }), \" .venv/bin/activate\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Install required packages\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"uv \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" mcp anthropic python-dotenv\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Remove boilerplate files\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# On Windows:\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"del main.py\"\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# On Unix or MacOS:\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"rm\"\n                }), \" main.py\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Create our main file\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"touch\"\n                }), \" client.py\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-api-key\",\n          isAtRootLevel: \"false\",\n          children: \"Setting Up Your API Key\"\n        }), _jsxs(_components.p, {\n          children: [\"You’ll need an Anthropic API key from the \", _jsx(_components.a, {\n            href: \"https://console.anthropic.com/settings/keys\",\n            children: \"Anthropic Console\"\n          }), \".\"]\n        }), _jsxs(_components.p, {\n          children: [\"Create a \", _jsx(_components.code, {\n            children: \".env\"\n          }), \" file to store it:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Create .env file\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"touch\"\n                }), \" .env\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Add your key to the \", _jsx(_components.code, {\n            children: \".env\"\n          }), \" file:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token assign-left variable\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"your key here\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Add \", _jsx(_components.code, {\n            children: \".env\"\n          }), \" to your \", _jsx(_components.code, {\n            children: \".gitignore\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"echo\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".env\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\u003e\"\n                }), \" .gitignore\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"Make sure you keep your \", _jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY\"\n            }), \" secure!\"]\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"creating-the-client\",\n          isAtRootLevel: \"false\",\n          children: \"Creating the Client\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"basic-client-structure\",\n          isAtRootLevel: \"false\",\n          children: \"Basic Client Structure\"\n        }), _jsx(_components.p, {\n          children: \"First, let’s set up our imports and create the basic client class:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" asyncio\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" typing \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" Optional\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" contextlib \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" AsyncExitStack\"]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" mcp \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" ClientSession\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" StdioServerParameters\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"stdio \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" stdio_client\"]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" anthropic \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" Anthropic\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" dotenv \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" load_dotenv\"]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"load_dotenv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \"  \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# load environment variables from .env\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"MCPClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"__init__\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Initialize session and client objects\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" Optional\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"ClientSession\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"None\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"exit_stack \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" AsyncExitStack\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" Anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# methods will go here\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-connection-management\",\n          isAtRootLevel: \"false\",\n          children: \"Server Connection Management\"\n        }), _jsx(_components.p, {\n          children: \"Next, we’ll implement the method to connect to an MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connect_to_server\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" server_script_path\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"Connect to an MCP server\"]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        server_script_path\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" Path to the server script \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"py \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"or\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"js\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    is_python \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" server_script_path\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"endswith\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'.py'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    is_js \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" server_script_path\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"endswith\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'.js'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"not\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"is_python \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"or\"\n                }), \" is_js\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"raise\"\n                }), \" ValueError\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Server script must be a .py or .js file\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    command \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"python\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" is_python \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"else\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"node\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    server_params \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" StdioServerParameters\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        command\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"command\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        args\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"server_script_path\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        env\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"None\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    stdio_transport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"exit_stack\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"enter_async_context\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"stdio_client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"server_params\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"stdio\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"write \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" stdio_transport\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"exit_stack\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"enter_async_context\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"ClientSession\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"stdio\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"write\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"initialize\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# List available tools\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"list_tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\nConnected to server with tools:\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" tool \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"query-processing-logic\",\n          isAtRootLevel: \"false\",\n          children: \"Query Processing Logic\"\n        }), _jsx(_components.p, {\n          children: \"Now let’s add the core functionality for processing queries and handling tool calls:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"process_query\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"str\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token triple-quoted-string string\",\n                  children: \"\\\"\\\"\\\"Process a query using Claude and available tools\\\"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    messages \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"role\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"user\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"content\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" query\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"list_tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    available_tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"name\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"description\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"description\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"input_schema\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputSchema\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" tool \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Initial Claude API call\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"create\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        model\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"claude-3-5-sonnet-20241022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        max_tokens\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1000\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        messages\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"available_tools\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Process response and handle tool calls\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    final_text \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    assistant_message_content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" content \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"type\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'text'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            final_text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            assistant_message_content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"elif\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"type\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'tool_use'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            tool_name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            tool_args \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"input\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Execute tool call\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            result \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"session\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"call_tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool_name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" tool_args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            final_text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"[Calling tool \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"tool_name\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \" with args \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), \"tool_args\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"]\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            assistant_message_content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"role\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"assistant\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"content\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" assistant_message_content\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"role\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"user\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"content\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"type\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"tool_result\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"tool_use_id\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"id\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"content\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" result\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Get next response from Claude\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"create\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                model\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"claude-3-5-sonnet-20241022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                max_tokens\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1000\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                messages\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \"available_tools\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            final_text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"append\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"join\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"final_text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"interactive-chat-interface\",\n          isAtRootLevel: \"false\",\n          children: \"Interactive Chat Interface\"\n        }), _jsx(_components.p, {\n          children: \"Now we’ll add the chat loop and cleanup functionality:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"chat_loop\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token triple-quoted-string string\",\n                  children: \"\\\"\\\"\\\"Run an interactive chat loop\\\"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\nMCP Client Started!\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Type your queries or 'quit' to exit.\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"while\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"True\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            query \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"input\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\nQuery: \\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"strip\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"lower\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'quit'\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"break\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"process_query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"+\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"except\"\n                }), \" Exception \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-interpolation\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"f\\\"\\\\nError: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), _jsx(_components.span, {\n                      className: \"token builtin\",\n                      children: \"str\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), \"e\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"cleanup\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token triple-quoted-string string\",\n                  children: \"\\\"\\\"\\\"Clean up resources\\\"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" self\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"exit_stack\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"aclose\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"main-entry-point\",\n          isAtRootLevel: \"false\",\n          children: \"Main Entry Point\"\n        }), _jsx(_components.p, {\n          children: \"Finally, we’ll add the main execution logic:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-python\",\n            children: _jsxs(_components.code, {\n              className: \"language-python\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"def\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"len\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"sys\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"argv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"2\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Usage: python client.py \u003cpath_to_server_script\u003e\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        sys\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"exit\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    client \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" MCPClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"connect_to_server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"sys\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"argv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"chat_loop\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"finally\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"cleanup\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" __name__ \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"__main__\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" sys\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    asyncio\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"run\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"main\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"You can find the complete \", _jsx(_components.code, {\n            children: \"client.py\"\n          }), \" file \", _jsx(_components.a, {\n            href: \"https://gist.github.com/zckly/f3f28ea731e096e53b39b47bf0a2d4b1\",\n            children: \"here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"key-components-explained\",\n          isAtRootLevel: \"false\",\n          children: \"Key Components Explained\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"1-client-initialization\",\n          isAtRootLevel: \"false\",\n          children: \"1. Client Initialization\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"The \", _jsx(_components.code, {\n              children: \"MCPClient\"\n            }), \" class initializes with session management and API clients\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Uses \", _jsx(_components.code, {\n              children: \"AsyncExitStack\"\n            }), \" for proper resource management\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Configures the Anthropic client for Claude interactions\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"2-server-connection\",\n          isAtRootLevel: \"false\",\n          children: \"2. Server Connection\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Supports both Python and Node.js servers\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Validates server script type\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Sets up proper communication channels\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Initializes the session and lists available tools\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"3-query-processing\",\n          isAtRootLevel: \"false\",\n          children: \"3. Query Processing\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Maintains conversation context\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Handles Claude’s responses and tool calls\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Manages the message flow between Claude and tools\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Combines results into a coherent response\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"4-interactive-interface\",\n          isAtRootLevel: \"false\",\n          children: \"4. Interactive Interface\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Provides a simple command-line interface\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Handles user input and displays responses\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Includes basic error handling\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Allows graceful exit\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"5-resource-management\",\n          isAtRootLevel: \"false\",\n          children: \"5. Resource Management\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Proper cleanup of resources\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Error handling for connection issues\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Graceful shutdown procedures\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"common-customization-points\",\n          isAtRootLevel: \"false\",\n          children: \"Common Customization Points\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Tool Handling\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Modify \", _jsx(_components.code, {\n                  children: \"process_query()\"\n                }), \" to handle specific tool types\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Add custom error handling for tool calls\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Implement tool-specific response formatting\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Response Processing\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Customize how tool results are formatted\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Add response filtering or transformation\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Implement custom logging\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"User Interface\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Add a GUI or web interface\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Implement rich console output\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Add command history or auto-completion\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"running-the-client\",\n          isAtRootLevel: \"false\",\n          children: \"Running the Client\"\n        }), _jsx(_components.p, {\n          children: \"To run your client with any MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"uv run client.py path/to/server.py \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# python server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"uv run client.py path/to/build/index.js \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# node server\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: \", _jsx(_components.code, {\n              children: \"python client.py .../quickstart-resources/weather-server-python/weather.py\"\n            })]\n          })\n        }), _jsx(_components.p, {\n          children: \"The client will:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Connect to the specified server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"List available tools\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Start an interactive chat session where you can:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Enter queries\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"See tool executions\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Get responses from Claude\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Here’s an example of what it should look like if connected to the weather server from the server quickstart:\"\n        }), _jsx(Frame, {\n          children: _jsx(ZoomImage, {\n            children: _jsx(\"img\", {\n              src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/client-claude-cli-python.png\"\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"how-it-works\",\n          isAtRootLevel: \"false\",\n          children: \"How It Works\"\n        }), _jsx(_components.p, {\n          children: \"When you submit a query:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The client gets the list of available tools from the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Your query is sent to Claude along with tool descriptions\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude decides which tools (if any) to use\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The client executes any requested tool calls through the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Results are sent back to Claude\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude provides a natural language response\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The response is displayed to you\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"best-practices\",\n          isAtRootLevel: \"false\",\n          children: \"Best practices\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Error Handling\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Always wrap tool calls in try-catch blocks\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Provide meaningful error messages\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Gracefully handle connection issues\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Resource Management\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Use \", _jsx(_components.code, {\n                  children: \"AsyncExitStack\"\n                }), \" for proper cleanup\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Close connections when done\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Handle server disconnections\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Security\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Store API keys securely in \", _jsx(_components.code, {\n                  children: \".env\"\n                })]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Validate server responses\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Be cautious with tool permissions\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"troubleshooting\",\n          isAtRootLevel: \"false\",\n          children: \"Troubleshooting\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-path-issues\",\n          isAtRootLevel: \"false\",\n          children: \"Server Path Issues\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Double-check the path to your server script is correct\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Use the absolute path if the relative path isn’t working\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"For Windows users, make sure to use forward slashes (/) or escaped backslashes (\\\\) in the path\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Verify the server file has the correct extension (.py for Python or .js for Node.js)\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Example of correct path usage:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Relative path\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"uv run client.py ./server/weather.py\"\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Absolute path\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"uv run client.py /Users/username/projects/mcp-server/weather.py\"\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Windows path (either format works)\"\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"uv run client.py C:/projects/mcp-server/weather.py\"\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"uv run client.py C:\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"projects\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"mcp-server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"weather.py\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"response-timing\",\n          isAtRootLevel: \"false\",\n          children: \"Response Timing\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The first response might take up to 30 seconds to return\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"This is normal and happens while:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"The server initializes\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Claude processes the query\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Tools are being executed\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Subsequent responses are typically faster\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Don’t interrupt the process during this initial waiting period\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"common-error-messages\",\n          isAtRootLevel: \"false\",\n          children: \"Common Error Messages\"\n        }), _jsx(_components.p, {\n          children: \"If you see:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"FileNotFoundError\"\n            }), \": Check your server path\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Connection refused\"\n            }), \": Ensure the server is running and the path is correct\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Tool execution failed\"\n            }), \": Verify the tool’s required environment variables are set\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Timeout error\"\n            }), \": Consider increasing the timeout in your client configuration\"]\n          }), \"\\n\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"Node\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/quickstart-resources/tree/main/mcp-client-typescript\",\n            children: \"You can find the complete code for this tutorial here.\"\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"system-requirements-2\",\n          isAtRootLevel: \"false\",\n          children: \"System Requirements\"\n        }), _jsx(_components.p, {\n          children: \"Before starting, ensure your system meets these requirements:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Mac or Windows computer\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Node.js 17 or higher installed\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Latest version of \", _jsx(_components.code, {\n              children: \"npm\"\n            }), \" installed\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Anthropic API key (Claude)\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-environment-2\",\n          isAtRootLevel: \"false\",\n          children: \"Setting Up Your Environment\"\n        }), _jsx(_components.p, {\n          children: \"First, let’s create and set up our project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create project directory\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" mcp-client-typescript\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" mcp-client-typescript\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize npm project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" init \", _jsx(_components.span, {\n                    className: \"token parameter variable\",\n                    children: \"-y\"\n                  })]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"install\"\n                  }), \" @anthropic-ai/sdk @modelcontextprotocol/sdk dotenv\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dev dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"npm\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"install\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token parameter variable\",\n                    children: \"-D\"\n                  }), \" @types/node typescript\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create source file\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"touch\"\n                  }), \" index.ts\"]\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create project directory\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"md mcp-client-typescript\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd mcp-client-typescript\"\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize npm project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"npm init \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"y\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dependencies\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"npm install @anthropic-ai/sdk @modelcontextprotocol/sdk dotenv\"\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Install dev dependencies\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"npm install \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"-\"\n                  }), \"D @types/node typescript\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create source file\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"new-item\"\n                  }), \" index\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"ts\"]\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"Update your \", _jsx(_components.code, {\n            children: \"package.json\"\n          }), \" to set \", _jsx(_components.code, {\n            children: \"type: \\\"module\\\"\"\n          }), \" and a build script:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"package.json\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-json\",\n            children: _jsxs(_components.code, {\n              className: \"language-json\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"type\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"module\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"scripts\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"build\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"tsc \u0026\u0026 chmod 755 build/index.js\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Create a \", _jsx(_components.code, {\n            children: \"tsconfig.json\"\n          }), \" in the root of your project:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"tsconfig.json\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-json\",\n            children: _jsxs(_components.code, {\n              className: \"language-json\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"compilerOptions\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"target\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ES2022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"module\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Node16\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"moduleResolution\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Node16\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"outDir\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"./build\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"rootDir\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"./\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"strict\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"esModuleInterop\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"skipLibCheck\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"forceConsistentCasingInFileNames\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"include\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"index.ts\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"exclude\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"node_modules\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-api-key-2\",\n          isAtRootLevel: \"false\",\n          children: \"Setting Up Your API Key\"\n        }), _jsxs(_components.p, {\n          children: [\"You’ll need an Anthropic API key from the \", _jsx(_components.a, {\n            href: \"https://console.anthropic.com/settings/keys\",\n            children: \"Anthropic Console\"\n          }), \".\"]\n        }), _jsxs(_components.p, {\n          children: [\"Create a \", _jsx(_components.code, {\n            children: \".env\"\n          }), \" file to store it:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"echo\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ANTHROPIC_API_KEY=\u003cyour key here\u003e\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \" .env\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Add \", _jsx(_components.code, {\n            children: \".env\"\n          }), \" to your \", _jsx(_components.code, {\n            children: \".gitignore\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"echo\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".env\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\u003e\"\n                }), \" .gitignore\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"Make sure you keep your \", _jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY\"\n            }), \" secure!\"]\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"creating-the-client-2\",\n          isAtRootLevel: \"false\",\n          children: \"Creating the Client\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"basic-client-structure-2\",\n          isAtRootLevel: \"false\",\n          children: \"Basic Client Structure\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s set up our imports and create the basic client class in \", _jsx(_components.code, {\n            children: \"index.ts\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" Anthropic \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@anthropic-ai/sdk\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@anthropic-ai/sdk/resources/messages/messages.mjs\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" Client \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@modelcontextprotocol/sdk/client/index.js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" StdioClientTransport \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@modelcontextprotocol/sdk/client/stdio.js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" readline \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"readline/promises\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"import\"\n                }), \" dotenv \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"from\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"dotenv\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotenv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"config\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"env\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ANTHROPIC_API_KEY is not set\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"MCPClient\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" anthropic\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" transport\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" StdioClientTransport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"|\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"null\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"constructor\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Anthropic\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      apiKey\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constant\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"mcp \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Client\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"mcp-client-cli\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" version\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"1.0.0\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// methods will go here\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-connection-management-2\",\n          isAtRootLevel: \"false\",\n          children: \"Server Connection Management\"\n        }), _jsx(_components.p, {\n          children: \"Next, we’ll implement the method to connect to an MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connectToServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"serverScriptPath\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" isJs \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" serverScriptPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"endsWith\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" isPy \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" serverScriptPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"endsWith\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".py\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"isJs \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u0026\u0026\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), \"isPy\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Error\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Server script must be a .js or .py file\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" command \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" isPy\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"platform \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"win32\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"python\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"python3\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"execPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"transport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"StdioClientTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      command\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      args\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"serverScriptPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connect\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"transport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" toolsResult \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listTools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" toolsResult\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        description\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"description\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        input_schema\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputSchema\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Connected to server with tools:\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" name \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"catch\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Failed to connect to MCP server: \\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" e\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"query-processing-logic-2\",\n          isAtRootLevel: \"false\",\n          children: \"Query Processing Logic\"\n        }), _jsx(_components.p, {\n          children: \"Now let’s add the core functionality for processing queries and handling tool calls:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"processQuery\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" messages\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      role\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"user\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"create\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    model\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"claude-3-5-sonnet-20241022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    max_tokens\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1000\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" finalText \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" toolResults \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"for\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" content \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"of\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"type \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"push\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"text\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"else\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"type \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"tool_use\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" toolName \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" toolArgs \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"input \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), \"x\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"unknown\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"|\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"undefined\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" result \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"callTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" toolName\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        arguments\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" toolArgs\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      toolResults\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"push\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"result\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"push\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsxs(_components.span, {\n                  className: \"token template-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"[Calling tool \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), \"toolName\", _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \" with args \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"${\"\n                    }), _jsx(_components.span, {\n                      className: \"token constant\",\n                      children: \"JSON\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \".\"\n                    }), _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"stringify\"\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"(\"\n                    }), \"toolArgs\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \")\"\n                    }), _jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"]\"\n                  }), _jsx(_components.span, {\n                    className: \"token template-punctuation string\",\n                    children: \"`\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"push\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        role\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"user\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" result\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"create\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        model\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"claude-3-5-sonnet-20241022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        max_tokens\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1000\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"push\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"type \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"text\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"text \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"join\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"interactive-chat-interface-2\",\n          isAtRootLevel: \"false\",\n          children: \"Interactive Chat Interface\"\n        }), _jsx(_components.p, {\n          children: \"Now we’ll add the chat loop and cleanup functionality:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"chatLoop\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" rl \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" readline\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"createInterface\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    input\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"stdin\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    output\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"stdout\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\nMCP Client Started!\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Type your queries or 'quit' to exit.\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"while\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" message \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" rl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"question\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\nQuery: \\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"message\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toLowerCase\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"===\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"quit\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"break\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"processQuery\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"message\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\\\\n\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"+\"\n                }), \" response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"finally\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    rl\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"close\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"cleanup\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"close\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"main-entry-point-2\",\n          isAtRootLevel: \"false\",\n          children: \"Main Entry Point\"\n        }), _jsx(_components.p, {\n          children: \"Finally, we’ll add the main execution logic:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-typescript\",\n            children: _jsxs(_components.code, {\n              className: \"language-typescript\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"async\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"function\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"argv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"length \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"3\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token builtin\",\n                  children: \"console\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"log\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Usage: node index.ts \u003cpath_to_server_script\u003e\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"const\"\n                }), \" mcpClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"MCPClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connectToServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"argv\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"2\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"chatLoop\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"finally\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"cleanup\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"exit\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"0\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"running-the-client-2\",\n          isAtRootLevel: \"false\",\n          children: \"Running the Client\"\n        }), _jsx(_components.p, {\n          children: \"To run your client with any MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Build TypeScript\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"npm\"\n                }), \" run build\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Run the client\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js path/to/server.py \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# python server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js path/to/build/index.js \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# node server\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: \", _jsx(_components.code, {\n              children: \"node build/index.js .../quickstart-resources/weather-server-typescript/build/index.js\"\n            })]\n          })\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"The client will:\"\n          })\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Connect to the specified server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"List available tools\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Start an interactive chat session where you can:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Enter queries\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"See tool executions\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Get responses from Claude\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"how-it-works-2\",\n          isAtRootLevel: \"false\",\n          children: \"How It Works\"\n        }), _jsx(_components.p, {\n          children: \"When you submit a query:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The client gets the list of available tools from the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Your query is sent to Claude along with tool descriptions\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude decides which tools (if any) to use\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The client executes any requested tool calls through the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Results are sent back to Claude\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude provides a natural language response\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The response is displayed to you\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"best-practices-2\",\n          isAtRootLevel: \"false\",\n          children: \"Best practices\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Error Handling\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Use TypeScript’s type system for better error detection\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Wrap tool calls in try-catch blocks\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Provide meaningful error messages\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Gracefully handle connection issues\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Security\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Store API keys securely in \", _jsx(_components.code, {\n                  children: \".env\"\n                })]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Validate server responses\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Be cautious with tool permissions\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"troubleshooting-2\",\n          isAtRootLevel: \"false\",\n          children: \"Troubleshooting\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-path-issues-2\",\n          isAtRootLevel: \"false\",\n          children: \"Server Path Issues\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Double-check the path to your server script is correct\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Use the absolute path if the relative path isn’t working\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"For Windows users, make sure to use forward slashes (/) or escaped backslashes (\\\\) in the path\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Verify the server file has the correct extension (.js for Node.js or .py for Python)\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Example of correct path usage:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Relative path\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js ./server/build/index.js\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Absolute path\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js /Users/username/projects/mcp-server/build/index.js\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Windows path (either format works)\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js C:/projects/mcp-server/build/index.js\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"node\"\n                }), \" build/index.js C:\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"projects\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"mcp-server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"build\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"index.js\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"response-timing-2\",\n          isAtRootLevel: \"false\",\n          children: \"Response Timing\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The first response might take up to 30 seconds to return\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"This is normal and happens while:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"The server initializes\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Claude processes the query\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Tools are being executed\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Subsequent responses are typically faster\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Don’t interrupt the process during this initial waiting period\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"common-error-messages-2\",\n          isAtRootLevel: \"false\",\n          children: \"Common Error Messages\"\n        }), _jsx(_components.p, {\n          children: \"If you see:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Error: Cannot find module\"\n            }), \": Check your build folder and ensure TypeScript compilation succeeded\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Connection refused\"\n            }), \": Ensure the server is running and the path is correct\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Tool execution failed\"\n            }), \": Verify the tool’s required environment variables are set\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY is not set\"\n            }), \": Check your .env file and environment variables\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"TypeError\"\n            }), \": Ensure you’re using the correct types for tool arguments\"]\n          }), \"\\n\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"Java\",\n        children: [_jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"This is a quickstart demo based on Spring AI MCP auto-configuration and boot starters.\\nTo learn how to create sync and async MCP Clients manually, consult the \", _jsx(_components.a, {\n              href: \"/sdk/java/mcp-client\",\n              children: \"Java SDK Client\"\n            }), \" documentation\"]\n          })\n        }), _jsxs(_components.p, {\n          children: [\"This example demonstrates how to build an interactive chatbot that combines Spring AI’s Model Context Protocol (MCP) with the \", _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search\",\n            children: \"Brave Search MCP Server\"\n          }), \". The application creates a conversational interface powered by Anthropic’s Claude AI model that can perform internet searches through Brave Search, enabling natural language interactions with real-time web data.\\n\", _jsx(_components.a, {\n            href: \"https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/web-search/brave-chatbot\",\n            children: \"You can find the complete code for this tutorial here.\"\n          })]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"system-requirements-3\",\n          isAtRootLevel: \"false\",\n          children: \"System Requirements\"\n        }), _jsx(_components.p, {\n          children: \"Before starting, ensure your system meets these requirements:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Java 17 or higher\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Maven 3.6+\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"npx package manager\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Anthropic API key (Claude)\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Brave Search API key\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-environment-3\",\n          isAtRootLevel: \"false\",\n          children: \"Setting Up Your Environment\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsxs(_components.p, {\n              children: [\"Install npx (Node Package eXecute):\\nFirst, make sure to install \", _jsx(_components.a, {\n                href: \"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm\",\n                children: \"npm\"\n              }), \"\\nand then run:\"]\n            }), \"\\n\", _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [_jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"npm\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"install\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token parameter variable\",\n                      children: \"-g\"\n                    }), \" npx\"]\n                  }), \"\\n\"]\n                })\n              })\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: \"Clone the repository:\"\n            }), \"\\n\", _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [_jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"git\"\n                    }), \" clone https://github.com/spring-projects/spring-ai-examples.git\"]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [_jsx(_components.span, {\n                      className: \"token builtin class-name\",\n                      children: \"cd\"\n                    }), \" model-context-protocol/brave-chatbot\"]\n                  }), \"\\n\"]\n                })\n              })\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: \"Set up your API keys:\"\n            }), \"\\n\", _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [_jsx(_components.span, {\n                      className: \"token builtin class-name\",\n                      children: \"export\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token assign-left variable\",\n                      children: \"ANTHROPIC_API_KEY\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"=\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"'your-anthropic-api-key-here'\"\n                    })]\n                  }), \"\\n\", _jsxs(_components.span, {\n                    className: \"\",\n                    children: [_jsx(_components.span, {\n                      className: \"token builtin class-name\",\n                      children: \"export\"\n                    }), \" \", _jsx(_components.span, {\n                      className: \"token assign-left variable\",\n                      children: \"BRAVE_API_KEY\"\n                    }), _jsx(_components.span, {\n                      className: \"token operator\",\n                      children: \"=\"\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"'your-brave-api-key-here'\"\n                    })]\n                  }), \"\\n\"]\n                })\n              })\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: \"Build the application:\"\n            }), \"\\n\", _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsxs(_components.span, {\n                    className: \"\",\n                    children: [\"./mvnw clean \", _jsx(_components.span, {\n                      className: \"token function\",\n                      children: \"install\"\n                    })]\n                  }), \"\\n\"]\n                })\n              })\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: \"Run the application using Maven:\"\n            }), \"\\n\", _jsx(CodeBlock, {\n              filename: \"\",\n              expandable: \"false\",\n              children: _jsx(_components.pre, {\n                className: \"language-bash\",\n                children: _jsxs(_components.code, {\n                  className: \"language-bash\",\n                  children: [_jsx(_components.span, {\n                    className: \"\",\n                    children: \"./mvnw spring-boot:run\"\n                  }), \"\\n\"]\n                })\n              })\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"Make sure you keep your \", _jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"BRAVE_API_KEY\"\n            }), \" keys secure!\"]\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"how-it-works-3\",\n          isAtRootLevel: \"false\",\n          children: \"How it Works\"\n        }), _jsx(_components.p, {\n          children: \"The application integrates Spring AI with the Brave Search MCP server through several components:\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"mcp-client-configuration\",\n          isAtRootLevel: \"false\",\n          children: \"MCP Client Configuration\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Required dependencies in pom.xml:\"\n          }), \"\\n\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-xml\",\n            children: _jsxs(_components.code, {\n              className: \"language-xml\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"org.springframework.ai\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"spring-ai-starter-mcp-client\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"org.springframework.ai\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"spring-ai-starter-model-anthropic\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.ol, {\n          start: \"2\",\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Application properties (application.yml):\"\n          }), \"\\n\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-yml\",\n            children: _jsxs(_components.code, {\n              className: \"language-yml\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"spring\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  ai\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"enabled\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean important\",\n                  children: \"true\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"name\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" brave\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"-\"\n                }), \"search\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"-\"\n                }), \"client\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"version\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" 1.0.0\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"type\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" SYNC\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"request-timeout\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" 20s\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        stdio\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"root-change-notification\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean important\",\n                  children: \"true\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"servers-configuration\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" classpath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \"/mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"-\"\n                }), \"servers\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"-\"\n                }), \"config.json\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        toolcallback\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"          \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"enabled\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token boolean important\",\n                  children: \"true\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token key atrule\",\n                  children: \"api-key\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"ANTHROPIC_API_KEY\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"This activates the \", _jsx(_components.code, {\n            children: \"spring-ai-starter-mcp-client\"\n          }), \" to create one or more \", _jsx(_components.code, {\n            children: \"McpClient\"\n          }), \"s based on the provided server configuration.\\nThe \", _jsx(_components.code, {\n            children: \"spring.ai.mcp.client.toolcallback.enabled=true\"\n          }), \" property enables the tool callback mechanism, that automatically registers all MCP tool as spring ai tools.\\nIt is disabled by default.\"]\n        }), _jsxs(_components.ol, {\n          start: \"3\",\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"MCP Server Configuration (\", _jsx(_components.code, {\n              children: \"mcp-servers-config.json\"\n            }), \"):\"]\n          }), \"\\n\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-json\",\n            children: _jsxs(_components.code, {\n              className: \"language-json\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"mcpServers\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"brave-search\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"command\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"npx\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"args\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"-y\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"@modelcontextprotocol/server-brave-search\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"env\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token property\",\n                  children: \"\\\"BRAVE_API_KEY\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\u003cPUT YOUR BRAVE API KEY\u003e\\\"\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"      \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"  \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"chat-implementation\",\n          isAtRootLevel: \"false\",\n          children: \"Chat Implementation\"\n        }), _jsx(_components.p, {\n          children: \"The chatbot is implemented using Spring AI’s ChatClient with MCP tool integration:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-java\",\n            children: _jsxs(_components.code, {\n              className: \"language-java\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" chatClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" chatClientBuilder\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"defaultSystem\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"You are useful assistant, expert in AI and Java.\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"defaultToolCallbacks\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"Object\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" mcpToolAdapter\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toolCallbacks\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"defaultAdvisors\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"MessageChatMemoryAdvisor\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: \"InMemoryChatMemory\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"Breaking change: From SpringAI 1.0.0-M8 onwards, use \", _jsx(_components.code, {\n              children: \".defaultToolCallbacks(...)\"\n            }), \" instead of \", _jsx(_components.code, {\n              children: \".defaultTool(...)\"\n            }), \" to register MCP tools.\"]\n          })\n        }), _jsx(_components.p, {\n          children: \"Key features:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Uses Claude AI model for natural language understanding\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Integrates Brave Search through MCP for real-time web search capabilities\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Maintains conversation memory using InMemoryChatMemory\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Runs as an interactive command-line application\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"build-and-run\",\n          isAtRootLevel: \"false\",\n          children: \"Build and run\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"./mvnw clean \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"install\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" ./target/ai-mcp-brave-chatbot-0.0.1-SNAPSHOT.jar\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"or\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: \"./mvnw spring-boot:run\"\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"The application will start an interactive chat session where you can ask questions. The chatbot will use Brave Search when it needs to find information from the internet to answer your queries.\"\n        }), _jsx(_components.p, {\n          children: \"The chatbot can:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Answer questions using its built-in knowledge\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Perform web searches when needed using Brave Search\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Remember context from previous messages in the conversation\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Combine information from multiple sources to provide comprehensive answers\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"advanced-configuration\",\n          isAtRootLevel: \"false\",\n          children: \"Advanced Configuration\"\n        }), _jsx(_components.p, {\n          children: \"The MCP client supports additional configuration options:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"Client customization through \", _jsx(_components.code, {\n              children: \"McpSyncClientCustomizer\"\n            }), \" or \", _jsx(_components.code, {\n              children: \"McpAsyncClientCustomizer\"\n            })]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Multiple clients with multiple transport types: \", _jsx(_components.code, {\n              children: \"STDIO\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"SSE\"\n            }), \" (Server-Sent Events)\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Integration with Spring AI’s tool execution framework\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Automatic client initialization and lifecycle management\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"For WebFlux-based applications, you can use the WebFlux starter instead:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-xml\",\n            children: _jsxs(_components.code, {\n              className: \"language-xml\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"org.springframework.ai\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"groupId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                }), \"spring-ai-mcp-client-webflux-spring-boot-starter\", _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"artifactId\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsxs(_components.span, {\n                  className: \"token tag\",\n                  children: [_jsxs(_components.span, {\n                    className: \"token tag\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c/\"\n                    }), \"dependency\"]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"\u003e\"\n                  })]\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"This provides similar functionality but uses a WebFlux-based SSE transport implementation, recommended for production deployments.\"\n        })]\n      }), _jsxs(Tab, {\n        title: \"Kotlin\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/kotlin-sdk/tree/main/samples/kotlin-mcp-client\",\n            children: \"You can find the complete code for this tutorial here.\"\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"system-requirements-4\",\n          isAtRootLevel: \"false\",\n          children: \"System Requirements\"\n        }), _jsx(_components.p, {\n          children: \"Before starting, ensure your system meets these requirements:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Java 17 or higher\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Anthropic API key (Claude)\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-environment-4\",\n          isAtRootLevel: \"false\",\n          children: \"Setting up your environment\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s install \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" and \", _jsx(_components.code, {\n            children: \"gradle\"\n          }), \" if you haven’t already.\\nYou can download \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" from \", _jsx(_components.a, {\n            href: \"https://www.oracle.com/java/technologies/downloads/\",\n            children: \"official Oracle JDK website\"\n          }), \".\\nVerify your \", _jsx(_components.code, {\n            children: \"java\"\n          }), \" installation:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--version\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Now, let’s create and set up your project:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"MacOS/Linux\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-bash\",\n              children: _jsxs(_components.code, {\n                className: \"language-bash\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"mkdir\"\n                  }), \" kotlin-mcp-client\"]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token builtin class-name\",\n                    children: \"cd\"\n                  }), \" kotlin-mcp-client\"]\n                }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new kotlin project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"gradle init\"\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"Windows\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-powershell\",\n              children: _jsxs(_components.code, {\n                className: \"language-powershell\",\n                children: [_jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Create a new directory for our project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"md kotlin-mcp-client\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"cd kotlin-mcp-client\"\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token comment\",\n                    children: \"# Initialize a new kotlin project\"\n                  })\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: \"gradle init\"\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsxs(_components.p, {\n          children: [\"After running \", _jsx(_components.code, {\n            children: \"gradle init\"\n          }), \", you will be presented with options for creating your project.\\nSelect \", _jsx(_components.strong, {\n            children: \"Application\"\n          }), \" as the project type, \", _jsx(_components.strong, {\n            children: \"Kotlin\"\n          }), \" as the programming language, and \", _jsx(_components.strong, {\n            children: \"Java 17\"\n          }), \" as the Java version.\"]\n        }), _jsxs(_components.p, {\n          children: [\"Alternatively, you can create a Kotlin application using the \", _jsx(_components.a, {\n            href: \"https://kotlinlang.org/docs/jvm-get-started.html\",\n            children: \"IntelliJ IDEA project wizard\"\n          }), \".\"]\n        }), _jsx(_components.p, {\n          children: \"After creating the project, add the following dependencies:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"build.gradle.kts\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-kotlin\",\n              children: _jsxs(_components.code, {\n                className: \"language-kotlin\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" mcpVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"0.4.0\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" slf4jVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"2.0.9\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"val\"\n                  }), \" anthropicVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"0.8.0\\\"\"\n                    })\n                  })]\n                }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"dependencies \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.modelcontextprotocol:kotlin-sdk:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"mcpVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"org.slf4j:slf4j-nop:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"slf4jVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"implementation\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsxs(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"com.anthropic:anthropic-java:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"anthropicVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"build.gradle\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-groovy\",\n              children: _jsxs(_components.code, {\n                className: \"language-groovy\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" mcpVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'0.3.0'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" slf4jVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'2.0.9'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"def\"\n                  }), \" anthropicVersion \", _jsx(_components.span, {\n                    className: \"token operator\",\n                    children: \"=\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'0.8.0'\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"dependencies \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"io.modelcontextprotocol:kotlin-sdk:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"mcpVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"org.slf4j:slf4j-nop:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"slf4jVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    implementation \", _jsxs(_components.span, {\n                    className: \"token interpolation-string\",\n                    children: [_jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"com.anthropic:anthropic-java:\"\n                    }), _jsxs(_components.span, {\n                      className: \"token interpolation\",\n                      children: [_jsx(_components.span, {\n                        className: \"token interpolation-punctuation punctuation\",\n                        children: \"$\"\n                      }), _jsx(_components.span, {\n                        className: \"token expression\",\n                        children: \"anthropicVersion\"\n                      })]\n                    }), _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"\"\n                    })]\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(_components.p, {\n          children: \"Also, add the following plugins to your build script:\"\n        }), _jsxs(CodeGroup, {\n          children: [_jsx(CodeBlock, {\n            filename: \"build.gradle.kts\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-kotlin\",\n              children: _jsxs(_components.code, {\n                className: \"language-kotlin\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"plugins \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    \", _jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"id\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"com.github.johnrengelman.shadow\\\"\"\n                    })\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string-literal singleline\",\n                    children: _jsx(_components.span, {\n                      className: \"token string\",\n                      children: \"\\\"8.1.1\\\"\"\n                    })\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          }), _jsx(CodeBlock, {\n            filename: \"build.gradle\",\n            expandable: \"false\",\n            children: _jsx(_components.pre, {\n              className: \"language-groovy\",\n              children: _jsxs(_components.code, {\n                className: \"language-groovy\",\n                children: [_jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"plugins \", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"{\"\n                  })]\n                }), \"\\n\", _jsxs(_components.span, {\n                  className: \"\",\n                  children: [\"    id \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'com.github.johnrengelman.shadow'\"\n                  }), \" version \", _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"'8.1.1'\"\n                  })]\n                }), \"\\n\", _jsx(_components.span, {\n                  className: \"\",\n                  children: _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"}\"\n                  })\n                }), \"\\n\"]\n              })\n            })\n          })]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-api-key-3\",\n          isAtRootLevel: \"false\",\n          children: \"Setting up your API key\"\n        }), _jsxs(_components.p, {\n          children: [\"You’ll need an Anthropic API key from the \", _jsx(_components.a, {\n            href: \"https://console.anthropic.com/settings/keys\",\n            children: \"Anthropic Console\"\n          }), \".\"]\n        }), _jsx(_components.p, {\n          children: \"Set up your API key:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"export\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token assign-left variable\",\n                  children: \"ANTHROPIC_API_KEY\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"'your-anthropic-api-key-here'\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Warning, {\n          children: _jsxs(_components.p, {\n            children: [\"Make sure your keep your \", _jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY\"\n            }), \" secure!\"]\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"creating-the-client-3\",\n          isAtRootLevel: \"false\",\n          children: \"Creating the Client\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"basic-client-structure-3\",\n          isAtRootLevel: \"false\",\n          children: \"Basic Client Structure\"\n        }), _jsx(_components.p, {\n          children: \"First, let’s create the basic client class:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"class\"\n                }), \" MCPClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" AutoCloseable \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" anthropic \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" AnthropicOkHttpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"fromEnv\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Client \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Client\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"clientInfo \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Implementation\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"mcp-client-cli\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" version \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"1.0.0\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"lateinit\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" List\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"ToolUnion\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"// methods will go here\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"override\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"close\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        runBlocking \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"close\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"close\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-connection-management-3\",\n          isAtRootLevel: \"false\",\n          children: \"Server connection management\"\n        }), _jsx(_components.p, {\n          children: \"Next, we’ll implement the method to connect to an MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"suspend\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connectToServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"serverScriptPath\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"try\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" command \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" buildList \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"when\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"serverScriptPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"substringAfterLast\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\".\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"js\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"node\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"py\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"System\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"os.name\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"lowercase\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"contains\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"win\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"python\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"else\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"python3\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"jar\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"addAll\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"java\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"-jar\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"else\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"IllegalArgumentException\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Server script must be a .js, .py or .jar file\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"serverScriptPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" process \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ProcessBuilder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"command\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"start\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" transport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"StdioClientTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            input \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputStream\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"asSource\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"buffered\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            output \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" process\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"outputStream\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"asSink\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"buffered\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connect\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"transport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" toolsResult \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"listTools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" toolsResult\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"map\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" tool \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            ToolUnion\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ofTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"name\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"name\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"description\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"description \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"inputSchema\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        Tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"InputSchema\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"type\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"JsonValue\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"from\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputSchema\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"type\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"properties\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputSchema\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"properties\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toJsonValue\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"putAdditionalProperty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"required\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" JsonValue\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"from\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tool\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"inputSchema\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"required\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"emptyList\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"println\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"\\\"Connected \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"to\"\n                }), \" server with tools\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"joinToString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\", \\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" it\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"tool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"name\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"catch\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"e\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Exception\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"println\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Failed to connect to MCP server: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"e\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" e\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Also create a helper function to convert from \", _jsx(_components.code, {\n            children: \"JsonObject\"\n          }), \" to \", _jsx(_components.code, {\n            children: \"JsonValue\"\n          }), \" for Anthropic:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" JsonObject\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toJsonValue\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" JsonValue \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" mapper \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ObjectMapper\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" node \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mapper\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"readTree\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"this\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" JsonValue\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"fromJsonNode\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"node\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"query-processing-logic-3\",\n          isAtRootLevel: \"false\",\n          children: \"Query processing logic\"\n        }), _jsx(_components.p, {\n          children: \"Now let’s add the core functionality for processing queries and handling tool calls:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"private\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" messageParamsBuilder\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" MessageCreateParams\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Builder \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" MessageCreateParams\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"model\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"Model\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"CLAUDE_3_5_SONNET_20241022\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"maxTokens\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1024\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"suspend\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"processQuery\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" String \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" messages \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"mutableListOf\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"role\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Role\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"USER\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"content\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"messages\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"create\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"        messageParamsBuilder\"\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"messages\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"tools\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" finalText \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mutableListOf\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"String\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    response\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"content\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"forEach\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" content \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"when\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"isText\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"text\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getOrNull\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"text\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"isToolUse\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"-\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" toolName \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toolUse\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"name\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" toolArgs \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    content\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"toolUse\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"get\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"_input\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"convert\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"object\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" TypeReference\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"Map\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"String\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" JsonValue\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" result \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" mcp\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"callTool\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" toolName\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    arguments \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" toolArgs \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"emptyMap\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"[Calling tool \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"toolName\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \" with args \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"toolArgs\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"]\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                    MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"builder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"role\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"MessageParam\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Role\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"USER\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"content\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"type\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"tool_result\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"tool_name\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $toolName\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                                \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"result\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" $\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \"result\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"content\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"joinToString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\\n\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"it \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"as\"\n                }), \" TextContent\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"text \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                            \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), \"\\\"\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"trimIndent\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" aiResponse \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" anthropic\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"messages\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"create\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: \"                    messageParamsBuilder\"\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"messages\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"messages\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"                finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"aiResponse\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"content\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"first\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"text\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"getOrNull\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"text\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"            \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" finalText\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"joinToString\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\\n\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" prefix \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" postfix \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"interactive-chat\",\n          isAtRootLevel: \"false\",\n          children: \"Interactive chat\"\n        }), _jsx(_components.p, {\n          children: \"We’ll add the chat loop:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"suspend\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"chatLoop\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"println\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\\nMCP Client Started!\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"println\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Type your queries or 'quit' to exit.\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"while\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token boolean\",\n                  children: \"true\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"print\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\\nQuery: \\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" message \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"readLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"?:\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"break\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"message\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"lowercase\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"==\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"quit\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"break\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" response \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"processQuery\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"message\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"println\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\\\\n\"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token interpolation-punctuation punctuation\",\n                      children: \"$\"\n                    }), _jsx(_components.span, {\n                      className: \"token expression\",\n                      children: \"response\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"main-entry-point-3\",\n          isAtRootLevel: \"false\",\n          children: \"Main entry point\"\n        }), _jsx(_components.p, {\n          children: \"Finally, we’ll add the main execution function:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-kotlin\",\n            children: _jsxs(_components.code, {\n              className: \"language-kotlin\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"fun\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"main\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"args\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \":\"\n                }), \" Array\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"String\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" runBlocking \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"isEmpty\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"IllegalArgumentException\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string-literal singleline\",\n                  children: _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"Usage: java -jar \u003cyour_path\u003e/build/libs/kotlin-mcp-client-0.1.0-all.jar \u003cpath_to_server_script\u003e\\\"\"\n                  })\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" serverPath \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"first\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"val\"\n                }), \" client \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"MCPClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"use\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"connectToServer\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"serverPath\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        client\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"chatLoop\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"running-the-client-3\",\n          isAtRootLevel: \"false\",\n          children: \"Running the client\"\n        }), _jsx(_components.p, {\n          children: \"To run your client with any MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: \"./gradlew build\"\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Run the client\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"your-jar-name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \".jar path/to/server.jar \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# jvm server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"your-jar-name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \".jar path/to/server.py \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# python server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003c\"\n                }), \"your-jar-name\", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u003e\"\n                }), \".jar path/to/build/index.js \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# node server\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: \", _jsx(_components.code, {\n              children: \"java -jar build/libs/kotlin-mcp-client-0.1.0-all.jar .../samples/weather-stdio-server/build/libs/weather-stdio-server-0.1.0-all.jar\"\n            })]\n          })\n        }), _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"The client will:\"\n          })\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Connect to the specified server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"List available tools\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Start an interactive chat session where you can:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Enter queries\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"See tool executions\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Get responses from Claude\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"how-it-works-4\",\n          isAtRootLevel: \"false\",\n          children: \"How it works\"\n        }), _jsx(_components.p, {\n          children: \"Here’s a high-level workflow schema:\"\n        }), _jsx(Mermaid, {\n          chart: `---\nconfig:\n    theme: neutral\n---\nsequenceDiagram\n    actor User\n    participant Client\n    participant Claude\n    participant MCP_Server as MCP Server\n    participant Tools\n\n    User-\u003e\u003eClient: Send query\n    Client\u003c\u003c-\u003e\u003eMCP_Server: Get available tools\n    Client-\u003e\u003eClaude: Send query with tool descriptions\n    Claude--\u003e\u003eClient: Decide tool execution\n    Client-\u003e\u003eMCP_Server: Request tool execution\n    MCP_Server-\u003e\u003eTools: Execute chosen tools\n    Tools--\u003e\u003eMCP_Server: Return results\n    MCP_Server--\u003e\u003eClient: Send results\n    Client-\u003e\u003eClaude: Send tool results\n    Claude--\u003e\u003eClient: Provide final response\n    Client--\u003e\u003eUser: Display response`\n        }), _jsx(_components.p, {\n          children: \"When you submit a query:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The client gets the list of available tools from the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Your query is sent to Claude along with tool descriptions\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude decides which tools (if any) to use\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The client executes any requested tool calls through the server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Results are sent back to Claude\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Claude provides a natural language response\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The response is displayed to you\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"best-practices-3\",\n          isAtRootLevel: \"false\",\n          children: \"Best practices\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Error Handling\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Leverage Kotlin’s type system to model errors explicitly\"\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"Wrap external tool and API calls in \", _jsx(_components.code, {\n                  children: \"try-catch\"\n                }), \" blocks when exceptions are possible\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Provide clear and meaningful error messages\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Handle network timeouts and connection issues gracefully\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"\\n\", _jsx(_components.p, {\n              children: _jsx(_components.strong, {\n                children: \"Security\"\n              })\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"Store API keys and secrets securely in \", _jsx(_components.code, {\n                  children: \"local.properties\"\n                }), \", environment variables, or secret managers\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Validate all external responses to avoid unexpected or unsafe data usage\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Be cautious with permissions and trust boundaries when using tools\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"troubleshooting-3\",\n          isAtRootLevel: \"false\",\n          children: \"Troubleshooting\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"server-path-issues-3\",\n          isAtRootLevel: \"false\",\n          children: \"Server Path Issues\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Double-check the path to your server script is correct\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Use the absolute path if the relative path isn’t working\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"For Windows users, make sure to use forward slashes (/) or escaped backslashes (\\\\) in the path\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Make sure that the required runtime is installed (java for Java, npm for Node.js, or uv for Python)\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Verify the server file has the correct extension (.jar for Java, .js for Node.js or .py for Python)\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Example of correct path usage:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Relative path\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/client.jar ./server/build/libs/server.jar\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Absolute path\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/client.jar /Users/username/projects/mcp-server/build/libs/server.jar\"]\n              }), \"\\n\", \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# Windows path (either format works)\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/client.jar C:/projects/mcp-server/build/libs/server.jar\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"java\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-jar\"\n                }), \" build/libs/client.jar C:\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"projects\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"mcp-server\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"build\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"libs\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"\\\\\"\n                }), \"server.jar\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"response-timing-3\",\n          isAtRootLevel: \"false\",\n          children: \"Response Timing\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"The first response might take up to 30 seconds to return\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"This is normal and happens while:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"The server initializes\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Claude processes the query\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Tools are being executed\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Subsequent responses are typically faster\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Don’t interrupt the process during this initial waiting period\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"common-error-messages-3\",\n          isAtRootLevel: \"false\",\n          children: \"Common Error Messages\"\n        }), _jsx(_components.p, {\n          children: \"If you see:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Connection refused\"\n            }), \": Ensure the server is running and the path is correct\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"Tool execution failed\"\n            }), \": Verify the tool’s required environment variables are set\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"ANTHROPIC_API_KEY is not set\"\n            }), \": Check your environment variables\"]\n          }), \"\\n\"]\n        })]\n      }), _jsxs(Tab, {\n        title: \"C#\",\n        children: [_jsx(_components.p, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/modelcontextprotocol/csharp-sdk/tree/main/samples/QuickstartClient\",\n            children: \"You can find the complete code for this tutorial here.\"\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"system-requirements-5\",\n          isAtRootLevel: \"false\",\n          children: \"System Requirements\"\n        }), _jsx(_components.p, {\n          children: \"Before starting, ensure your system meets these requirements:\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \".NET 8.0 or higher\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Anthropic API key (Claude)\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Windows, Linux, or MacOS\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-environment-5\",\n          isAtRootLevel: \"false\",\n          children: \"Setting up your environment\"\n        }), _jsx(_components.p, {\n          children: \"First, create a new .NET project:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet new console \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"-n\"\n                }), \" QuickstartClient\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"cd\"\n                }), \" QuickstartClient\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"Then, add the required dependencies to your project:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" package ModelContextProtocol \", _jsx(_components.span, {\n                  className: \"token parameter variable\",\n                  children: \"--prerelease\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" package Anthropic.SDK\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"add\"\n                }), \" package Microsoft.Extensions.Hosting\"]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"setting-up-your-api-key-4\",\n          isAtRootLevel: \"false\",\n          children: \"Setting up your API key\"\n        }), _jsxs(_components.p, {\n          children: [\"You’ll need an Anthropic API key from the \", _jsx(_components.a, {\n            href: \"https://console.anthropic.com/settings/keys\",\n            children: \"Anthropic Console\"\n          }), \".\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsx(_components.span, {\n                className: \"\",\n                children: \"dotnet user-secrets init\"\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet user-secrets \", _jsx(_components.span, {\n                  className: \"token builtin class-name\",\n                  children: \"set\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ANTHROPIC_API_KEY\\\"\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\u003cyour key here\u003e\\\"\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"creating-the-client-4\",\n          isAtRootLevel: \"false\",\n          children: \"Creating the Client\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"basic-client-structure-4\",\n          isAtRootLevel: \"false\",\n          children: \"Basic Client Structure\"\n        }), _jsxs(_components.p, {\n          children: [\"First, let’s setup the basic client class in the file \", _jsx(_components.code, {\n            children: \"Program.cs\"\n          }), \":\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Anthropic\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"SDK\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Microsoft\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Extensions\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"AI\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Microsoft\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Extensions\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Configuration\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"Microsoft\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Extensions\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Hosting\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"ModelContextProtocol\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Client\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token namespace\",\n                  children: [\"ModelContextProtocol\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Protocol\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \".\"\n                  }), \"Transport\"]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" builder \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" Host\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CreateApplicationBuilder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"builder\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Configuration\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"AddEnvironmentVariables\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsxs(_components.span, {\n                  className: \"token generic-method\",\n                  children: [_jsx(_components.span, {\n                    className: \"token function\",\n                    children: \"AddUserSecrets\"\n                  }), _jsxs(_components.span, {\n                    className: \"token generic class-name\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003c\"\n                    }), \"Program\", _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"\u003e\"\n                    })]\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"This creates the beginnings of a .NET console application that can read the API key from user secrets.\"\n        }), _jsx(_components.p, {\n          children: \"Next, we’ll setup the MCP Client:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"var\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"command\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" arguments\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetCommandAndArguments\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" clientTransport \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"StdioClientTransport\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Name \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Demo Server\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Command \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" command\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Arguments \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" arguments\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" mcpClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" McpClientFactory\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"CreateAsync\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"clientTransport\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" mcpClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ListToolsAsync\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"foreach\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" tool \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WriteLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token interpolation-string\",\n                  children: [_jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"$\\\"Connected to server with tools: \"\n                  }), _jsxs(_components.span, {\n                    className: \"token interpolation\",\n                    children: [_jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"{\"\n                    }), _jsxs(_components.span, {\n                      className: \"token expression language-csharp\",\n                      children: [\"tool\", _jsx(_components.span, {\n                        className: \"token punctuation\",\n                        children: \".\"\n                      }), \"Name\"]\n                    }), _jsx(_components.span, {\n                      className: \"token punctuation\",\n                      children: \"}\"\n                    })]\n                  }), _jsx(_components.span, {\n                    className: \"token string\",\n                    children: \"\\\"\"\n                  })]\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsxs(_components.p, {\n          children: [\"Add this function at the end of the \", _jsx(_components.code, {\n            children: \"Program.cs\"\n          }), \" file:\"]\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsxs(_components.span, {\n                  className: \"token return-type class-name\",\n                  children: [_jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"(\"\n                  }), _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  }), \" command\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \",\"\n                  }), \" \", _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"[\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"]\"\n                  }), \" arguments\", _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \")\"\n                  })]\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetCommandAndArguments\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsxs(_components.span, {\n                  className: \"token class-name\",\n                  children: [_jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"[\"\n                  }), _jsx(_components.span, {\n                    className: \"token punctuation\",\n                    children: \"]\"\n                  })]\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"return\"\n                }), \" args \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"switch\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"when\"\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"EndsWith\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".py\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"python\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"when\"\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"EndsWith\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".js\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"node\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" args\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"when\"\n                }), \" Directory\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Exists\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"||\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"File\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Exists\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u0026\u0026\"\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"EndsWith\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\".csproj\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"dotnet\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"run\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"--project\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" script\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"--no-build\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        _ \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\u003e\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"throw\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"NotSupportedException\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"An unsupported server script was provided. Supported scripts are .py, .js, or .csproj\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(_components.p, {\n          children: \"This creates a MCP client that will connect to a server that is provided as a command line argument. It then lists the available tools from the connected server.\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"query-processing-logic-4\",\n          isAtRootLevel: \"false\",\n          children: \"Query processing logic\"\n        }), _jsx(_components.p, {\n          children: \"Now let’s add the core functionality for processing queries and handling tool calls:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-csharp\",\n            children: _jsxs(_components.code, {\n              className: \"language-csharp\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"using\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" anthropicClient \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"AnthropicClient\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token constructor-invocation class-name\",\n                  children: \"APIAuthentication\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"builder\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Configuration\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"ANTHROPIC_API_KEY\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Messages\"]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"AsBuilder\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"UseFunctionInvocation\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Build\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" options \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"new\"\n                }), \" ChatOptions\"]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    MaxOutputTokens \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token number\",\n                  children: \"1000\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    ModelId \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"claude-3-5-sonnet-20241022\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Tools \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"[\"\n                }), _jsx(_components.span, {\n                  className: \"token range operator\",\n                  children: \"..\"\n                }), \" tools\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"]\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"ForegroundColor \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" ConsoleColor\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Green\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WriteLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"MCP Client Started!\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ResetColor\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"PromptForInput\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"while\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ReadLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"is\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"string\"\n                  })\n                }), \" query \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"\u0026\u0026\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"!\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"exit\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Equals\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" StringComparison\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"OrdinalIgnoreCase\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"if\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"string\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"IsNullOrWhiteSpace\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"PromptForInput\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"continue\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"await\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"foreach\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"var\"\n                  })\n                }), \" message \", _jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"in\"\n                }), \" anthropicClient\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"GetStreamingResponseAsync\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"query\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \",\"\n                }), \" options\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"        Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Write\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), \"message\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WriteLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"PromptForInput\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\", \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [_jsx(_components.span, {\n                  className: \"token keyword\",\n                  children: \"static\"\n                }), \" \", _jsx(_components.span, {\n                  className: \"token return-type class-name\",\n                  children: _jsx(_components.span, {\n                    className: \"token keyword\",\n                    children: \"void\"\n                  })\n                }), \" \", _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"PromptForInput\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"{\"\n                })\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"WriteLine\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"Enter a command (or 'exit' to quit):\\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"ForegroundColor \", _jsx(_components.span, {\n                  className: \"token operator\",\n                  children: \"=\"\n                }), \" ConsoleColor\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), \"Cyan\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"Write\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token string\",\n                  children: \"\\\"\u003e \\\"\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"    Console\", _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \".\"\n                }), _jsx(_components.span, {\n                  className: \"token function\",\n                  children: \"ResetColor\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"(\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \")\"\n                }), _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \";\"\n                })]\n              }), \"\\n\", _jsx(_components.span, {\n                className: \"\",\n                children: _jsx(_components.span, {\n                  className: \"token punctuation\",\n                  children: \"}\"\n                })\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"key-components-explained-2\",\n          isAtRootLevel: \"false\",\n          children: \"Key Components Explained\"\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"1-client-initialization-2\",\n          isAtRootLevel: \"false\",\n          children: \"1. Client Initialization\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"The client is initialized using \", _jsx(_components.code, {\n              children: \"McpClientFactory.CreateAsync()\"\n            }), \", which sets up the transport type and command to run the server.\"]\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"2-server-connection-2\",\n          isAtRootLevel: \"false\",\n          children: \"2. Server Connection\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Supports Python, Node.js, and .NET servers.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The server is started using the command specified in the arguments.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Configures to use stdio for communication with the server.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Initializes the session and available tools.\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"3\",\n          id: \"3-query-processing-2\",\n          isAtRootLevel: \"false\",\n          children: \"3. Query Processing\"\n        }), _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"Leverages \", _jsx(_components.a, {\n              href: \"https://learn.microsoft.com/dotnet/ai/ai-extensions\",\n              children: \"Microsoft.Extensions.AI\"\n            }), \" for the chat client.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Configures the \", _jsx(_components.code, {\n              children: \"IChatClient\"\n            }), \" to use automatic tool (function) invocation.\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The client reads user input and sends it to the server.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The server processes the query and returns a response.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"The response is displayed to the user.\"\n          }), \"\\n\"]\n        }), _jsx(Heading, {\n          level: \"2\",\n          id: \"running-the-client-4\",\n          isAtRootLevel: \"false\",\n          children: \"Running the Client\"\n        }), _jsx(_components.p, {\n          children: \"To run your client with any MCP server:\"\n        }), _jsx(CodeBlock, {\n          filename: \"\",\n          expandable: \"false\",\n          children: _jsx(_components.pre, {\n            className: \"language-bash\",\n            children: _jsxs(_components.code, {\n              className: \"language-bash\",\n              children: [_jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet run -- path/to/server.csproj \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# dotnet server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet run -- path/to/server.py \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# python server\"\n                })]\n              }), \"\\n\", _jsxs(_components.span, {\n                className: \"\",\n                children: [\"dotnet run -- path/to/server.js \", _jsx(_components.span, {\n                  className: \"token comment\",\n                  children: \"# node server\"\n                })]\n              }), \"\\n\"]\n            })\n          })\n        }), _jsx(Note, {\n          children: _jsxs(_components.p, {\n            children: [\"If you’re continuing the weather tutorial from the server quickstart, your command might look something like this: \", _jsx(_components.code, {\n              children: \"dotnet run -- path/to/QuickstartWeatherServer\"\n            }), \".\"]\n          })\n        }), _jsx(_components.p, {\n          children: \"The client will:\"\n        }), _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Connect to the specified server\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"List available tools\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Start an interactive chat session where you can:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Enter queries\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"See tool executions\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Get responses from Claude\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Exit the session when done\"\n          }), \"\\n\"]\n        }), _jsx(_components.p, {\n          children: \"Here’s an example of what it should look like it connected to a weather server quickstart:\"\n        }), _jsx(Frame, {\n          children: _jsx(ZoomImage, {\n            children: _jsx(\"img\", {\n              src: \"https://mintlify.s3.us-west-1.amazonaws.com/mcp/images/quickstart-dotnet-client.png\"\n            })\n          })\n        })]\n      })]\n    }), \"\\n\", _jsx(Heading, {\n      level: \"2\",\n      id: \"next-steps\",\n      isAtRootLevel: \"true\",\n      children: \"Next steps\"\n    }), \"\\n\", _jsxs(CardGroup, {\n      cols: 2,\n      children: [_jsx(Card, {\n        title: \"Example servers\",\n        icon: \"grid\",\n        href: \"/examples\",\n        children: _jsx(_components.p, {\n          children: \"Check out our gallery of official MCP servers and implementations\"\n        })\n      }), _jsx(Card, {\n        title: \"Clients\",\n        icon: \"cubes\",\n        href: \"/clients\",\n        children: _jsx(_components.p, {\n          children: \"View the list of clients that support MCP integrations\"\n        })\n      }), _jsx(Card, {\n        title: \"Building MCP with LLMs\",\n        icon: \"comments\",\n        href: \"/tutorials/building-mcp-with-llms\",\n        children: _jsx(_components.p, {\n          children: \"Learn how to use LLMs like Claude to speed up your MCP development\"\n        })\n      }), _jsx(Card, {\n        title: \"Core architecture\",\n        icon: \"sitemap\",\n        href: \"/docs/concepts/architecture\",\n        children: _jsx(_components.p, {\n          children: \"Understand how MCP connects clients, servers, and LLMs\"\n        })\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"config":{"theme":"willow","$schema":"https://mintlify.com/docs.json","name":"Model Context Protocol","colors":{"primary":"#09090b","light":"#FAFAFA","dark":"#09090b"},"logo":{"light":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg","dark":"https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg"},"favicon":"/favicon.svg","navbar":{"links":[],"primary":{"type":"button","label":"GitHub","href":"https://github.com/modelcontextprotocol"}},"navigation":{"global":{"anchors":[{"anchor":"Python SDK","icon":"python","href":"https://github.com/modelcontextprotocol/python-sdk"},{"anchor":"TypeScript SDK","icon":"square-js","href":"https://github.com/modelcontextprotocol/typescript-sdk"},{"anchor":"Java SDK","icon":"java","href":"https://github.com/modelcontextprotocol/java-sdk"},{"anchor":"Kotlin SDK","icon":"square-k","href":"https://github.com/modelcontextprotocol/kotlin-sdk"},{"anchor":"C# SDK","icon":"square-c","href":"https://github.com/modelcontextprotocol/csharp-sdk"},{"anchor":"Swift SDK","icon":"swift","href":"https://github.com/modelcontextprotocol/swift-sdk"}]},"tabs":[{"tab":"User Guide","groups":[{"group":"Get Started","pages":["introduction",{"group":"Quickstart","pages":["quickstart/server","quickstart/client","quickstart/user"]},"examples","clients","faqs"]},{"group":"Tutorials","pages":["tutorials/building-mcp-with-llms","docs/tools/debugging","docs/tools/inspector"]},{"group":"Concepts","pages":["docs/concepts/architecture","docs/concepts/resources","docs/concepts/prompts","docs/concepts/tools","docs/concepts/sampling","docs/concepts/roots","docs/concepts/transports"]},{"group":"Development","pages":["development/updates","development/roadmap","development/contributing"]}]},{"tab":"SDKs","icon":"book-open","groups":[{"group":"Java","pages":["sdk/java/mcp-overview","sdk/java/mcp-client","sdk/java/mcp-server"]}]},{"tab":"Specification","icon":"book","groups":[{"group":"2025-03-26 (Latest)","pages":["specification/2025-03-26/index","specification/2025-03-26/changelog","specification/2025-03-26/architecture/index",{"group":"Base Protocol","pages":["specification/2025-03-26/basic/index","specification/2025-03-26/basic/lifecycle","specification/2025-03-26/basic/transports","specification/2025-03-26/basic/authorization",{"group":"Utilities","pages":["specification/2025-03-26/basic/utilities/cancellation","specification/2025-03-26/basic/utilities/ping","specification/2025-03-26/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2025-03-26/client/roots","specification/2025-03-26/client/sampling"]},{"group":"Server Features","pages":["specification/2025-03-26/server/index","specification/2025-03-26/server/prompts","specification/2025-03-26/server/resources","specification/2025-03-26/server/tools",{"group":"Utilities","pages":["specification/2025-03-26/server/utilities/completion","specification/2025-03-26/server/utilities/logging","specification/2025-03-26/server/utilities/pagination"]}]}]},{"group":"2024-11-05","pages":["specification/2024-11-05/index","specification/2024-11-05/architecture/index",{"group":"Base Protocol","pages":["specification/2024-11-05/basic/index","specification/2024-11-05/basic/lifecycle","specification/2024-11-05/basic/messages","specification/2024-11-05/basic/transports",{"group":"Utilities","pages":["specification/2024-11-05/basic/utilities/cancellation","specification/2024-11-05/basic/utilities/ping","specification/2024-11-05/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/2024-11-05/client/roots","specification/2024-11-05/client/sampling"]},{"group":"Server Features","pages":["specification/2024-11-05/server/index","specification/2024-11-05/server/prompts","specification/2024-11-05/server/resources","specification/2024-11-05/server/tools",{"group":"Utilities","pages":["specification/2024-11-05/server/utilities/completion","specification/2024-11-05/server/utilities/logging","specification/2024-11-05/server/utilities/pagination"]}]}]},{"group":"draft","pages":["specification/draft/index","specification/draft/changelog","specification/draft/architecture/index",{"group":"Base Protocol","pages":["specification/draft/basic/index","specification/draft/basic/lifecycle","specification/draft/basic/transports","specification/draft/basic/authorization","specification/draft/basic/security_best_practices",{"group":"Utilities","pages":["specification/draft/basic/utilities/cancellation","specification/draft/basic/utilities/ping","specification/draft/basic/utilities/progress"]}]},{"group":"Client Features","pages":["specification/draft/client/roots","specification/draft/client/sampling"]},{"group":"Server Features","pages":["specification/draft/server/index","specification/draft/server/prompts","specification/draft/server/resources","specification/draft/server/tools",{"group":"Utilities","pages":["specification/draft/server/utilities/completion","specification/draft/server/utilities/logging","specification/draft/server/utilities/pagination"]}]}]},{"group":"Resources","pages":["specification/versioning","specification/contributing"]}]}]},"footer":{"socials":{"github":"https://github.com/modelcontextprotocol"}},"seo":{"metatags":{"og:image":"https://raw.githubusercontent.com/modelcontextprotocol/docs/2eb6171ddbfeefde349dc3b8d5e2b87414c26250/images/og-image.png"},"indexing":"navigable"},"redirects":[{"source":"/tutorials/building-a-client","destination":"/quickstart/client"},{"source":"/quickstart","destination":"/quickstart/server"},{"source":"/specification/latest","destination":"/specification/2025-03-26","permanent":false}],"contextual":{"options":["copy","view"]}},"pageMetadata":{"title":"For Client Developers","description":"Get started building your own client that can integrate with all MCP servers.","href":"/quickstart/client"}}},"entitlements":{"REMOVE_BRANDING":{"status":"ENABLED"}},"gitSource":{"type":"github","owner":"modelcontextprotocol","repo":"modelcontextprotocol","deployBranch":"main","contentDirectory":"docs","isPrivate":true},"banner":null,"buildId":"682fa3046d0b71604fc93f2c:success"},"__N_SSG":true},"page":"/_sites/[subdomain]/[[...slug]]","query":{"subdomain":"modelcontextprotocol.io","slug":["quickstart","client"]},"buildId":"rTNlc3N1jjUuGX8TQWQnB","assetPrefix":"/mintlify-assets","isFallback":false,"isExperimentalCompile":false,"gsp":true,"scriptLoader":[]}</script></html></body></html>